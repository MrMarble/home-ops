---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: longhorn
  namespace: longhorn-system
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://charts.longhorn.io
      chart: longhorn
      version: 1.5.0
      sourceRef:
        kind: HelmRepository
        name: longhorn
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    timeout: 15m
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    csi:
      attacherReplicaCount: 1
      provisionerReplicaCount: 1
      resizerReplicaCount: 1
      snapshotterReplicaCount: 1
    persistence:
      defaultClassReplicaCount: 2
      defaultFsType: ext4
      defaultClass: true
    defaultSettings:
      backupTarget: nfs://192.168.1.11:/mnt/Data/Longhorn
      defaultLonghornStaticStorageClass: longhorn
      defaultDataPath: /mnt/storage
      defaultReplicaCount: 2
      autoSalvage: true
      defaultDataLocality: best-effort
      storageMinimalAvailablePercentage: 5
      autoDeletePodWhenVolumeDetachedUnexpectedly: true
      allowVolumeCreationWithDegradedAvailability: true
      nodeDownPodDeletionPolicy: "delete-both-statefulset-and-deployment-pod"
      volumeAttachmentRecoveryPolicy: "wait"
      replicaReplenishmentWaitInterval: 120
      concurrentAutomaticEngineUpgradePerNodeLimit: 1
    longhornManager:
      priorityClass: system-node-critical
    longhornDriver:
      priorityClass: system-node-critical
      tolerations:
        - key: "node.kubernetes.io/unreachable"
          operator: "Exists"
          effect: "NoExecute"
          # Evict pods from the node if the node becomes unreachable after this toleration timer expires.
          tolerationSeconds: 15
    longhornUI:
      tolerations:
        - key: "node.kubernetes.io/unreachable"
          operator: "Exists"
          effect: "NoExecute"
          # Evict pods from the node if the node becomes unreachable after this toleration timer expires.
          tolerationSeconds: 15
    ingress:
      enabled: true
      ingressClassName: "traefik"
      host: "longhorn.${SECRET_DOMAIN}"
      tls: true
      tlsSecret: "longhorn-tls"
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-production" # Request SSL Certificate
        gethomepage.dev/enabled: "true"
        gethomepage.dev/name: "Longhorn"
        gethomepage.dev/group: "Storage"
        gethomepage.dev/icon: "longhorn"
        gethomepage.dev/href: "https://longhorn.${SECRET_DOMAIN}"
