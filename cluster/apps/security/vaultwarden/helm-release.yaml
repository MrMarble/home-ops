---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app vaultwarden
  namespace: security
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.2.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  dependsOn:
    - name: postgres
      namespace: databases
  values:
    env:
      TZ: "${TIMEZONE}"
      DATA_FOLDER: "config"
      DOMAIN: https://vault.${SECRET_DOMAIN}
      SIGNUPS_ALLOWED: "false"
      WEBSOCKET_ENABLED: "true"
      WEBSOCKET_ADDRESS: "0.0.0.0"
      WEBSOCKET_PORT: "3012"
      SHOW_PASSWORD_HINT: "false"
    initContainers:
      init-db:
        image: ghcr.io/onedr0p/postgres-initdb:14.6
        env:
          - name: POSTGRES_HOST
            value: postgres-rw.databases.svc.cluster.local
          - name: POSTGRES_DB
            value: vaultwarden
          - name: POSTGRES_SUPER_PASS
            valueFrom:
              secretKeyRef:
                name: postgres-superuser
                key: password
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: vaultwarden
                key: VAULTWARDEN_POSTGRES_USERNAME
          - name: POSTGRES_PASS
            valueFrom:
              secretKeyRef:
                name: vaultwarden
                key: VAULTWARDEN_POSTGRES_PASSWORD
    global:
      nameOverride: *app
    image:
      repository: vaultwarden/server
      tag: 1.26.0-alpine
    controller:
      strategy: RollingUpdate
    service:
      main:
        ports:
          http:
            port: &port 80
          websocket:
            enabled: true
            port: &websocket-port 3012
            protocol: TCP
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "form-textbox-password"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          external-dns.alpha.kubernetes.io/target: "${SECRET_DOMAIN}"
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          external-dns/is-public: "true"
        hosts:
          - host: &host "vault.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  port: *port
              - path: /notifications/hub/negotiate
                pathType: Prefix
                service:
                  port: *port
              - path: /notifications/hub
                pathType: Prefix
                service:
                  port: *websocket-port
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: vaultwarden-config-v1
    nodeSelector:
      node-role.kubernetes.io/worker: "true"
    resources:
      requests:
        cpu: 50m
        memory: 100Mi
      limits:
        memory: 200Mi
    envFrom:
      - secretRef:
          name: *app
