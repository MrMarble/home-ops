apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
      - services
      - pods
      - endpoints
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - list
      - watch
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools
      - ciliumbgppeeringpolicies
      - ciliumclusterwideenvoyconfigs
      - ciliumclusterwidenetworkpolicies
      - ciliumegressgatewaypolicies
      - ciliumendpoints
      - ciliumendpointslices
      - ciliumenvoyconfigs
      - ciliumidentities
      - ciliumlocalredirectpolicies
      - ciliumnetworkpolicies
      - ciliumnodes
      - ciliumnodeconfigs
    verbs:
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
      - ciliumendpoints
      - ciliumnodes
    verbs:
      - create
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
    verbs:
      - delete
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
      - ciliumnodes/status
    verbs:
      - get
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
      - ciliumendpoints/status
      - ciliumendpoints
    verbs:
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
      - delete
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
      - nodes/status
    verbs:
      - patch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services/status
    verbs:
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies
      - ciliumclusterwidenetworkpolicies
    verbs:
      - create
      - update
      - deletecollection
      - patch
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
    verbs:
      - patch
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
      - ciliumidentities
    verbs:
      - delete
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
    verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes/status
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpointslices
      - ciliumenvoyconfigs
    verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
      - patch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resourceNames:
      - ciliumloadbalancerippools.cilium.io
      - ciliumbgppeeringpolicies.cilium.io
      - ciliumclusterwideenvoyconfigs.cilium.io
      - ciliumclusterwidenetworkpolicies.cilium.io
      - ciliumegressgatewaypolicies.cilium.io
      - ciliumendpoints.cilium.io
      - ciliumendpointslices.cilium.io
      - ciliumenvoyconfigs.cilium.io
      - ciliumexternalworkloads.cilium.io
      - ciliumidentities.cilium.io
      - ciliumlocalredirectpolicies.cilium.io
      - ciliumnetworkpolicies.cilium.io
      - ciliumnodes.cilium.io
      - ciliumnodeconfigs.cilium.io
    resources:
      - customresourcedefinitions
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools/status
    verbs:
      - patch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: cilium
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
  - kind: ServiceAccount
    name: cilium
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
  - kind: ServiceAccount
    name: cilium-operator
    namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "false"
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: home-cluster
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: ""
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: vxlan
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxQOTFSd1luaUJIUDJyL3ZwVjU3bnd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURjeE5ERTNNVFV4TTFvWERUSTJNRGN4TXpFMwpNVFV4TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1di9Fa0pncTA1K2RPdm8rTkNIOWZvb3JoZ2YzdStwK0dyeXVRUzMvR2RtdnhoKzAKaDBJdlF4eTBYZ3cvNStYMGpsRTdqYzlhdWtKR3lBTk4rL01TeE13WWo2bGJ2VG5tWlNVU2w3L2hPRzB2QnI2RwpBeE53L3ErS0F0VnkvV3RYUU9kUnJVRzNNaXlEb1cvRkdqK1YyclJBK3JlWDRqVnBNalNRR1RsYkYwaVprWG4vClhzTTRFT2FVV3RGN1FiN1RDU1VYdERDM0tLdXc2aHY3c1ZXaHk4Z0t5V2xtb3laN0xkY3VkeDBMU1BHWExDNzYKS3dVcHVsandPRERsZWNBOTNqYVd5eHdiWkk2ZHRwLzZlNjU1OVB3Uit6MGdDanl6RnFScGU0WmtEcUsrSUFSRApQc0h5SlFDWmhCR243UnV2ZmRxallDYXpySlNtVkdTVFpxNEc1UUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRVk2L29zTytqVENPQllrRWkxNmxUcloxdkx6TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQnAvNldzMjYxcEtzTE0zQzIwZzdCaHIvQjI5M0pNcEF5R3RpMDhtV2JGNGtMUGdLd2F0LzJCCmU5TFhFRWI0Y2VnbU8wRlBnUEdhWWltVjhKaVRWbGJ5UmdHVFhMM0ptd0I4dzNHUER6Ukxlc2E5RXlidGxFeVoKOGp3TFp2ZlZuU2hDS0ZsdWZxMlhNYU8wRjNQa05HOWRqSURZM29nT2FWZmFhazYwWkw2ekZSclVWWFJ1V0Z0LwpjdHVWRm45TVhhTHVteXFLNE9FL3dvVEoxZXovdEk0N0dDUDFKaEVZc0d2M2hHTVJ3bXN5eDhjY0p1VFk1bkVYClF1eHVIQmEzUXhQWHdVUTlEMEhYNnAzOUZDN2RlbUtMdkU5dmNoeXlSMk5zdzVjNkYyTE82VmZpTlR6UDF6WXIKQWE1bGU1K3ZGOGdTTW96UHlYSzJoMmNVREZPc2ZnME0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNXYvRWtKZ3EwNStkT3ZvK05DSDlmb29yaGdmM3UrcCtHcnl1UVMzL0dkbXZ4aCswCmgwSXZReHkwWGd3LzUrWDBqbEU3amM5YXVrSkd5QU5OKy9NU3hNd1lqNmxidlRubVpTVVNsNy9oT0cwdkJyNkcKQXhOdy9xK0tBdFZ5L1d0WFFPZFJyVUczTWl5RG9XL0ZHaitWMnJSQStyZVg0alZwTWpTUUdUbGJGMGlaa1huLwpYc000RU9hVVd0RjdRYjdUQ1NVWHREQzNLS3V3Nmh2N3NWV2h5OGdLeVdsbW95WjdMZGN1ZHgwTFNQR1hMQzc2Ckt3VXB1bGp3T0REbGVjQTkzamFXeXh3YlpJNmR0cC82ZTY1NTlQd1IrejBnQ2p5ekZxUnBlNFprRHFLK0lBUkQKUHNIeUpRQ1poQkduN1J1dmZkcWpZQ2F6ckpTbVZHU1RacTRHNVFJREFRQUJBb0lCQVFDeVJBL2R4cERHWUJkbQp2RmZrdzVadFlSUFZpN0NUUkpPczdvOUxuY09RbjM0VzE4RHA0Um00SVI3UXRZTmI0d3FvQ2VoN3Q5bThoQWs3CnNkRXM3cGs5Wm9STjJkVUNZdng2Y2ZHM1NrejB6czNMMXB4MUl6dkFVSmVoT0RoVmVkRU1OWGZDelVRalpGYncKN3VDZE1SVGtndGJpcFd5QkZkYm85OGQ4cjlhc1Q5TVRKQjFHbEJObmNLK1U2VGlHY2l6dGJybmVRbTlNRVFuKwpEZVBrZE1WREoyeEFHVHhGUXcvZzhrOXEwR0tlR29xdHdzOVVPNWcwYzV0YjQ0VlcyenhFcnNPMkgvNDVNZzEyCnIrL1ZUY2RPdjVXTTVWZ1daNFhlVjkwU3hTMTVDT2hobXRacEsza1FySFRuTUp6Q0NRQjl6c2ErRElVdXZMMWcKUFcvUDJCVEJBb0dCQVB6eGNlcHgrUk1NUFJuOXBRdHEwTVdmRmV0RUFJME85amVLYW03MWIrOStxV3U3aXRiMgo5U2VEdWZLS2JmZFdiYTgyQXkyZkttbmpVV2ZFMmhtYStxOHpVNVB4S0dXSHJza1oxV1NoOHpxenJ0cnprY2d1CnIrQ0N3YVR5R2dFZ0VZSlFpdlVLbzd2bk1iekJOMG1kU2o4c2ZqS3JORjBDR0VVbGNqcXdSVXlIQW9HQkFPbksKYnJDd25BTXdObHdnb2JnVTZXdEh2aVpNYVJ4WEdHamJadDZ1VkIwVlFWNGxQekoyMDFzWVU1TVV4Z0tmcmc1TwpzOTgzK2tWMzVBL0lUTlFveW50UDRlcHpGR2c3RDVSRHVBR2VJeGJ3N1hkdXRlMWhsZWwzb2dCVkdDaWhXcmpoCjEzUHNXcDNzb1kvM2pESXBFOEVid0ZyditEdjIyTTQxREFUbm0vZ3pBb0dBVVBvbkl3eEwxaHBEOFc4dmlHRXcKNXlPUUM5cWdab2hVc09GQ1E3V1ZtVkd1Z1l2djNmUC85aCtJeHlva0hGdnlEM2EyTzhQSiswNUlBSFdYOFR5WgpacitDMFVrU1NyYk9jUmt4Sk45b0UvSDBWNnBFa0piSnZaRisxd1NlNko5UW02eVhYKzJCRDZYcldXZHVBTVkzClA5Ukpyb1Q2NVkvSEgxUG1wdjFKb2o4Q2dZQkFCTmpPdFczalNaNTVGODV3OC9qL0VZUTJSSkk3Mm5XcXNQbTQKWEpCWDdtd1o5YVVha29OSjNKMTJGeWdwcThRajB0VmFlSitseWpDL1NhQVFNS05ScFF3K0FRbERpWGk0cHRxSwpSdDFnK05SdDhma0xhYjk5VU84aG5DdWpaSnZOS0xxdzJiWHVyTStJOXNhRExkQmsvczVybUc2bkxPOHRlRVUwClNwL2hGUUtCZ1FEYml4dkNrNEdla1lxdmI2NGVVNCsyVldRUHV0b1dTbncrcUxibW9SNk9FTjN2VDloN0JMU2cKelFhWUpCdFhSMFFOTDBPQTRvNXg2cEsxSkpCZ0kzQitYazBIWUxLbW5KSksvNGNpMlJCWGpwdkdDWm5hTmFDSwp1cnpsMXNoVXhNVS9DdndKZVpNdEVqQ1VlQXN2bU5VTkFVcVdCemJ4K21RV01LQVk3blVBdGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxQOTFSd1luaUJIUDJyL3ZwVjU3bnd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURjeE5ERTNNVFV4TTFvWERUSTJNRGN4TXpFMwpNVFV4TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1di9Fa0pncTA1K2RPdm8rTkNIOWZvb3JoZ2YzdStwK0dyeXVRUzMvR2RtdnhoKzAKaDBJdlF4eTBYZ3cvNStYMGpsRTdqYzlhdWtKR3lBTk4rL01TeE13WWo2bGJ2VG5tWlNVU2w3L2hPRzB2QnI2RwpBeE53L3ErS0F0VnkvV3RYUU9kUnJVRzNNaXlEb1cvRkdqK1YyclJBK3JlWDRqVnBNalNRR1RsYkYwaVprWG4vClhzTTRFT2FVV3RGN1FiN1RDU1VYdERDM0tLdXc2aHY3c1ZXaHk4Z0t5V2xtb3laN0xkY3VkeDBMU1BHWExDNzYKS3dVcHVsandPRERsZWNBOTNqYVd5eHdiWkk2ZHRwLzZlNjU1OVB3Uit6MGdDanl6RnFScGU0WmtEcUsrSUFSRApQc0h5SlFDWmhCR243UnV2ZmRxallDYXpySlNtVkdTVFpxNEc1UUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRVk2L29zTytqVENPQllrRWkxNmxUcloxdkx6TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQnAvNldzMjYxcEtzTE0zQzIwZzdCaHIvQjI5M0pNcEF5R3RpMDhtV2JGNGtMUGdLd2F0LzJCCmU5TFhFRWI0Y2VnbU8wRlBnUEdhWWltVjhKaVRWbGJ5UmdHVFhMM0ptd0I4dzNHUER6Ukxlc2E5RXlidGxFeVoKOGp3TFp2ZlZuU2hDS0ZsdWZxMlhNYU8wRjNQa05HOWRqSURZM29nT2FWZmFhazYwWkw2ekZSclVWWFJ1V0Z0LwpjdHVWRm45TVhhTHVteXFLNE9FL3dvVEoxZXovdEk0N0dDUDFKaEVZc0d2M2hHTVJ3bXN5eDhjY0p1VFk1bkVYClF1eHVIQmEzUXhQWHdVUTlEMEhYNnAzOUZDN2RlbUtMdkU5dmNoeXlSMk5zdzVjNkYyTE82VmZpTlR6UDF6WXIKQWE1bGU1K3ZGOGdTTW96UHlYSzJoMmNVREZPc2ZnME0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNXYvRWtKZ3EwNStkT3ZvK05DSDlmb29yaGdmM3UrcCtHcnl1UVMzL0dkbXZ4aCswCmgwSXZReHkwWGd3LzUrWDBqbEU3amM5YXVrSkd5QU5OKy9NU3hNd1lqNmxidlRubVpTVVNsNy9oT0cwdkJyNkcKQXhOdy9xK0tBdFZ5L1d0WFFPZFJyVUczTWl5RG9XL0ZHaitWMnJSQStyZVg0alZwTWpTUUdUbGJGMGlaa1huLwpYc000RU9hVVd0RjdRYjdUQ1NVWHREQzNLS3V3Nmh2N3NWV2h5OGdLeVdsbW95WjdMZGN1ZHgwTFNQR1hMQzc2Ckt3VXB1bGp3T0REbGVjQTkzamFXeXh3YlpJNmR0cC82ZTY1NTlQd1IrejBnQ2p5ekZxUnBlNFprRHFLK0lBUkQKUHNIeUpRQ1poQkduN1J1dmZkcWpZQ2F6ckpTbVZHU1RacTRHNVFJREFRQUJBb0lCQVFDeVJBL2R4cERHWUJkbQp2RmZrdzVadFlSUFZpN0NUUkpPczdvOUxuY09RbjM0VzE4RHA0Um00SVI3UXRZTmI0d3FvQ2VoN3Q5bThoQWs3CnNkRXM3cGs5Wm9STjJkVUNZdng2Y2ZHM1NrejB6czNMMXB4MUl6dkFVSmVoT0RoVmVkRU1OWGZDelVRalpGYncKN3VDZE1SVGtndGJpcFd5QkZkYm85OGQ4cjlhc1Q5TVRKQjFHbEJObmNLK1U2VGlHY2l6dGJybmVRbTlNRVFuKwpEZVBrZE1WREoyeEFHVHhGUXcvZzhrOXEwR0tlR29xdHdzOVVPNWcwYzV0YjQ0VlcyenhFcnNPMkgvNDVNZzEyCnIrL1ZUY2RPdjVXTTVWZ1daNFhlVjkwU3hTMTVDT2hobXRacEsza1FySFRuTUp6Q0NRQjl6c2ErRElVdXZMMWcKUFcvUDJCVEJBb0dCQVB6eGNlcHgrUk1NUFJuOXBRdHEwTVdmRmV0RUFJME85amVLYW03MWIrOStxV3U3aXRiMgo5U2VEdWZLS2JmZFdiYTgyQXkyZkttbmpVV2ZFMmhtYStxOHpVNVB4S0dXSHJza1oxV1NoOHpxenJ0cnprY2d1CnIrQ0N3YVR5R2dFZ0VZSlFpdlVLbzd2bk1iekJOMG1kU2o4c2ZqS3JORjBDR0VVbGNqcXdSVXlIQW9HQkFPbksKYnJDd25BTXdObHdnb2JnVTZXdEh2aVpNYVJ4WEdHamJadDZ1VkIwVlFWNGxQekoyMDFzWVU1TVV4Z0tmcmc1TwpzOTgzK2tWMzVBL0lUTlFveW50UDRlcHpGR2c3RDVSRHVBR2VJeGJ3N1hkdXRlMWhsZWwzb2dCVkdDaWhXcmpoCjEzUHNXcDNzb1kvM2pESXBFOEVid0ZyditEdjIyTTQxREFUbm0vZ3pBb0dBVVBvbkl3eEwxaHBEOFc4dmlHRXcKNXlPUUM5cWdab2hVc09GQ1E3V1ZtVkd1Z1l2djNmUC85aCtJeHlva0hGdnlEM2EyTzhQSiswNUlBSFdYOFR5WgpacitDMFVrU1NyYk9jUmt4Sk45b0UvSDBWNnBFa0piSnZaRisxd1NlNko5UW02eVhYKzJCRDZYcldXZHVBTVkzClA5Ukpyb1Q2NVkvSEgxUG1wdjFKb2o4Q2dZQkFCTmpPdFczalNaNTVGODV3OC9qL0VZUTJSSkk3Mm5XcXNQbTQKWEpCWDdtd1o5YVVha29OSjNKMTJGeWdwcThRajB0VmFlSitseWpDL1NhQVFNS05ScFF3K0FRbERpWGk0cHRxSwpSdDFnK05SdDhma0xhYjk5VU84aG5DdWpaSnZOS0xxdzJiWHVyTStJOXNhRExkQmsvczVybUc2bkxPOHRlRVUwClNwL2hGUUtCZ1FEYml4dkNrNEdla1lxdmI2NGVVNCsyVldRUHV0b1dTbncrcUxibW9SNk9FTjN2VDloN0JMU2cKelFhWUpCdFhSMFFOTDBPQTRvNXg2cEsxSkpCZ0kzQitYazBIWUxLbW5KSksvNGNpMlJCWGpwdkdDWm5hTmFDSwp1cnpsMXNoVXhNVS9DdndKZVpNdEVqQ1VlQXN2bU5VTkFVcVdCemJ4K21RV01LQVk3blVBdGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUxQOTFSd1luaUJIUDJyL3ZwVjU3bnd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURjeE5ERTNNVFV4TTFvWERUSTJNRGN4TXpFMwpNVFV4TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE1di9Fa0pncTA1K2RPdm8rTkNIOWZvb3JoZ2YzdStwK0dyeXVRUzMvR2RtdnhoKzAKaDBJdlF4eTBYZ3cvNStYMGpsRTdqYzlhdWtKR3lBTk4rL01TeE13WWo2bGJ2VG5tWlNVU2w3L2hPRzB2QnI2RwpBeE53L3ErS0F0VnkvV3RYUU9kUnJVRzNNaXlEb1cvRkdqK1YyclJBK3JlWDRqVnBNalNRR1RsYkYwaVprWG4vClhzTTRFT2FVV3RGN1FiN1RDU1VYdERDM0tLdXc2aHY3c1ZXaHk4Z0t5V2xtb3laN0xkY3VkeDBMU1BHWExDNzYKS3dVcHVsandPRERsZWNBOTNqYVd5eHdiWkk2ZHRwLzZlNjU1OVB3Uit6MGdDanl6RnFScGU0WmtEcUsrSUFSRApQc0h5SlFDWmhCR243UnV2ZmRxallDYXpySlNtVkdTVFpxNEc1UUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRVk2L29zTytqVENPQllrRWkxNmxUcloxdkx6TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQnAvNldzMjYxcEtzTE0zQzIwZzdCaHIvQjI5M0pNcEF5R3RpMDhtV2JGNGtMUGdLd2F0LzJCCmU5TFhFRWI0Y2VnbU8wRlBnUEdhWWltVjhKaVRWbGJ5UmdHVFhMM0ptd0I4dzNHUER6Ukxlc2E5RXlidGxFeVoKOGp3TFp2ZlZuU2hDS0ZsdWZxMlhNYU8wRjNQa05HOWRqSURZM29nT2FWZmFhazYwWkw2ekZSclVWWFJ1V0Z0LwpjdHVWRm45TVhhTHVteXFLNE9FL3dvVEoxZXovdEk0N0dDUDFKaEVZc0d2M2hHTVJ3bXN5eDhjY0p1VFk1bkVYClF1eHVIQmEzUXhQWHdVUTlEMEhYNnAzOUZDN2RlbUtMdkU5dmNoeXlSMk5zdzVjNkYyTE82VmZpTlR6UDF6WXIKQWE1bGU1K3ZGOGdTTW96UHlYSzJoMmNVREZPc2ZnME0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZVENDQWttZ0F3SUJBZ0lSQU1BTmFaL2lhTFNLWTZRcHFyNnNWbzR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURjeE5ERTNNVFV4TTFvWERUSTJNRGN4TXpFMwpNVFV4TTFvd0x6RXRNQ3NHQTFVRUF3d2tLaTVvYjIxbExXTnNkWE4wWlhJdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF4UnY5VGEra3Z5aUgKR2VDYnlCZlkxeXRhQ2RsT3N5QlN2cTkxemNEVUlFcVd0UDUyOE5yMUxobnRoZmYyVDBpOXJnSW9JTFVFWVBiYQo1N2pPWWt6VEM0bXpYNDAwVHlrWC94eWRJVG4zN3ZDSlFUMG45eG9VQWxOd0ZxYVYxdnprQ2pUY1h4azBuNUllCmpIUnAzZXl4ekJwQmpoTzJEZlVkR0VrQUJKSzFOdTBWZTZNcytCVUtSajFDWmN3bUR2eGx1MG02NGhNdmJVWjUKa3hYOGJYd2NtVzY4UE9uQk40MnpCZ0hLL1FrbTNZblMwT2txcy91cTRHWHgxc2c0M3QyS1ZJQUhCWHc2U1VoSQpNQlFBdFNzNlBjVDlTamxseEljN2pqUSsxblgvU3FBanBPQ09yMndIRE1qMkRoRTZmTXYvaEN5SEtMaExyVFd4CjFXVkhWZjNwV1FJREFRQUJvNEdTTUlHUE1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlJHT3Y2TApEdm8wd2pnV0pCSXRlcFU2MmRieTh6QXZCZ05WSFJFRUtEQW1naVFxTG1odmJXVXRZMngxYzNSbGNpNW9kV0ppCmJHVXRaM0p3WXk1amFXeHBkVzB1YVc4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFOS25tQmVwRTN2NUEyRFQKUkxzR3pPbEVwT2JsTElMaUJKMiswRTlUNTk2YXJlaWFLRHE4OXM0UWhXZ1RJcXZucWlqTGVvcm9VS0hJYTFGYgpjQWNIdXJZTHpXMitiSWtkVkh1NDBvRGtjMC82WE1EYUUyeXJuQ0cxT1cyZ25vOGRlaUZNZDFoMmhoRFJMTW1WCldSdkRiOTN4dnd6TldoTUJKSEgvRFh4bHhXOTlpM0k5dW1MZ2tLY2FZM1oyMkFvYjBvWU0zblBNQTJCNE1XR3EKSkZuT0tqdzh5ZWpMTzZkcUlubW92anNEU2RGSnVCazJkdmwxT3EwKzJvRWNVZUJkUERXYlF4bzZLYXluOG8yNAp4VXQ3NXdlNWNkb3ovQVAxRkhuZmdhZTlkdTB4TEkxb2M4WDRDb3lRWnlreDFKbVpwUGVhMEJDZUtJbmtqUEpTCm9Pb3BNUHc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBeFJ2OVRhK2t2eWlIR2VDYnlCZlkxeXRhQ2RsT3N5QlN2cTkxemNEVUlFcVd0UDUyCjhOcjFMaG50aGZmMlQwaTlyZ0lvSUxVRVlQYmE1N2pPWWt6VEM0bXpYNDAwVHlrWC94eWRJVG4zN3ZDSlFUMG4KOXhvVUFsTndGcWFWMXZ6a0NqVGNYeGswbjVJZWpIUnAzZXl4ekJwQmpoTzJEZlVkR0VrQUJKSzFOdTBWZTZNcworQlVLUmoxQ1pjd21EdnhsdTBtNjRoTXZiVVo1a3hYOGJYd2NtVzY4UE9uQk40MnpCZ0hLL1FrbTNZblMwT2txCnMvdXE0R1h4MXNnNDN0MktWSUFIQlh3NlNVaElNQlFBdFNzNlBjVDlTamxseEljN2pqUSsxblgvU3FBanBPQ08KcjJ3SERNajJEaEU2Zk12L2hDeUhLTGhMclRXeDFXVkhWZjNwV1FJREFRQUJBb0lCQUQ5K1Y2ZEp1Q0VYdGdWZwo4KzJOdVB6KzZ2OFhNQ0hGZk1JT0ZUMlZLdi9INXlvZ2VrSDExbHJtWVR2eGR6ZHM4Q1Q0YnVLeVRObkxTeEt2CjFsT1YrYm5TdnFRK0FTYXF6eDhQb1pJTmNVOVh6bTdrZTFZKzRVa3FoWVhXWFpnbVdITHRPanVzQythSEZDNGMKWmVubUVCUDJOVDNHSGJQN1RFY0JaTzhVTHlta3ZieE55N3ZOTEZacFIwa1VjNS9PSnpPdkJua2VGTkszaDY1Qwo2ZUhrN2pmbk9tMURGRnloa0NOaFBvRCtvVVB2VDFMZ0U3dUxVZDNxR0pkOVU0UDdKMGMwNjZZREV5S2hPKzJtCkZBMnRGL2FpampyNGxqZFFtS2M3cVJteUN2Z0hwVTI3Y2ZvSEkvSzJmTUNpSVZidGJOMVA2eCt2UW1nY2lkbHcKRnRUUFM2MENnWUVBL0hVZE56WklWc0FONU5udWJxZ3ZHazVvaktwRzgwV2VyVHlXcVdNR3E1QTRWOXQ1ZzNtWAp5bTBwL1RQcWtGVDZxWVEwczc1S21BRlFTeWZKUzZLV0pqSzBHQ0RnTVJYQXY3MkRDNEttS3M0K2N4ZUM1NGRoCkUzcUlFSjJJaHYyeHl2R0JndjVZbUZmc0NRNHV0UWxCMjBaVWlWV2xZT2hJekdFZU5RaWwzVDhDZ1lFQXgrQU4KVFZPVmhra2lJNk4zbW8vYU9LUytPdnc5Q1FoVUtHRXZoTmlpUENxL3BZZWJMRkhuUUNaelFObVY0bHBUbE05VApVQmxxVmVjNHlZY1d3VVlMYkUwRE96Rm93NG53QWRKbW8rM29MRzdnWmQrS1RXVWVyK1QxUE9wTVpqZ2RYbGpUCm5yNFpKTzV2Q3dMSTAyay9ScHhsVHBwbkZjMGZtL3NUUUpERDIyY0NnWUJWM0RyWWVVUzNCRkIxWWMwZW8yS0oKcnRzTjVDZUhPMGxSSDhjWnlzME04bHJIUHFTZ0cyMk5jZjBTMldKUVBpYVdHcG1WL0FVQWw0bklWYnEzVjQ5NwpaRWt0MzVoLytTYjV6eWxQYzlxeHVqMHhCWEVHNzFzTHRlT3F5dmtRK0IxTXFVQmozYjhoNk4wazQwYnRXVDJsCnB0Qy9lSHByYi9TNlZkbGhMaFRESHdLQmdEN1NybnVxbE9ualhNYWszN2dHRlFvT3hmZ1dSanpya0VBczQ5bTIKbWErZHBDVXNMVnJOMTRpelRUQ0o4M0YxQUtaYVVBNXlIcGtubHhMSTBoOG5tL21MYjBPUXNTUWMzQUpHbHBwWgo4Y3JkZ3N5aWFYOFFGSWdteCtwQW5valdoR3llTU0zSlpHL1dQYkxSU2p3ZzdaR05JTTZHKzNXL3hucXBmUkNqCkw5eHJBb0dBSk84SlhpZjIwVWYxeEZwNDdGaE1JazNsT3YvRHJJZTVKRm0zVjUxZWJ1QktlT2JYZmJjdTVKc0EKNXpiMW9ZcmJxTVZRMVN6Tis0RGs3Tk1lNWs1WkJaWTBaMC9mbUxzdEYvUi9UK2Y2ZnRLUm1jbStpRHc2aXNLRQppRVFHSFJ0K3NyUWdZYUYzQ1dsRGl3Mm50Nzh5STFtYnFFZ1dHcVBybHFwME1HNlROaEE9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
    - name: peer-service
      port: 443
      protocol: TCP
      targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  io.cilium/app: operator
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
        - args:
            - --config-dir=/tmp/cilium/config-map
            - --debug=$(CILIUM_DEBUG)
          command:
            - cilium-operator-generic
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_DEBUG
              valueFrom:
                configMapKeyRef:
                  key: debug
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: 10.96.0.1
            - name: KUBERNETES_SERVICE_PORT
              value: "443"
          image: quay.io/cilium/operator-generic:v1.13.4@sha256:09ab77d324ef4d31f7d341f97ec5a2a4860910076046d57a2d61494d426c6301
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 9234
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 3
          name: cilium-operator
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /tmp/cilium/config-map
              name: cilium-config-path
              readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
        - operator: Exists
      volumes:
        - configMap:
            name: cilium-config
          name: cilium-config-path
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  k8s-app: cilium
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
        - args:
            - --config-dir=/tmp/cilium/config-map
          command:
            - cilium-agent
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_CLUSTERMESH_CONFIG
              value: /var/lib/cilium/clustermesh/
            - name: CILIUM_CNI_CHAINING_MODE
              valueFrom:
                configMapKeyRef:
                  key: cni-chaining-mode
                  name: cilium-config
                  optional: true
            - name: CILIUM_CUSTOM_CNI_CONF
              valueFrom:
                configMapKeyRef:
                  key: custom-cni-conf
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: 10.96.0.1
            - name: KUBERNETES_SERVICE_PORT
              value: "443"
          image: quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b
          imagePullPolicy: IfNotPresent
          lifecycle:
            postStart:
              exec:
                command:
                  - bash
                  - -c
                  - |
                    /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
            preStop:
              exec:
                command:
                  - /cni-uninstall.sh
          livenessProbe:
            failureThreshold: 10
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: cilium-agent
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          securityContext:
            capabilities:
              add:
                - CHOWN
                - KILL
                - NET_ADMIN
                - NET_RAW
                - IPC_LOCK
                - SYS_ADMIN
                - SYS_RESOURCE
                - DAC_OVERRIDE
                - FOWNER
                - SETGID
                - SETUID
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          startupProbe:
            failureThreshold: 105
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /host/proc/sys/net
              name: host-proc-sys-net
            - mountPath: /host/proc/sys/kernel
              name: host-proc-sys-kernel
            - mountPath: /sys/fs/bpf
              mountPropagation: HostToContainer
              name: bpf-maps
            - mountPath: /sys/fs/cgroup
              name: cilium-cgroup
            - mountPath: /var/run/cilium
              name: cilium-run
            - mountPath: /host/etc/cni/net.d
              name: etc-cni-netd
            - mountPath: /var/lib/cilium/clustermesh
              name: clustermesh-secrets
              readOnly: true
            - mountPath: /lib/modules
              name: lib-modules
              readOnly: true
            - mountPath: /run/xtables.lock
              name: xtables-lock
            - mountPath: /var/lib/cilium/tls/hubble
              name: hubble-tls
              readOnly: true
            - mountPath: /tmp
              name: tmp
      hostNetwork: true
      initContainers:
        - command:
            - cilium
            - build-config
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: KUBERNETES_SERVICE_HOST
              value: 10.96.0.1
            - name: KUBERNETES_SERVICE_PORT
              value: "443"
          image: quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b
          imagePullPolicy: IfNotPresent
          name: config
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /tmp
              name: tmp
        - args:
            - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
          command:
            - /bin/bash
            - -c
            - --
          image: quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b
          imagePullPolicy: IfNotPresent
          name: mount-bpf-fs
          securityContext:
            privileged: true
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /sys/fs/bpf
              mountPropagation: Bidirectional
              name: bpf-maps
        - command:
            - /init-container.sh
          env:
            - name: CILIUM_ALL_STATE
              valueFrom:
                configMapKeyRef:
                  key: clean-cilium-state
                  name: cilium-config
                  optional: true
            - name: CILIUM_BPF_STATE
              valueFrom:
                configMapKeyRef:
                  key: clean-cilium-bpf-state
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: 10.96.0.1
            - name: KUBERNETES_SERVICE_PORT
              value: "443"
          image: quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b
          imagePullPolicy: IfNotPresent
          name: clean-cilium-state
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
                - SYS_ADMIN
                - SYS_RESOURCE
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /sys/fs/bpf
              name: bpf-maps
            - mountPath: /sys/fs/cgroup
              mountPropagation: HostToContainer
              name: cilium-cgroup
            - mountPath: /var/run/cilium
              name: cilium-run
        - command:
            - /install-plugin.sh
          image: quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b
          imagePullPolicy: IfNotPresent
          name: install-cni-binaries
          resources:
            requests:
              cpu: 100m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /host/opt/cni/bin
              name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
        - operator: Exists
      volumes:
        - emptyDir: {}
          name: tmp
        - hostPath:
            path: /var/run/cilium
            type: DirectoryOrCreate
          name: cilium-run
        - hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
          name: bpf-maps
        - hostPath:
            path: /sys/fs/cgroup
            type: DirectoryOrCreate
          name: cilium-cgroup
        - hostPath:
            path: /opt/cni/bin
            type: DirectoryOrCreate
          name: cni-path
        - hostPath:
            path: /etc/cni/net.d
            type: DirectoryOrCreate
          name: etc-cni-netd
        - hostPath:
            path: /lib/modules
          name: lib-modules
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - name: clustermesh-secrets
          secret:
            defaultMode: 256
            optional: true
            secretName: cilium-clustermesh
        - hostPath:
            path: /proc/sys/net
            type: Directory
          name: host-proc-sys-net
        - hostPath:
            path: /proc/sys/kernel
            type: Directory
          name: host-proc-sys-kernel
        - name: hubble-tls
          projected:
            defaultMode: 256
            sources:
              - secret:
                  items:
                    - key: ca.crt
                      path: client-ca.crt
                    - key: tls.crt
                      path: server.crt
                    - key: tls.key
                      path: server.key
                  name: hubble-server-certs
                  optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
