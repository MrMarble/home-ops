# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
      - services
      - pods
      - endpoints
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - list
      - watch
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools
      - ciliumbgppeeringpolicies
      - ciliumclusterwideenvoyconfigs
      - ciliumclusterwidenetworkpolicies
      - ciliumegressgatewaypolicies
      - ciliumendpoints
      - ciliumendpointslices
      - ciliumenvoyconfigs
      - ciliumidentities
      - ciliumlocalredirectpolicies
      - ciliumnetworkpolicies
      - ciliumnodes
      - ciliumnodeconfigs
      - ciliumcidrgroups
      - ciliuml2announcementpolicies
      - ciliumpodippools
    verbs:
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
      - ciliumendpoints
      - ciliumnodes
    verbs:
      - create
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
    verbs:
      - delete
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
      - ciliumnodes/status
    verbs:
      - get
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
      - ciliumendpoints/status
      - ciliumendpoints
      - ciliuml2announcementpolicies/status
    verbs:
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
      - delete
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
      - nodes/status
    verbs:
      - patch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services/status
    verbs:
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies
      - ciliumclusterwidenetworkpolicies
    verbs:
      - create
      - update
      - deletecollection
      - patch
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
    verbs:
      - patch
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
      - ciliumidentities
    verbs:
      - delete
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
    verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes/status
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpointslices
      - ciliumenvoyconfigs
    verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
      - patch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resourceNames:
      - ciliumloadbalancerippools.cilium.io
      - ciliumbgppeeringpolicies.cilium.io
      - ciliumclusterwideenvoyconfigs.cilium.io
      - ciliumclusterwidenetworkpolicies.cilium.io
      - ciliumegressgatewaypolicies.cilium.io
      - ciliumendpoints.cilium.io
      - ciliumendpointslices.cilium.io
      - ciliumenvoyconfigs.cilium.io
      - ciliumexternalworkloads.cilium.io
      - ciliumidentities.cilium.io
      - ciliumlocalredirectpolicies.cilium.io
      - ciliumnetworkpolicies.cilium.io
      - ciliumnodes.cilium.io
      - ciliumnodeconfigs.cilium.io
      - ciliumcidrgroups.cilium.io
      - ciliuml2announcementpolicies.cilium.io
      - ciliumpodippools.cilium.io
    resources:
      - customresourcedefinitions
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools
      - ciliumpodippools
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumpodippools
    verbs:
      - create
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools/status
    verbs:
      - patch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - componentstatuses
      - endpoints
      - namespaces
      - nodes
      - pods
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - "*"
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: cilium
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
  - kind: ServiceAccount
    name: cilium
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
  - kind: ServiceAccount
    name: cilium-operator
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
  - kind: ServiceAccount
    name: hubble-ui
    namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: dsr
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: home-cluster
  cni-exclusive: "false"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "false"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bandwidth-manager: "true"
  enable-bbr: "true"
  enable-bgp-control-plane: "true"
  enable-bpf-clock-probe: "false"
  enable-bpf-masquerade: "true"
  enable-bpf-tproxy: "true"
  enable-endpoint-health-checking: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  endpoint-status: policy
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA drop tcp flow port-distribution icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.244.0.0/16
  k8s-client-burst: "10"
  k8s-client-qps: "5"
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: native
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml:
    "cluster-name: home-cluster\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf:
    "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRV2VUeFo4MVpKSkNXRnhVUWgxSk1qakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TnpJNE1EWXhOVE15V2hjTk1qWXdOekkzTURZeApOVE15V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2doT1M2aFU4YkRpTjNLY2dxbkFhRFB2UVRmVzNkTHVNakdDR3NvQ3JPa2FLTkVxM0cKUUZYRXlHK3JybFhrNXE0UmtmcGRYMlo2eUtMUkNJdVhQMjFzNWtQeDNNbElUMGM5R3JObW10cE1lQU5WTnBKRgp3T0E4bmI4bXJnVVpwN3cvb1NibWJBbUd2MHJmcmhEcDJDbncyUzk4UWRvTnJWcTJleWJVWWU5VndCS0pkV296CndIM2tDb0lwSndDYWFXU1owNjNSbldtZVIwZkdFYTNvRGdxYWpReDRGOUx0aWtFdC9XWjZZODlkSEx0WjE5Mk4KbC93a2JjaEF6T3dMNDhiVytlTEdZU3p3UVJndWZMQ3JMRFh1MlY5SUkwd1oyQWpFclA2b3pFZUl2QVdqK082cwpaM0pvcHRSU3NHZjAxZWU4Q1BiVmR4dlhBbUNVUGdCTHQxc1pBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVFSTNrUGtHYzI5eDZzb2t1NlBRK2M5dzhTRUV3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFEcHZYOEJCd3RXUDh0MXBTK1VwaU1jK00zUldPVHFSRVNuNk5LS3lHMkgxRTJyQW45NjVqU1dtCjhwVEhEdVhIT1QyMFJ3VnNCQWc2U3lFUEZJL1NxNndXL3lWdXdabUY3OHpKSXlSSDRndzRZVGhmSW1hMVpBb3IKOEhnYlp4cFVZYjVSYlhuUnFUbktTVXVvQ0lEZk9CZVF5UW1ZdnVRMWtwU0lGUVNabGh5T3RiOU1CUkx6dGQxegpLSkl5eVRmY29ZUWZJU2d3bTIxL3lXTXpLSHhVYnppb2hzMkk3azdvdXV5bEdrNWdXMVNiRmsvV0Z4R3hhSElBCnNMcFh1VHcrWFM5YWV6YUF5OUlIU3ZwNU1meUcxSlRHSy80SWN6cSs5U3ViVWI0Tm9LT2RWLytzemhVRGJzVzEKUVpDODJ1ekxkNzdjMStRclVObjUwc1FrTTVPZTg2ND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBb0lUa3VvVlBHdzRqZHluSUtwd0dnejcwRTMxdDNTN2pJeGdocktBcXpwR2lqUkt0CnhrQlZ4TWh2cTY1VjVPYXVFWkg2WFY5bWVzaWkwUWlMbHo5dGJPWkQ4ZHpKU0U5SFBScXpacHJhVEhnRFZUYVMKUmNEZ1BKMi9KcTRGR2FlOFA2RW01bXdKaHI5SzM2NFE2ZGdwOE5rdmZFSGFEYTFhdG5zbTFHSHZWY0FTaVhWcQpNOEI5NUFxQ0tTY0FtbWxrbWRPdDBaMXBua2RIeGhHdDZBNEttbzBNZUJmUzdZcEJMZjFtZW1QUFhSeTdXZGZkCmpaZjhKRzNJUU16c0MrUEcxdm5peG1FczhFRVlMbnl3cXl3MTd0bGZTQ05NR2RnSXhLeitxTXhIaUx3Rm8vanUKckdkeWFLYlVVckJuOU5YbnZBajIxWGNiMXdKZ2xENEFTN2RiR1FJREFRQUJBb0lCQURXZGJkQ25Lazc5SC9kegphenBnTndTcmlGYmlORW9HbVRObG9nbkl6Y09GZldmbGIwbWl2NE1rOTdlK1dVNUZocXF6dVk1cWlRNUY2YXdzClVJUEtXY0JnQVIzT0F5VTE1Yk9STVk3NTlpUklpY1J5bjlUUW9aVmRrelZXTnJuay9zbTZDQVk2Mjh1NEpVZ2wKR2QwaHFKQ2IybktFaEZMQkxtVjVLUFVUYVIrWXFxeitTbUxGWGcxWUpXNFFhQi9sTnVCUHZvRkN1QzczK2FmdwpGelU4YmJRY3grZ2JRWVpSOU5vN3pUZFlOZjNObkxJeG1Cdkh5VUlOTVk3Skc5djRIdjRCVkk0bmgrOUI2ZzV1ClkrNm1XMFU0R1lScjAwSG56Z0xFakNPY2prRFN3RGdHSDBmaGVibVk2TkQxeE5qNzlmQlZ3RjRpV1Irb29WN3QKaUhxVWhFa0NnWUVBeTFZWEI0MVQ0dEZ2d05rQytiNzhpbmdVMm9LTnFlcUJWSjRvYlpyc09KNEtMV3JzV2RrZgo2Q2Zyanh0Q3dIUnRnL2YvZnVJb3ZxTXRXU0Z1SnJjeG9KdlR6VVh0MHhNdVh1bnhuUDhhQWRHQlZwR05nZTdsCnlxWmdSTzRqUkhMZ2hOL21WbmsyV0FVRWozWHJ6a24vVGNZR05DT3JWQWVDTU11bkpmSHZFRXNDZ1lFQXloZmYKNExzK2NzT1JoOUdhd0NXSUM1VklmTTFUKzZkVC9POE54YjlOSm55b1YyR0YxT09oY0tzZmUrR1Vmbm8rTndpYwpOVUQ5Umd0RTFmMldkRC9uRjZKcEVNSjZoOWFraXYrNXdpV2Z0a2g3V0FXQ2MwRS9ZZjNPRDA5akZCalE4U3JwCnZhdVIwdkhQOGJhdXg2cUFXbFp0T054SlpFbVRCdFZaZGtQVXk2c0NnWUJtaDNSNVZHUVdIUEV5MXJwUFlHUkwKRmgyOXlOTFIrUE5aelo0cEZsTkNnVDQwaEpQRkFseTZYVmJFQkVUMmNqNitxcEJrVkhtakZ2akkxcmlLUVJsLwpHTlFGejlzSjhjUVNDL2pPNXpzZjY1cENJb2F1Rzk0Mi93blArQnhFYVlDWXY2V1B1UE1VRXdPbnF4aEtIcm5qClo1UzlPYmNzV2RUbDhlcklrV093WFFLQmdRREF2eWlOeE1oNDJNSHlraDFRYWZ0cFlNWTBFZm1wcVJ2WHY0Q1oKUEMydktYRzlkWXdaVWNubUZhLy9qVlQ5bEVYR1kzWG83TVVqaXhmcUtPVFlseUluVG9WNnNLSUE4TjBhblhCawpGVkpRbnF6VmROdklaVkM0ZTBPUElwNVN5cUJ0aEFwUEZsWU1wUWs1ZG8wWWJpdmcvVkZLeS85TG9VaVRXZVRyCmdTSng1UUtCZ0h5b2VWRkcxaC94WnlDY2p0WURkU3Z1Vm5PNGFtZ2lxbGtWeGJzQ2l4WHlRcUZDN1BDV3JmQUgKTE1KZmNRbW13OXljM2tJeGNwR2ppOWJkcS92aFd5WmRHdGh6VWp4M285OFhQazBsTnRlNDNPd1BXVnlkTk1UdAo3SXlPU2VqbHJlbmg0VjdBdDhDc09jUWx6dm9TN0lWcDRaVDdYV3JuTERhS1JrdkRpclV4Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRV2VUeFo4MVpKSkNXRnhVUWgxSk1qakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TnpJNE1EWXhOVE15V2hjTk1qWXdOekkzTURZeApOVE15V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2doT1M2aFU4YkRpTjNLY2dxbkFhRFB2UVRmVzNkTHVNakdDR3NvQ3JPa2FLTkVxM0cKUUZYRXlHK3JybFhrNXE0UmtmcGRYMlo2eUtMUkNJdVhQMjFzNWtQeDNNbElUMGM5R3JObW10cE1lQU5WTnBKRgp3T0E4bmI4bXJnVVpwN3cvb1NibWJBbUd2MHJmcmhEcDJDbncyUzk4UWRvTnJWcTJleWJVWWU5VndCS0pkV296CndIM2tDb0lwSndDYWFXU1owNjNSbldtZVIwZkdFYTNvRGdxYWpReDRGOUx0aWtFdC9XWjZZODlkSEx0WjE5Mk4KbC93a2JjaEF6T3dMNDhiVytlTEdZU3p3UVJndWZMQ3JMRFh1MlY5SUkwd1oyQWpFclA2b3pFZUl2QVdqK082cwpaM0pvcHRSU3NHZjAxZWU4Q1BiVmR4dlhBbUNVUGdCTHQxc1pBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVFSTNrUGtHYzI5eDZzb2t1NlBRK2M5dzhTRUV3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFEcHZYOEJCd3RXUDh0MXBTK1VwaU1jK00zUldPVHFSRVNuNk5LS3lHMkgxRTJyQW45NjVqU1dtCjhwVEhEdVhIT1QyMFJ3VnNCQWc2U3lFUEZJL1NxNndXL3lWdXdabUY3OHpKSXlSSDRndzRZVGhmSW1hMVpBb3IKOEhnYlp4cFVZYjVSYlhuUnFUbktTVXVvQ0lEZk9CZVF5UW1ZdnVRMWtwU0lGUVNabGh5T3RiOU1CUkx6dGQxegpLSkl5eVRmY29ZUWZJU2d3bTIxL3lXTXpLSHhVYnppb2hzMkk3azdvdXV5bEdrNWdXMVNiRmsvV0Z4R3hhSElBCnNMcFh1VHcrWFM5YWV6YUF5OUlIU3ZwNU1meUcxSlRHSy80SWN6cSs5U3ViVWI0Tm9LT2RWLytzemhVRGJzVzEKUVpDODJ1ekxkNzdjMStRclVObjUwc1FrTTVPZTg2ND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQVBjWEx1TnpBWFRyZmh6MzNxWk9nWXN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURjeU9EQTJNVFV6TTFvWERUSTJNRGN5TnpBMgpNVFV6TTFvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTFlWUY1L0NwVXA4V1NncmJmQlQ3eVVST2o0R2wKK1RvMmxiM3pTNmJRTzJZRmEvd1BnajYwdGxEY0pXQ0lTQm1yVUxrVUxMSmw5eXZKRTg3eHFIWkhHVUlkcUpjSwp3WVNwczBCeVJSWGo4TW9sbEpwZXpKMmFZVkxUWG1XSmdPa3YyMWhhOCtnTENRMzVqVUFFZWJjSHBndkxQdFBJClVHMnlWYWYrZ1Y2QmNEb3pwM3pUS21hWUVCTlorOE4rNjliMmNvSWV2bWhtbG44MXRLdVZNa050MnZRT0J6VjEKdG9ab29leEhsVmQxSDdiR0JQb2ExRHMwSk1TOXRzVGpNdkc0bTVJUnF2YmNsdEtqMW1OUGxxdWZwa3RUZFBDZgp6am52RWVkWnVUYjkvTkd2WXFSR3pUM3RYN3Y2MVFDVTgxeDBLZUJnVmRjdDhwbnBJK2V3R1d2a3RRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUVFqZVErUVp6YjNIcXlpUzdvOUQ1egozRHhJUVRBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBSmtyUTljVmtrd3dyS0FueUFDMTNOUDJBcVFZYk8rdWh4VjVPYzQ3VjBwVTZlSk4Kb1VhL3YrYVNleGkvMlM1TE5PVzlGNlJjZjhVb0MwZTFqZGZkTFFVZlJiU3lYMTdmTGVaM3Y0T0JieFRTanZWNApOTVFtUGp3ejQrbno2a3pZZFBwbXVBbTdrWWRYY2ZHSVJOenVGZjRHaTJ5NGJaeDZzazFlN3l2NDVsSEhZODk2ClQrV1VES01CT3VWTTBETm1ydHdFYzRrOEhDK21OVGZrRWEvZVhzYTFTdGFTTDJ2bjBFN3I4bGJVSG16WEpueEYKanQxa3djb3lqN1hMb2E1YU01d2VjWnhyQ0duMVVvVFFtem9jaWNhV1RpM054NWxnZGZza0ZGTHQ3cE5iUTJLVwpkZjJqUXN0UjZ3Z2t3QlNkamt1M1NrUnRja1A4US9FcTE0Sk1HUEk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMWVZRjUvQ3BVcDhXU2dyYmZCVDd5VVJPajRHbCtUbzJsYjN6UzZiUU8yWUZhL3dQCmdqNjB0bERjSldDSVNCbXJVTGtVTExKbDl5dkpFODd4cUhaSEdVSWRxSmNLd1lTcHMwQnlSUlhqOE1vbGxKcGUKekoyYVlWTFRYbVdKZ09rdjIxaGE4K2dMQ1EzNWpVQUVlYmNIcGd2TFB0UElVRzJ5VmFmK2dWNkJjRG96cDN6VApLbWFZRUJOWis4Tis2OWIyY29JZXZtaG1sbjgxdEt1Vk1rTnQydlFPQnpWMXRvWm9vZXhIbFZkMUg3YkdCUG9hCjFEczBKTVM5dHNUak12RzRtNUlScXZiY2x0S2oxbU5QbHF1ZnBrdFRkUENmempudkVlZFp1VGI5L05HdllxUkcKelQzdFg3djYxUUNVODF4MEtlQmdWZGN0OHBucEkrZXdHV3ZrdFFJREFRQUJBb0lCQUgxZGV2cXMvK0N2NHpWMApWWjNOQXFHOUNqcHI1MlpDYXptcWdnMUY4T2ZQYk1BVWxOWm1nQzRYQ0dCVHlxeFBkeXd4dlpSUTN4aFdMbDBRCnZteFpIbVM4Ym51Z1F5cVc0WXR3NjBoNGd3ZGV3MVhzZ0VGMjRjUEc4cUZ4NjN5RnI0bmtxRElxUDBXSVRrb3UKU2pFNFNDQlc2MEdnaU5neTR3SDNHMkNoamtYQ2xLMUpkd01oTXBNOFVvOURleTh6a3Mvbm9ISExsendFaGNsQgoyY0VJaEZvVzM1KzZpYWJQcVEwSmdJMkY1TTgxNlFxOG5RbXJ2ams4QW1WRVpNUTBaQ2J3QjNQZy82Q1R4QlgrCnNqejJ0OFBZRGlaTjFzUUw1RlgrWmJpeDlLa0t0eEFyTC9SNmlmRG1HV3FSRUhKQytLL2MySDExVTZRMnVCaHAKOUhWUnRtRUNnWUVBN1ZuOHg3NFVjNUN3YmxnMSt3RGd6dnlHcFc5WTJ0d0dWZWt1SHg1cjVERDAyNFRXczNxdgpqQzk4M2JId3A5YW5QVVhiNEhiTVhuNDdSb3RaNHkxSERuKzFvVUdGYXcvZnhzd2hVanI3Sis1ZFZZeVR1WER6Cm1XOGVhUUkxSDhEU0dZd05FYWg3TXdkTE43aFIzY1doOVJ0Mlp0ZU5jTS9KdGhpNlZvRThFcDBDZ1lFQTVyUlAKVGFJdkhWU0JpK0F3UUpzYkpMbWlJeHFpc0t4OEJYSVFsZStTRGhvaFFaRk9CeFFQMitwMUJ6Q1IzNzcrMUtKRApFTXVFSmpBSGhMNXVPM1lMOTdLZmxLS3RWR0RacmZmdVgwQ2NWNFlodks4WHU0ZmRaVFpSV1l0U2JETk1ZZko4CjEwcnUzMW9aaUI0cVg1VGdUSlhQeHNKWDFZZzFZQURUa2VQTjB2a0NnWUJFYnozREdic3IxdndIMU1jN3AvVXAKdVFYWmpWRkJTVTlLVmdGR1Y2OGtERG1OVWEvVjcvbk5vYU9QQ0U4ckZXa0M4YkdEOXJ6V1FlODFWOWlDOS9zVQo0eDJyY1FqVzVhelAxT3VHbWhyd1dIbnd3S2VYUUVuOFkxMlJTV0duMWlDOTNQT25zN3hSNmpoMXlGOVNZamxnClFwclE3RFdMNFYxM2M0bkdoMXlhd1FLQmdRRGNlbVZ2cEJleXlCZ21QVkxmNjF1OWRVcm1rWVg1b2wzRU5vWnoKUkVrcEFQL1hVYTVvUlZ3Q3A4YS80RU1JdWRlQURySlpVcVl3ZUtZMnptYzZuRTVEb29tdjJ1Z2JRNVBGRnJUUQpnMGJtdm1Gdm1VWHRDcU1qSHc0UHJYNVB1WmE5NUtnNmVIcGhLaEpNYThmRElOeGJWTEVGR3FZbWc4Mit1Z3QzCjJXWFN3UUtCZ0g2eklZRnZRdDd1UXBIZi9EVFIvMG9vdlJZbjQ4cUx4YmlTNVJlTWZLSVV5ZXM1QlZ4Ty9rZm0KNlVJUEdId1VuSGxjY3J1YWpkVTB0MEZxTGFwbSt3RGRleDRybHk3c0gxeXpyL2MzYjIvLzk5aEg3cG55elhPUAorY0tSZGNzb3FKejUwb2NXZ3UwclI3bEVFSVRMS05Ob1RUNmgrUnI4N1pYWSt2T0N4aUVlCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRV2VUeFo4MVpKSkNXRnhVUWgxSk1qakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TnpJNE1EWXhOVE15V2hjTk1qWXdOekkzTURZeApOVE15V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2doT1M2aFU4YkRpTjNLY2dxbkFhRFB2UVRmVzNkTHVNakdDR3NvQ3JPa2FLTkVxM0cKUUZYRXlHK3JybFhrNXE0UmtmcGRYMlo2eUtMUkNJdVhQMjFzNWtQeDNNbElUMGM5R3JObW10cE1lQU5WTnBKRgp3T0E4bmI4bXJnVVpwN3cvb1NibWJBbUd2MHJmcmhEcDJDbncyUzk4UWRvTnJWcTJleWJVWWU5VndCS0pkV296CndIM2tDb0lwSndDYWFXU1owNjNSbldtZVIwZkdFYTNvRGdxYWpReDRGOUx0aWtFdC9XWjZZODlkSEx0WjE5Mk4KbC93a2JjaEF6T3dMNDhiVytlTEdZU3p3UVJndWZMQ3JMRFh1MlY5SUkwd1oyQWpFclA2b3pFZUl2QVdqK082cwpaM0pvcHRSU3NHZjAxZWU4Q1BiVmR4dlhBbUNVUGdCTHQxc1pBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVFSTNrUGtHYzI5eDZzb2t1NlBRK2M5dzhTRUV3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFEcHZYOEJCd3RXUDh0MXBTK1VwaU1jK00zUldPVHFSRVNuNk5LS3lHMkgxRTJyQW45NjVqU1dtCjhwVEhEdVhIT1QyMFJ3VnNCQWc2U3lFUEZJL1NxNndXL3lWdXdabUY3OHpKSXlSSDRndzRZVGhmSW1hMVpBb3IKOEhnYlp4cFVZYjVSYlhuUnFUbktTVXVvQ0lEZk9CZVF5UW1ZdnVRMWtwU0lGUVNabGh5T3RiOU1CUkx6dGQxegpLSkl5eVRmY29ZUWZJU2d3bTIxL3lXTXpLSHhVYnppb2hzMkk3azdvdXV5bEdrNWdXMVNiRmsvV0Z4R3hhSElBCnNMcFh1VHcrWFM5YWV6YUF5OUlIU3ZwNU1meUcxSlRHSy80SWN6cSs5U3ViVWI0Tm9LT2RWLytzemhVRGJzVzEKUVpDODJ1ekxkNzdjMStRclVObjUwc1FrTTVPZTg2ND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZRENDQWtpZ0F3SUJBZ0lRSGM4ZWFXaXl5SjJFWmRIR3dKUVAxVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TnpJNE1EWXhOVE15V2hjTk1qWXdOekkzTURZeApOVE15V2pBdk1TMHdLd1lEVlFRRERDUXFMbWh2YldVdFkyeDFjM1JsY2k1b2RXSmliR1V0WjNKd1l5NWphV3hwCmRXMHVhVzh3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRHVSWHJQOHpMZ2NLamwKT0VHK2Jqd0tmcU41dGdKWmc3MFR0aUpwVHEycWZ4NGRBS3Ftc3ZSVFJmVkM2VW5FNFlJZFUvbERUZ1ZUY1dNQQpuQ2NVL0p1cUJwdWY5YVFTNWxZd3I0TjBlK2k1THdwaEJyeXdKSXd6SEVCN3MwNEdXbWg2ekl2Z0thMFZ5TlRqClpyTWtXSE1zOXJrWGY4S28zb0xFVG9SejlYc2tYZW4rYkZuaGRGVk1WcUhlQ0JBYzNSK0VzNUs2TUU3NjIrTmsKZEFJUFp4cUJTWlpIOTR6bVljdThuZDRvOE01MEU3cldqZ1NGbUw3a3MzUnptcFAxS2V3V1dhMG43RmRYaTEwWQovOGV0RTdtZC83akdGZ2duTE84V0IrNHdaam91WFk1aHV5QUhEUk5FMnU5Uko5RlAwRytMdmhnT3hWRWRlT2kyCjFmN0V4Ym5EQWdNQkFBR2pnWkl3Z1k4d0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0cKQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGQkNONUQ1QgpuTnZjZXJLSkx1ajBQblBjUEVoQk1DOEdBMVVkRVFRb01DYUNKQ291YUc5dFpTMWpiSFZ6ZEdWeUxtaDFZbUpzClpTMW5jbkJqTG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQU9uMW1wNllXQ1pQYkgrczEKemJQWXZ4NzRoTTZjZlE1Sk9qdzFFbXZHd2JTOHM5V0FsMnMxRjh4SXlSK3lOSERQcGhuVmJ2dXUzTllmNnBxRAp1ME9KWFUyU2IzZ0kxOFJCWU0waERZcVFDWkRJclNlNmF4aW1YbERFeWlwanRwU1VDcmpYS0lMUjVjK3plUEhrCmwySzlPNFNVWkN1NnpJRGlkcFZDczhhQ3c2K3pnY1ZLZHZwWnRGbkdndmRRMVZibkRhMUxhUDFOcFU3d0kyamsKS0grNnMvMFpLZS9UNXlleEg3NFFhMVdyWm8vWEtidDJlVTFoeWtWZDhjMjBybytIaGtKekV1V0lDbjl5NnAxbApnNDN2c3VzQkFOOUNvSkZDbmhFM0puKy91RGlIV2NpSFFQOXdxZ29URngyTE44U1Jrbi9TbXZ6TExWS3VwdXNtCnZnUHZhZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBN2tWNnovTXk0SENvNVRoQnZtNDhDbjZqZWJZQ1dZTzlFN1lpYVU2dHFuOGVIUUNxCnByTDBVMFgxUXVsSnhPR0NIVlA1UTA0RlUzRmpBSnduRlB5YnFnYWJuL1drRXVaV01LK0RkSHZvdVM4S1lRYTgKc0NTTU14eEFlN05PQmxwb2VzeUw0Q210RmNqVTQyYXpKRmh6TFBhNUYzL0NxTjZDeEU2RWMvVjdKRjNwL214Wgo0WFJWVEZhaDNnZ1FITjBmaExPU3VqQk8rdHZqWkhRQ0QyY2FnVW1XUi9lTTVtSEx2SjNlS1BET2RCTzYxbzRFCmhaaSs1TE4wYzVxVDlTbnNGbG10Sit4WFY0dGRHUC9IclJPNW5mKzR4aFlJSnl6dkZnZnVNR1k2TGwyT1lic2cKQncwVFJOcnZVU2ZSVDlCdmk3NFlEc1ZSSFhqb3R0WCt4TVc1d3dJREFRQUJBb0lCQUV4M0w3cWNxYTh0ZUlaWApUNEgxam44dnRQYlNXbDZ2MEhZSzlYQW1OOFdIbGZwb3hGdExBdTNXZmFkRGh0RVFMZG1Mb1dyZ0Z3VjRWZlZVCko1YXNtcWd1QnJPRytXaTNVdUc4OGNyb0dQK1ZBUmV5T2N1dGJ2RFlHRG1haVdld2krY2N6YWJhdVJsTW9rVjQKSi9WNkRUeFkwWDJoR3E5bStVQldrbHRFWkloK25Jc3J1NTluSlNCOUV4cTdlQ3hJRUFmZllleHdXdFkrQ1htcwpBV3g0aTRDRXk3UkN5Ymw1N0thV21oZkQ2djl2ZlVqQkNaOEtQU3RCaExpMlZVbFJpZzdXMlhPVFpQSWpvWndrCmI3MU5tcDBEQlU1WmtxeFYydERHNlljM0tZMmNaWFFESittNGVLSGdBU05rWkNWTjJlN2RyTGZMdzBWclljWmYKZk9wbWlnRUNnWUVBL2paSTIwckwwSUJhRHBCRmxBb0Ntekp6bSszOTNnREsxdW5hQWIwZkY5ZU5QbmxPczR3SApENXdLS2plc3VGWGlSaHIzU25vZUp1QzM5TU0vT21VbkZwc0hsRDFiblhyWHkvQXpvbTdBZ2xVZUdySlN6L1NECjkyYXAwdFBWNUJBZExsZ2tvaTRpUHl4VGZMR3RYYnVRemprZUs4bktZeGZIU0UwZURQSkhQMk1DZ1lFQTcvSisKWEVZeFJxeitrNWtsU1ExTTRXbTVkM3RBRlNzN0JWL0JzVmdaa0FvSlVNaUxFNkVCTEJwT0t5WmNHc0JMQWg1eAovTDc5Lzlrbk9IcjFPalkreHEwUmlLeDZhN01kZDBLZ0xwSUF2VytxWUozYXhaeks5ajIxbm95UHZpZUc3MTU5CjU3dUJWNThZSEdlRWZKMUh1THVacGJQN2VnaWhxcmFoTjFOSG1pRUNnWUVBcTIrbWdLVVhnRndlMzdWeUJ0MGQKVnRhV1dyRU1STHhhRHNlVWF4bkVyMHFCaVlFN2p5QSszc3NIbStNQ0N5cDROM2tXRGxiK29JOXAzNW9RdU92ZwppWUV4Z2twQ3o1ZzVrZUpDb0NkNmtpcWU2N2dZMnY5MlE5RXJjKy9DVGxTRHFXNXQvaVdJbVB2bXJiQVJUNllmCmlNUENVaHQ2N29ycHJSdTh5VlJXc2lzQ2dZRUEzS2YzcEF1NHpQSFJ1eElldzZ0RGhCZWh3MHJJaDY4VnU3OXYKZEJNOGpzVnNBNm9vbTRoNGQ0SkpXRTBTYmxkZm96YzBRK1d2MTFSdlNQVnFCbnBVQ0lpbmt6UnA4QmpyZy96MQpLVjZDNTdLRTBBemFYdGZ0bmJ6cUJEL25BRXVCUHlkNlNWeVplV2FJMmJZb2xDQmZFSGNVdU5sbTdiWjZWVzlWCm1uY3ZaWUVDZ1lBRWpJUk5jcUJ2YXZ3Nm16T1g5Y3BZRmJCUDMzTDFWdXRCdnNmRUprRFRWNkVMQXYxTVk2OXAKZkZ4ai9NNW8rbDZvVlRCcVdHU0RlOTkxWFdzVzUxQVJMZXFLbEkyb3pLNzJ5WnhUWmVmMER0TlRvSFFUbGlNNApnTitYeGxySlhYK2EwQUJEd3ROek1FYnk1cmxPSmNNbXdtUkZ4RlNpOUxHblhGQmoxamhOL1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
    - name: hubble-metrics
      port: 9965
      protocol: TCP
      targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
    - name: peer-service
      port: 443
      protocol: TCP
      targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ae3688a5e4c021eb091a54f43136891e7dd6ca3a40c6f3125bb86237d2798bef
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  io.cilium/app: operator
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
        - args:
            - --config-dir=/tmp/cilium/config-map
            - --debug=$(CILIUM_DEBUG)
          command:
            - cilium-operator-generic
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_DEBUG
              valueFrom:
                configMapKeyRef:
                  key: debug
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: 192.168.1.20
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/operator-generic:v1.14.0@sha256:3014d4bcb8352f0ddef90fa3b5eb1bbf179b91024813a90a0066eb4517ba93c9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 9234
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 3
          name: cilium-operator
          readinessProbe:
            failureThreshold: 5
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 9234
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 5
            timeoutSeconds: 3
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /tmp/cilium/config-map
              name: cilium-config-path
              readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
        - operator: Exists
      volumes:
        - configMap:
            name: cilium-config
          name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 2377e902b05fcb5eab2f040823d96bf083593a39234638f79da89f0a3ba15121
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  k8s-app: cilium
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
        - args:
            - serve
          command:
            - hubble-relay
          image: quay.io/cilium/hubble-relay:v1.14.0@sha256:bfe6ef86a1c0f1c3e8b105735aa31db64bcea97dd4732db6d0448c55a3c8e70c
          imagePullPolicy: IfNotPresent
          livenessProbe:
            tcpSocket:
              port: grpc
          name: hubble-relay
          ports:
            - containerPort: 4245
              name: grpc
          readinessProbe:
            tcpSocket:
              port: grpc
          securityContext:
            capabilities:
              drop:
                - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /etc/hubble-relay
              name: config
              readOnly: true
            - mountPath: /var/lib/hubble-relay/tls
              name: tls
              readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
        - configMap:
            items:
              - key: config.yaml
                path: config.yaml
            name: hubble-relay-config
          name: config
        - name: tls
          projected:
            defaultMode: 256
            sources:
              - secret:
                  items:
                    - key: tls.crt
                      path: client.crt
                    - key: tls.key
                      path: client.key
                    - key: ca.crt
                      path: hubble-server-ca.crt
                  name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
        - image: quay.io/cilium/hubble-ui:v0.12.0@sha256:1c876cfa1d5e35bc91e1025c9314f922041592a88b03313c22c1f97a5d2ba88f
          imagePullPolicy: IfNotPresent
          name: frontend
          ports:
            - containerPort: 8081
              name: http
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /etc/nginx/conf.d/default.conf
              name: hubble-ui-nginx-conf
              subPath: nginx.conf
            - mountPath: /tmp
              name: tmp-dir
        - env:
            - name: EVENTS_SERVER_PORT
              value: "8090"
            - name: FLOWS_API_ADDR
              value: hubble-relay:80
          image: quay.io/cilium/hubble-ui-backend:v0.12.0@sha256:8a79a1aad4fc9c2aa2b3e4379af0af872a89fcec9d99e117188190671c66fc2e
          imagePullPolicy: IfNotPresent
          name: backend
          ports:
            - containerPort: 8090
              name: grpc
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
        - configMap:
            defaultMode: 420
            name: hubble-ui-nginx
          name: hubble-ui-nginx-conf
        - emptyDir: {}
          name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ae3688a5e4c021eb091a54f43136891e7dd6ca3a40c6f3125bb86237d2798bef
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  k8s-app: cilium
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
        - args:
            - --config-dir=/tmp/cilium/config-map
          command:
            - cilium-agent
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_CLUSTERMESH_CONFIG
              value: /var/lib/cilium/clustermesh/
            - name: KUBERNETES_SERVICE_HOST
              value: 192.168.1.20
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/cilium:v1.14.0@sha256:5a94b561f4651fcfd85970a50bc78b201cfbd6e2ab1a03848eab25a82832653a
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                  - /cni-uninstall.sh
          livenessProbe:
            failureThreshold: 10
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: cilium-agent
          ports:
            - containerPort: 4244
              hostPort: 4244
              name: peer-service
              protocol: TCP
            - containerPort: 9965
              hostPort: 9965
              name: hubble-metrics
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          securityContext:
            capabilities:
              add:
                - CHOWN
                - KILL
                - NET_ADMIN
                - NET_RAW
                - IPC_LOCK
                - SYS_ADMIN
                - SYS_RESOURCE
                - DAC_OVERRIDE
                - FOWNER
                - SETGID
                - SETUID
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          startupProbe:
            failureThreshold: 105
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /host/proc/sys/net
              name: host-proc-sys-net
            - mountPath: /host/proc/sys/kernel
              name: host-proc-sys-kernel
            - mountPath: /sys/fs/bpf
              mountPropagation: HostToContainer
              name: bpf-maps
            - mountPath: /sys/fs/cgroup
              name: cilium-cgroup
            - mountPath: /var/run/cilium
              name: cilium-run
            - mountPath: /host/etc/cni/net.d
              name: etc-cni-netd
            - mountPath: /var/lib/cilium/clustermesh
              name: clustermesh-secrets
              readOnly: true
            - mountPath: /lib/modules
              name: lib-modules
              readOnly: true
            - mountPath: /run/xtables.lock
              name: xtables-lock
            - mountPath: /var/lib/cilium/tls/hubble
              name: hubble-tls
              readOnly: true
            - mountPath: /tmp
              name: tmp
      hostNetwork: true
      initContainers:
        - command:
            - cilium
            - build-config
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: KUBERNETES_SERVICE_HOST
              value: 192.168.1.20
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/cilium:v1.14.0@sha256:5a94b561f4651fcfd85970a50bc78b201cfbd6e2ab1a03848eab25a82832653a
          imagePullPolicy: IfNotPresent
          name: config
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /tmp
              name: tmp
        - args:
            - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
          command:
            - /bin/bash
            - -c
            - --
          image: quay.io/cilium/cilium:v1.14.0@sha256:5a94b561f4651fcfd85970a50bc78b201cfbd6e2ab1a03848eab25a82832653a
          imagePullPolicy: IfNotPresent
          name: mount-bpf-fs
          securityContext:
            privileged: true
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /sys/fs/bpf
              mountPropagation: Bidirectional
              name: bpf-maps
        - command:
            - /init-container.sh
          env:
            - name: CILIUM_ALL_STATE
              valueFrom:
                configMapKeyRef:
                  key: clean-cilium-state
                  name: cilium-config
                  optional: true
            - name: CILIUM_BPF_STATE
              valueFrom:
                configMapKeyRef:
                  key: clean-cilium-bpf-state
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: 192.168.1.20
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/cilium:v1.14.0@sha256:5a94b561f4651fcfd85970a50bc78b201cfbd6e2ab1a03848eab25a82832653a
          imagePullPolicy: IfNotPresent
          name: clean-cilium-state
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
                - SYS_ADMIN
                - SYS_RESOURCE
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /sys/fs/bpf
              name: bpf-maps
            - mountPath: /sys/fs/cgroup
              mountPropagation: HostToContainer
              name: cilium-cgroup
            - mountPath: /var/run/cilium
              name: cilium-run
        - command:
            - /install-plugin.sh
          image: quay.io/cilium/cilium:v1.14.0@sha256:5a94b561f4651fcfd85970a50bc78b201cfbd6e2ab1a03848eab25a82832653a
          imagePullPolicy: IfNotPresent
          name: install-cni-binaries
          resources:
            requests:
              cpu: 100m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /host/opt/cni/bin
              name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
        - operator: Exists
      volumes:
        - emptyDir: {}
          name: tmp
        - hostPath:
            path: /var/run/cilium
            type: DirectoryOrCreate
          name: cilium-run
        - hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
          name: bpf-maps
        - hostPath:
            path: /sys/fs/cgroup
            type: DirectoryOrCreate
          name: cilium-cgroup
        - hostPath:
            path: /opt/cni/bin
            type: DirectoryOrCreate
          name: cni-path
        - hostPath:
            path: /etc/cni/net.d
            type: DirectoryOrCreate
          name: etc-cni-netd
        - hostPath:
            path: /lib/modules
          name: lib-modules
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - name: clustermesh-secrets
          projected:
            defaultMode: 256
            sources:
              - secret:
                  name: cilium-clustermesh
                  optional: true
              - secret:
                  items:
                    - key: tls.key
                      path: common-etcd-client.key
                    - key: tls.crt
                      path: common-etcd-client.crt
                    - key: ca.crt
                      path: common-etcd-client-ca.crt
                  name: clustermesh-apiserver-remote-cert
                  optional: true
        - hostPath:
            path: /proc/sys/net
            type: Directory
          name: host-proc-sys-net
        - hostPath:
            path: /proc/sys/kernel
            type: Directory
          name: host-proc-sys-kernel
        - name: hubble-tls
          projected:
            defaultMode: 256
            sources:
              - secret:
                  items:
                    - key: tls.crt
                      path: server.crt
                    - key: tls.key
                      path: server.key
                    - key: ca.crt
                      path: client-ca.crt
                  name: hubble-server-certs
                  optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
