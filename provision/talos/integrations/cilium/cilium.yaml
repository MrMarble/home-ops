# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: home-cluster
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 10.244.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: home-cluster\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQ3FzMllqRXNuZG0xeEtMQTBRZUdsVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TnpFM01Ea3dOelV5V2hjTk1qWXdOekUyTURrdwpOelV5V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREZ0MkRocmUvb3oxcmFCTVEyV25RbTY5NnBNQmVCTS9OVEFTSUNwdHhFMklpNzRFNnEKRHUzOXV1eDR3TmRUOTMrbU9TV0RselZOMkRqcFJPZkdOQlJTN1B0bkp4Y0dkWFVyK0FwczZlcngrS1UrZnFmUQpOMlllMEozakZoMFBZRk50cVBBNmdpZUtFcEtnUTUwdWRhS1dVbS8zbkU0eE1Wc0pKN2pXbDZ6RFZIblBoSzBtCnNPWFpiM1BSekpkMVpsQ3dqWU5KQ2lHb1pBd00rdkVWWlQvRmY5aHFNRnoyc2NkTDZReW1RTktKbzBGZHBpSVgKaDdwK2FNbVJ2Y1pRTEI5dXFoWEdNK3RmQXBHZC9VS05LTTRLWS82akR2VHZwcm8zQ2JEMHo0dDFHZFNjL2pSZgpwWER5UkUrV1ZrekZaaGROTmR4R1VIQXhXREgrVU10Z2YyOEpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU5TVFwZUgzZ0pRNXAyQlAzL09TbVBBblR5WU13RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFIanByL3hWeU1JaWVWMnJHNkw5R3pUTTV4S09Zd3htS1BEU2svd0VjSXQ1dlZ3RUZiQ053VDlxCmYvZFZsUEU1cDdGVFJsR0phNFkzY2UzSk1zZzBNNE5jL3pucDhIcTNiZFFIUy9mTTFRUG5pQkhzTXN1Vnk1dDQKMzdsR2tjRS9Icm1jdTgvc08za3FTdXZ0QkxvamlxL2lkaDlnd1hucWlUZGhuU2RLeW12QmJ1a0s2dUNNWnFtTwp4Vy93NXVxWks5TUJDUFNMOEF1S2tmVzFERExuN3VzYUs2WWpHQ1BSWjlaVWprWnRpUnRBZjRsQ29XR2p0M3VhCnVqTFAyeklvTHpHZzBFWnFrUEp0bG9VaVVlaDEvdnI2TldKQnVRa3JnZFk4Z2lOTk96YkdTSlVYbjNZTEpTRFoKdGMxYVVtNEoyZnVodDU0NlB2bzhEOEhnQ2VaSEJPVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeGJkZzRhM3Y2TTlhMmdURU5scDBKdXZlcVRBWGdUUHpVd0VpQXFiY1JOaUl1K0JPCnFnN3QvYnJzZU1EWFUvZC9wamtsZzVjMVRkZzQ2VVRueGpRVVV1ejdaeWNYQm5WMUsvZ0tiT25xOGZpbFBuNm4KMERkbUh0Q2Q0eFlkRDJCVGJhandPb0luaWhLU29FT2RMbldpbGxKdjk1eE9NVEZiQ1NlNDFwZXN3MVI1ejRTdApKckRsMlc5ejBjeVhkV1pRc0kyRFNRb2hxR1FNRFByeEZXVS94WC9ZYWpCYzlySEhTK2tNcGtEU2lhTkJYYVlpCkY0ZTZmbWpKa2IzR1VDd2ZicW9WeGpQclh3S1JuZjFDalNqT0NtUCtvdzcwNzZhNk53bXc5TStMZFJuVW5QNDAKWDZWdzhrUlBsbFpNeFdZWFRUWGNSbEJ3TVZneC9sRExZSDl2Q1FJREFRQUJBb0lCQUZFMVByK3pGNFVDRmdqUwpTRjBpemU1bWx1L2E1dXlVais2WjJvUklVTlNlTTVzblNHZ2s5YTl2cFV6N3QvV3ZCR2ticzhMV3luZ014V05hCmYvQXkxOTR2cEJyOFBVTFQzNnFObUlxZmtYYU5jQ0c1RitnM3VPUVRQNlpVSU45OTZ3WnhpeW9jNTJ5WXNFelAKT0xJcWN2dFhKTklKQ3p5OVR1ejF1Yis2VUtWeFJpQmxXRFlLL3NxV1lwbFMyQ200MW11aTE1ZkpkN0RpUUNtdgpSYTc5NHpKQTUzTFNNbEkySi82WnZEakM5bWxpTENtYmI4eldwTmJLMHZqb2dEYXJFV1k3Y21pdEdobjZyUWZ6Cjd3bVRHOXBnRjlDM2hYbjFybmpqQlRBVFFHV3k5dXMvbzk2RHFqZ3dEN3ZENmdaeGw1a2JrVDBVZHExaG95cWEKVUZKbEx1RUNnWUVBMlJSQ0I4OURmbWozUTYvczBjV3RsZzFOd2o5QzhTZVZHbGtuMUR4WHExbFJXT09PZ2V5Nwo2dHNKK0hwZHQ3MEhRWWxlNjVTZnRKTHJzSGNXUEVGb2Q5S2trT3VZMlh1MGJEZlByV0x3L211OGRRMjZTRGhpCmc4MFBHODgwZll4MExsb0hDTks5TUMxQm83SW1ZOVVvRUJYcTJBWU1CM2JuM2tQWHNnNW5xNFVDZ1lFQTZTcGkKYkhtdzlTK1BQN2FMb1IrSThwZVlxZzRmcmNvVHAvV3VCenpndndJM1dIcWRVVnpzblhUQkUwWFI5TEtMb0hZYwpRREMycXRxZTE5UFlaSk5pTmZ4OGxTZE5Ua1M0MThBakRnYjlmN2Z6Mk1jbkFRb3FzNTg5NEpLYisxckNMTGVUCmgyWnA2UXdnVTFVZDE1dHV1SW9pNFN1d2kxUVYwanVsMDYzVm9yVUNnWUFQZ3ZZUTdzdUkzZUZGVWUzZk0zdnEKNi9weGRlbkhwNmRzNFpBS0IySFFXYXFKYW9GRllYQXdJUVMrWDZnUXVBNHJyYkE5cnpvV1FpVmJUN2NrQ1J4NAo2M0ZjOWFqUGFacUQzUjBXNjZvQzFCbjhWMFhIWVZnUXlQZGFhbHo2MTYxNW5tOUFQeWJMcVlBMlBVV20vcFZGClNQdW1BaENiKy9Bbm5ydHIrc0dIclFLQmdRQ09PcDJKUC80U3dpMG1sMHE3UVVvL2VQdldHQUY0K0lCZS96MW0KQ3R1cGlFZU1nRmNBYjZlaU1Mc3A3M2d3Uk0xcFYwTEtZU3k4TWRtZEhBdXU1anlOWS9QMjQ5K0RNK1p4TFRIMAo5NHlnNE93dE91WnUrdTJyWGlMWG4zYm9yNmNzc2RxYlNIeW9mUTRtNXcvcUdsVkMybmlHVkNsQUJFMi9UVVZOClI0ZSsxUUtCZ0hNYkg4SUllSFhtL2YyV21RYVkrYkpkamNuZ0Ivb3R1Szh4U0V2SFdYY2gwU01tejNvU25PbCsKT2NKeXl2czN4aDVpYktDRXJFZFFUS2lpcjNGT0MxVUN1V2FNd3Zhd3pPaHlnQ1lzNGJqOW45R01UU3RCNktUaApHaFAzVzhwMDYvZkxsRC9iUTdnZVRtNEhKU01VS0RablZURmtlRmJ4T3Z3ZkhVejNrd1orCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQ3FzMllqRXNuZG0xeEtMQTBRZUdsVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TnpFM01Ea3dOelV5V2hjTk1qWXdOekUyTURrdwpOelV5V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREZ0MkRocmUvb3oxcmFCTVEyV25RbTY5NnBNQmVCTS9OVEFTSUNwdHhFMklpNzRFNnEKRHUzOXV1eDR3TmRUOTMrbU9TV0RselZOMkRqcFJPZkdOQlJTN1B0bkp4Y0dkWFVyK0FwczZlcngrS1UrZnFmUQpOMlllMEozakZoMFBZRk50cVBBNmdpZUtFcEtnUTUwdWRhS1dVbS8zbkU0eE1Wc0pKN2pXbDZ6RFZIblBoSzBtCnNPWFpiM1BSekpkMVpsQ3dqWU5KQ2lHb1pBd00rdkVWWlQvRmY5aHFNRnoyc2NkTDZReW1RTktKbzBGZHBpSVgKaDdwK2FNbVJ2Y1pRTEI5dXFoWEdNK3RmQXBHZC9VS05LTTRLWS82akR2VHZwcm8zQ2JEMHo0dDFHZFNjL2pSZgpwWER5UkUrV1ZrekZaaGROTmR4R1VIQXhXREgrVU10Z2YyOEpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU5TVFwZUgzZ0pRNXAyQlAzL09TbVBBblR5WU13RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFIanByL3hWeU1JaWVWMnJHNkw5R3pUTTV4S09Zd3htS1BEU2svd0VjSXQ1dlZ3RUZiQ053VDlxCmYvZFZsUEU1cDdGVFJsR0phNFkzY2UzSk1zZzBNNE5jL3pucDhIcTNiZFFIUy9mTTFRUG5pQkhzTXN1Vnk1dDQKMzdsR2tjRS9Icm1jdTgvc08za3FTdXZ0QkxvamlxL2lkaDlnd1hucWlUZGhuU2RLeW12QmJ1a0s2dUNNWnFtTwp4Vy93NXVxWks5TUJDUFNMOEF1S2tmVzFERExuN3VzYUs2WWpHQ1BSWjlaVWprWnRpUnRBZjRsQ29XR2p0M3VhCnVqTFAyeklvTHpHZzBFWnFrUEp0bG9VaVVlaDEvdnI2TldKQnVRa3JnZFk4Z2lOTk96YkdTSlVYbjNZTEpTRFoKdGMxYVVtNEoyZnVodDU0NlB2bzhEOEhnQ2VaSEJPVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeGJkZzRhM3Y2TTlhMmdURU5scDBKdXZlcVRBWGdUUHpVd0VpQXFiY1JOaUl1K0JPCnFnN3QvYnJzZU1EWFUvZC9wamtsZzVjMVRkZzQ2VVRueGpRVVV1ejdaeWNYQm5WMUsvZ0tiT25xOGZpbFBuNm4KMERkbUh0Q2Q0eFlkRDJCVGJhandPb0luaWhLU29FT2RMbldpbGxKdjk1eE9NVEZiQ1NlNDFwZXN3MVI1ejRTdApKckRsMlc5ejBjeVhkV1pRc0kyRFNRb2hxR1FNRFByeEZXVS94WC9ZYWpCYzlySEhTK2tNcGtEU2lhTkJYYVlpCkY0ZTZmbWpKa2IzR1VDd2ZicW9WeGpQclh3S1JuZjFDalNqT0NtUCtvdzcwNzZhNk53bXc5TStMZFJuVW5QNDAKWDZWdzhrUlBsbFpNeFdZWFRUWGNSbEJ3TVZneC9sRExZSDl2Q1FJREFRQUJBb0lCQUZFMVByK3pGNFVDRmdqUwpTRjBpemU1bWx1L2E1dXlVais2WjJvUklVTlNlTTVzblNHZ2s5YTl2cFV6N3QvV3ZCR2ticzhMV3luZ014V05hCmYvQXkxOTR2cEJyOFBVTFQzNnFObUlxZmtYYU5jQ0c1RitnM3VPUVRQNlpVSU45OTZ3WnhpeW9jNTJ5WXNFelAKT0xJcWN2dFhKTklKQ3p5OVR1ejF1Yis2VUtWeFJpQmxXRFlLL3NxV1lwbFMyQ200MW11aTE1ZkpkN0RpUUNtdgpSYTc5NHpKQTUzTFNNbEkySi82WnZEakM5bWxpTENtYmI4eldwTmJLMHZqb2dEYXJFV1k3Y21pdEdobjZyUWZ6Cjd3bVRHOXBnRjlDM2hYbjFybmpqQlRBVFFHV3k5dXMvbzk2RHFqZ3dEN3ZENmdaeGw1a2JrVDBVZHExaG95cWEKVUZKbEx1RUNnWUVBMlJSQ0I4OURmbWozUTYvczBjV3RsZzFOd2o5QzhTZVZHbGtuMUR4WHExbFJXT09PZ2V5Nwo2dHNKK0hwZHQ3MEhRWWxlNjVTZnRKTHJzSGNXUEVGb2Q5S2trT3VZMlh1MGJEZlByV0x3L211OGRRMjZTRGhpCmc4MFBHODgwZll4MExsb0hDTks5TUMxQm83SW1ZOVVvRUJYcTJBWU1CM2JuM2tQWHNnNW5xNFVDZ1lFQTZTcGkKYkhtdzlTK1BQN2FMb1IrSThwZVlxZzRmcmNvVHAvV3VCenpndndJM1dIcWRVVnpzblhUQkUwWFI5TEtMb0hZYwpRREMycXRxZTE5UFlaSk5pTmZ4OGxTZE5Ua1M0MThBakRnYjlmN2Z6Mk1jbkFRb3FzNTg5NEpLYisxckNMTGVUCmgyWnA2UXdnVTFVZDE1dHV1SW9pNFN1d2kxUVYwanVsMDYzVm9yVUNnWUFQZ3ZZUTdzdUkzZUZGVWUzZk0zdnEKNi9weGRlbkhwNmRzNFpBS0IySFFXYXFKYW9GRllYQXdJUVMrWDZnUXVBNHJyYkE5cnpvV1FpVmJUN2NrQ1J4NAo2M0ZjOWFqUGFacUQzUjBXNjZvQzFCbjhWMFhIWVZnUXlQZGFhbHo2MTYxNW5tOUFQeWJMcVlBMlBVV20vcFZGClNQdW1BaENiKy9Bbm5ydHIrc0dIclFLQmdRQ09PcDJKUC80U3dpMG1sMHE3UVVvL2VQdldHQUY0K0lCZS96MW0KQ3R1cGlFZU1nRmNBYjZlaU1Mc3A3M2d3Uk0xcFYwTEtZU3k4TWRtZEhBdXU1anlOWS9QMjQ5K0RNK1p4TFRIMAo5NHlnNE93dE91WnUrdTJyWGlMWG4zYm9yNmNzc2RxYlNIeW9mUTRtNXcvcUdsVkMybmlHVkNsQUJFMi9UVVZOClI0ZSsxUUtCZ0hNYkg4SUllSFhtL2YyV21RYVkrYkpkamNuZ0Ivb3R1Szh4U0V2SFdYY2gwU01tejNvU25PbCsKT2NKeXl2czN4aDVpYktDRXJFZFFUS2lpcjNGT0MxVUN1V2FNd3Zhd3pPaHlnQ1lzNGJqOW45R01UU3RCNktUaApHaFAzVzhwMDYvZkxsRC9iUTdnZVRtNEhKU01VS0RablZURmtlRmJ4T3Z3ZkhVejNrd1orCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQ3FzMllqRXNuZG0xeEtMQTBRZUdsVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TnpFM01Ea3dOelV5V2hjTk1qWXdOekUyTURrdwpOelV5V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREZ0MkRocmUvb3oxcmFCTVEyV25RbTY5NnBNQmVCTS9OVEFTSUNwdHhFMklpNzRFNnEKRHUzOXV1eDR3TmRUOTMrbU9TV0RselZOMkRqcFJPZkdOQlJTN1B0bkp4Y0dkWFVyK0FwczZlcngrS1UrZnFmUQpOMlllMEozakZoMFBZRk50cVBBNmdpZUtFcEtnUTUwdWRhS1dVbS8zbkU0eE1Wc0pKN2pXbDZ6RFZIblBoSzBtCnNPWFpiM1BSekpkMVpsQ3dqWU5KQ2lHb1pBd00rdkVWWlQvRmY5aHFNRnoyc2NkTDZReW1RTktKbzBGZHBpSVgKaDdwK2FNbVJ2Y1pRTEI5dXFoWEdNK3RmQXBHZC9VS05LTTRLWS82akR2VHZwcm8zQ2JEMHo0dDFHZFNjL2pSZgpwWER5UkUrV1ZrekZaaGROTmR4R1VIQXhXREgrVU10Z2YyOEpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU5TVFwZUgzZ0pRNXAyQlAzL09TbVBBblR5WU13RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFIanByL3hWeU1JaWVWMnJHNkw5R3pUTTV4S09Zd3htS1BEU2svd0VjSXQ1dlZ3RUZiQ053VDlxCmYvZFZsUEU1cDdGVFJsR0phNFkzY2UzSk1zZzBNNE5jL3pucDhIcTNiZFFIUy9mTTFRUG5pQkhzTXN1Vnk1dDQKMzdsR2tjRS9Icm1jdTgvc08za3FTdXZ0QkxvamlxL2lkaDlnd1hucWlUZGhuU2RLeW12QmJ1a0s2dUNNWnFtTwp4Vy93NXVxWks5TUJDUFNMOEF1S2tmVzFERExuN3VzYUs2WWpHQ1BSWjlaVWprWnRpUnRBZjRsQ29XR2p0M3VhCnVqTFAyeklvTHpHZzBFWnFrUEp0bG9VaVVlaDEvdnI2TldKQnVRa3JnZFk4Z2lOTk96YkdTSlVYbjNZTEpTRFoKdGMxYVVtNEoyZnVodDU0NlB2bzhEOEhnQ2VaSEJPVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRZXBzdHNrcUMreUdFMUtFMUZkVGt6ekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TnpFM01Ea3dOelV5V2hjTk1qWXdOekUyTURrdwpOelV5V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDMW5wdDJVd2xOa3l4dmZnaFFzR0F6YlA2MDNicnMKeCtVZ29OTmNWeDQvZ1crQ1VFMnBXcEZhU2RQTzlDdmhTWmJjdHBLMTNFK3Foa2dWRSt1VS9raU43NVk5Q0JrdQpGYzhUTjZKZTNNMGVFOFBuVW1vWG1KdXoyS3BXY3hEYlFMbUw0d2U5WDExaTN5S3VBdkRDWXB5WVpoMnFPRXhGCnRTWkJQdUY4azhScWlNZTlOdWc3Nll5dEhOOTRoU1I5MnVmbTVjVGxXVnc1VmJiMTIxc2k3Z1ZGak5xd1RmU1YKdUM1Q1VHam1SUThyZW84VmVkMiswOHB2dEFlU1VsWE5Idko2RGc4ZVB1VW5MeHdGaExhcVpPNitnSWIvbjhPYwpTT0JYYzlXUTRZNGovbjBGR1FhSExNV24zUTd0WFdRQW1EeVh1TnFvVnBIYjlNcDNlNmI3MU1EM0FnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZQVEVLWGg5NENVT2FkZ1Q5L3prcGp3SgowOG1ETUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFReXd3eWU1dXo4ak9KUEV2dXh6VXdWMVVWTWpEQWkvb1h0Yjkyayt3Nml3THRXYVUKcE1xb3ZlbEptSEljcXpwS0xUdjNBSitDcSs4Q2k3eFE3UnhaNHVyQ1RWNFZ5OGc3USs1dTlycnVlcDdUbFF0MgoyU21aQ1I5K00vTHZlakhaVkJEL01hOXYxZ2NzRHBiTzlkUTBFQ0Joeklqam0xeldPRDJ2TTRWN0kvUTU0NWdvCitJTGxYNGJNZnRtUW03bTVKcTNBa0owVTdKOHBLVTZMTko3WVRsMkxTbzYzMzB4d0M3dHV6eUF2K1VzclVlM1cKNFdiU2lXcU04TTB3QTd6L2xCbTJaQ2FGbkJuVFlMOTJGZERNQWIraUh6dWM5SDljWDdMNWcyaEtIU1VBV0xGeApNeUQ5bm9lcjg3V0RpNlpqN0FBMDdlUGQrcjBsZ0hHVTFPUms1dz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdFo2YmRsTUpUWk1zYjM0SVVMQmdNMnordE4yNjdNZmxJS0RUWEZjZVA0RnZnbEJOCnFWcVJXa25UenZRcjRVbVczTGFTdGR4UHFvWklGUlBybFA1SWplK1dQUWdaTGhYUEV6ZWlYdHpOSGhQRDUxSnEKRjVpYnM5aXFWbk1RMjBDNWkrTUh2VjlkWXQ4aXJnTHd3bUtjbUdZZHFqaE1SYlVtUVQ3aGZKUEVhb2pIdlRibwpPK21NclJ6ZmVJVWtmZHJuNXVYRTVWbGNPVlcyOWR0Ykl1NEZSWXphc0UzMGxiZ3VRbEJvNWtVUEszcVBGWG5kCnZ0UEtiN1FIa2xKVnpSN3llZzRQSGo3bEp5OGNCWVMycW1UdXZvQ0cvNS9EbkVqZ1YzUFZrT0dPSS81OUJSa0cKaHl6RnA5ME83VjFrQUpnOGw3amFxRmFSMi9US2QzdW0rOVRBOXdJREFRQUJBb0lCQVFDSElRZzRSRlhpb3dMbgp2VlVBZkFwSG1PdjF0QmZVL25HTEVqM1FNWDF1OEtYL3hqSFNOSEY3UlB6VHVUWkF1OWtFUk03cGdvNi9xSU5QCk0zQVBmaGFMakZ3eThxaVJjbWFNdk5NUlU2VkZvSjBjcW1RSFJHTnNyMk1sU1IyY2xBNjVkdVNXVUxNUjBrVmkKUlF2UEJVSFAzZ0pxV05MZTlvWU0rM1VYbEhZS2NKT1ROWWh2YnBzR1I4MFRjZlJHa1J0MXNpSVJFTGJxeS95Twp2VklvRWdxYzM2M2wrSzdXYUJnZXd5N3pnRldRN3J4SkRPOXVwWURUcG5LK2NrTjNscTdRMDkwOHpPQnpYN1dGCmN6OVVlWTJXL1pGL1JrVUp0WDM3T1B1RFBxWnUvclh0ZUpLY1lKQlZxaFJOQndicVZGbkxTeU9HUTl0dkgvRXoKZFA4V3pvaGhBb0dCQU5XeTluMTBRV1FzM0drYkFKcTRWb0JEbmZFNnZNTmtyblEzeWtGMVV2NEFSN1JoYVJSQQpUNGdkaTZOaXpGZnpycG4rSllIUXpSZ3Q0S3FYSVJxdWxOeHV1OVhnUnVjeEZoOVEvR0JXcWdKMFZlNU0wRDR0CjRZVFlLWkt0SlBpSDBucVU4WkdnaUxEcFNWbURrN2JXZGIvQ3RTT1Z5ajBBV3RLUVhta3JpMUNSQW9HQkFObVMKQ2lJS1BRY085MU9lYmdXZnRaRU5Oc1BubFExOWkxUU5yMmJibHhPbFFEaVRPZXh6VEVaVEtZTU1paUthSDh1SQpVTkxBajRieGFlaGQyaU0wdEZ1Vzd2Y0U0NWx1WHdvcnZoUVAwaDRhNDNCNUdrLzlta1RzWGNXa1gxUWdvRGlJCnZqSnZXa0Z6L0pjTHpkaGxzMi9adUEwNnpIVXV5WW1zeGl2Rkl6MEhBb0dBSVBQNTRwcWN3cy9RSlQwT3VNMFkKT2Fzem5kRks3bTZHSUZIQ0ZKbjg5RUlpeklRQTZpaUlteHJEUDZ5cWloMS9uU3Q5cVNrRGwyanJyaUtqN2pOaApyU1ErUHRyWTFDblRtWHlwamttTzZkWDZza2FTRGlTUkZDVXBNLzhUSm1mN1l2KzR5SllTdmdVYlZIeGZ1T0FWClJEN0lJL2FqT3dqaytIZGV0NlVKVktFQ2dZQXFkZHZRWk5zZ0k0V1ZKaGdtdE5LRWFtWER1ZEJXLzZkUFVoUm4KS0hmRmQ3eWV6ZXpCL29abU94aWc0TE9jcVNPSFh5VVczRW1tZGpyTEJIWHI1UDlGMktEdVNGLzZzNVdNc0ppNQo1WlNHRjQxSGgvcmduWWViNTkwdEV6VWZmL2FFMGZyOGNNcldkMEpXWUJGZUtBcnF5enltS0ZGNmxSVHo3Mm9GClpNWEp4UUtCZ0RLT2Z6NHFIQjlzUTFjWVNFOEJmb2ozSVdMQktTUEdJcHc4bzQyVnhzZE90eHRnVi9BUFQ1VFoKWjRJd1B4VWRPb1YvdlkwVnl3RFByNnA5d215NDJaQ3UrNHU1WC8weno2dVBxSCtqYUV3MmNJdFNUTmFFVTdSQwpvL0p1a1lUMXdNbDVpL2xHcnZCL0dqU0RMbis1c0c0MXV0L2NJSjVobDdDKzl1V3lGN29vCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQ3FzMllqRXNuZG0xeEtMQTBRZUdsVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TnpFM01Ea3dOelV5V2hjTk1qWXdOekUyTURrdwpOelV5V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREZ0MkRocmUvb3oxcmFCTVEyV25RbTY5NnBNQmVCTS9OVEFTSUNwdHhFMklpNzRFNnEKRHUzOXV1eDR3TmRUOTMrbU9TV0RselZOMkRqcFJPZkdOQlJTN1B0bkp4Y0dkWFVyK0FwczZlcngrS1UrZnFmUQpOMlllMEozakZoMFBZRk50cVBBNmdpZUtFcEtnUTUwdWRhS1dVbS8zbkU0eE1Wc0pKN2pXbDZ6RFZIblBoSzBtCnNPWFpiM1BSekpkMVpsQ3dqWU5KQ2lHb1pBd00rdkVWWlQvRmY5aHFNRnoyc2NkTDZReW1RTktKbzBGZHBpSVgKaDdwK2FNbVJ2Y1pRTEI5dXFoWEdNK3RmQXBHZC9VS05LTTRLWS82akR2VHZwcm8zQ2JEMHo0dDFHZFNjL2pSZgpwWER5UkUrV1ZrekZaaGROTmR4R1VIQXhXREgrVU10Z2YyOEpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU5TVFwZUgzZ0pRNXAyQlAzL09TbVBBblR5WU13RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFIanByL3hWeU1JaWVWMnJHNkw5R3pUTTV4S09Zd3htS1BEU2svd0VjSXQ1dlZ3RUZiQ053VDlxCmYvZFZsUEU1cDdGVFJsR0phNFkzY2UzSk1zZzBNNE5jL3pucDhIcTNiZFFIUy9mTTFRUG5pQkhzTXN1Vnk1dDQKMzdsR2tjRS9Icm1jdTgvc08za3FTdXZ0QkxvamlxL2lkaDlnd1hucWlUZGhuU2RLeW12QmJ1a0s2dUNNWnFtTwp4Vy93NXVxWks5TUJDUFNMOEF1S2tmVzFERExuN3VzYUs2WWpHQ1BSWjlaVWprWnRpUnRBZjRsQ29XR2p0M3VhCnVqTFAyeklvTHpHZzBFWnFrUEp0bG9VaVVlaDEvdnI2TldKQnVRa3JnZFk4Z2lOTk96YkdTSlVYbjNZTEpTRFoKdGMxYVVtNEoyZnVodDU0NlB2bzhEOEhnQ2VaSEJPVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZVENDQWttZ0F3SUJBZ0lSQU0xaTAxa212WlFwV0ppK0JOWjlvL1l3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURjeE56QTVNRGMxTWxvWERUSTJNRGN4TmpBNQpNRGMxTWxvd0x6RXRNQ3NHQTFVRUF3d2tLaTVvYjIxbExXTnNkWE4wWlhJdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3cWNNREJ3N1ViK1YKVnU1STQzU2VMRVZPaUYybXRwTHhrUmVNTXhSOEFEb1grUzJ6UnNWMnB0TnpGTURheGdXaFpYZkJWeWxJVlg3dApMbEQrRVpKQXE3OEFZUDZsVUV4cHRMeE9EdWlPN0RiMi95bnpxUFp4by9oYWcyYnpVTC9DVW8wdGJZRlRXVHdDClZzcU5Rc0dvZFBXV0Q3RTY3Tmh5UkRvS1RsR3RsdlEzQWNwSVlaZVFaYXNPUTRjVW9LaTUwWVJma01ZZUtPTG4KVFNDaE1vMXlhSXZEY05QUTc2Q1NKVWNlRzhacTZaK2lSYlZ6b0NCSHByZUZRSDYvMUdQRHhmcmlVY1d4WDltRwp2a1ZHS00vWjRxYVI1Y2RPeXZKWkpGNWorKytFbWtNZW0xOCtCdWZHdWxkSUg5YXZYNHQ2STlHaUNYUTRGUDl6CkZhVG8xczZ4clFJREFRQUJvNEdTTUlHUE1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlQweENsNApmZUFsRG1uWUUvZjg1S1k4Q2RQSmd6QXZCZ05WSFJFRUtEQW1naVFxTG1odmJXVXRZMngxYzNSbGNpNW9kV0ppCmJHVXRaM0p3WXk1amFXeHBkVzB1YVc4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFKV0tzQUJjOERGSktHdWYKWHpKZlVWVllTWEN1bW5Bc1hKU1VYTDhtTTZPNkM5WUNTcWZQWENFYUp6dlpyaFRxTlNlY3lRdGZrYk91djNJdQo1MTdCd0Q4T1dkZTR0dlBGeDkxUHJDYlJFMUlXSnBSa1UvSytVM2FISEZaU09RRkc5QW9kM0lXd1c1ZGV4cEZPCk1RUERrMU5LM2F1aXUvSHl6VkZ3SE1CSEJ4VGRBaDZZNFNZS3BNdXFwVDl2RzdBRHZDM1B1d0p5WnBZQ1JYcTUKUFpOaVMyamhmbU5EOW5vYzBXcWpVNkdFNXQ4c2U5VkZiL0NiRDIxeUk1Zy9rNndIOVJHZnF1V1N2MGZSQnZsbgpoWTU2R0RiajE3YllxWWx3bldmenJuRzVWbGk2QkVSMXdpeVFJazRiak53ZEpaZE9ld1JrSlN0ZGdsOTArUmNNCkkyZFlKTXc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd3FjTURCdzdVYitWVnU1STQzU2VMRVZPaUYybXRwTHhrUmVNTXhSOEFEb1grUzJ6ClJzVjJwdE56Rk1EYXhnV2haWGZCVnlsSVZYN3RMbEQrRVpKQXE3OEFZUDZsVUV4cHRMeE9EdWlPN0RiMi95bnoKcVBaeG8vaGFnMmJ6VUwvQ1VvMHRiWUZUV1R3Q1ZzcU5Rc0dvZFBXV0Q3RTY3Tmh5UkRvS1RsR3RsdlEzQWNwSQpZWmVRWmFzT1E0Y1VvS2k1MFlSZmtNWWVLT0xuVFNDaE1vMXlhSXZEY05QUTc2Q1NKVWNlRzhacTZaK2lSYlZ6Cm9DQkhwcmVGUUg2LzFHUER4ZnJpVWNXeFg5bUd2a1ZHS00vWjRxYVI1Y2RPeXZKWkpGNWorKytFbWtNZW0xOCsKQnVmR3VsZElIOWF2WDR0Nkk5R2lDWFE0RlA5ekZhVG8xczZ4clFJREFRQUJBb0lCQUZjY1RON3FqMzF4SUpNcgp4a0RNZ3JETFAyNzFnbE00aFpUcUZkc1NNc0FqUDNGTEMyMERsNnJtL0J4d2hqZVNjMzBtVDhjQytaVVJYWEdaCjIybmZxc054a2VqV2JRTDNmMkxiMW84RGNscXg2bTJjeDZkNHlyaVh2MklJNDZEaWdFTlRYTjRodnp3ekI5VHgKaHJBMlhINGpIY25lQmNIU3g2aFMxU1BobDY3eXlLdkg1aEMzYmxkOHFJOTcyckpGSTJHbVBXL2tBYXFvVXVlcAp5UWMrMlEwN2lZWFNVUEpYUVd6ajRpb25iL3BrdVNRUUFWTERuRDRQNzVVWEMzSU43RUh2VkkyeThjUHBLZHpaCjlVcWV0Rlp1d0NMRFUyVFBRc0ZTbVhjK2w3MjZYVXBza1ZoM1JMa0h0MmMxZlhkWkc4VUF1alFGYUYxd0RmQi8KdWZ6c3lTRUNnWUVBeGxKVGN6bVFhYnZEenJ0WXE0L3dzRkw0WmhabkdBZVRoQWxQem1QbllnK28yNElVRk5Sbgp1ZXV6bzBQalgxT3Y2ZzRNRkhiWkpQUmNnUEF6ZnQrS3dlWkI4Z1dzOTJqU21VZXFuYUhZQy93VWF1aTRGK1pXCkZqQ1FUZFBYK0ZZWGtrMVJDbmdVUk9qT3hQVEJUZVAvRGtDMWQwNjBJREtJdWpGcnFwUGcxMGtDZ1lFQSswT00KU2U0d0tvRkZtRVBwWGF4bktVa2RJM1BZMmpQREtzOEZnd0tzQ0JiYnZmSHg3UkZkb1BzR1J3V0JmbUtkZFB1eAo4dE1JRWxWZ21QWDVXNUduTU5FK3plcEo2R2IwTzZVWUVhelhYRkNQb2kzUUtxbkJ1RGNyUWM4OEZmY2RDb0VaCjhYMjY5Zk1NRG9kM3NZUW1YYllEa1dvY1RxUG5DYitCWmVJb1UwVUNnWUFUSktNMWZocjRlYzFleVNxMzlMN3cKNWpGZitVMmVQaXo1RThVR1VSSm1uc2hYMStpRVVqUm85OTF4SnY1dGx6QmwwVkZOTUdPcGM0VHlWVDFEUStTcQo3c1R5emFWeWhFVy8wZkVnSWgwdW12aUZrVTBqMFhJQjFsSTNrUGxKMlZXUkk3RnM1MFpkbUhOTkE2c2RENkx4CkIwSDg4RFhtM2JuZzd5QkxhTmJOTVFLQmdRQ3FHWVdNdXpwU1hDZVFPRkZ3Ly9qcXd6dDl0N3lUbzcwNWF1TXgKV1FxN2d6WUo5aFF3eUxQWStuZTZkdWkrZGVaZ3Z0QXVNbDFoZy9rY05GRTJnM2xySEF6bmUvZkM1SWZ0SlF3UgpVekNNcDJGRmlyeEZWWnoycUNxWnA4RG1vZDlBTUR3dTkwNHRtUGVOa25vZWEvZEpNNkpndkRRanJPUUkvbU9NClpMbWwvUUtCZ0FaZjJnaVBXL0FnOWcrTW5qTi95cHo2RmFNdkpYenFFWGlEWWZ6QXFwRitEZ2IrbzE5MEN3NHQKUnNQQTFsZkxMa1NFaGRUZDU2ajZ1WWNzVmdCMEJxbjVPaGJWdTIxQ0dObkcxVjFXSDg5RExxZkJvckxYVExnTwpPSzVEMEZ1aThoL0FHK0lEVHNiZ0RYVGtnREs0d3NtVzJjVUhiaWkxMmp0MVl1eHA4WUN0Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.1.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.4@sha256:09ab77d324ef4d31f7d341f97ec5a2a4860910076046d57a2d61494d426c6301
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: b0d2234857ce90387e77c2bfed3154d6366fbb66fe17de3f45d559cc62b318f3
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.4@sha256:bac057a5130cf75adf5bc363292b1f2642c0c460ac9ff018fcae3daf64873871
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ef9343fc57710e6d60e8d83aaec48ea5609308b6dd3ec8bba75777ed2a3faa9a
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.1.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.1.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.1.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
