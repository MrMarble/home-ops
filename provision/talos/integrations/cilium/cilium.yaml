# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
      - services
      - pods
      - endpoints
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - list
      - watch
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools
      - ciliumbgppeeringpolicies
      - ciliumclusterwideenvoyconfigs
      - ciliumclusterwidenetworkpolicies
      - ciliumegressgatewaypolicies
      - ciliumendpoints
      - ciliumendpointslices
      - ciliumenvoyconfigs
      - ciliumidentities
      - ciliumlocalredirectpolicies
      - ciliumnetworkpolicies
      - ciliumnodes
      - ciliumnodeconfigs
      - ciliumcidrgroups
      - ciliuml2announcementpolicies
      - ciliumpodippools
    verbs:
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
      - ciliumendpoints
      - ciliumnodes
    verbs:
      - create
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
    verbs:
      - delete
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
      - ciliumnodes/status
    verbs:
      - get
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
      - ciliumendpoints/status
      - ciliumendpoints
      - ciliuml2announcementpolicies/status
    verbs:
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
      - delete
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
      - nodes/status
    verbs:
      - patch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services/status
    verbs:
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies
      - ciliumclusterwidenetworkpolicies
    verbs:
      - create
      - update
      - deletecollection
      - patch
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
    verbs:
      - patch
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
      - ciliumidentities
    verbs:
      - delete
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
    verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes/status
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpointslices
      - ciliumenvoyconfigs
    verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
      - patch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resourceNames:
      - ciliumloadbalancerippools.cilium.io
      - ciliumbgppeeringpolicies.cilium.io
      - ciliumclusterwideenvoyconfigs.cilium.io
      - ciliumclusterwidenetworkpolicies.cilium.io
      - ciliumegressgatewaypolicies.cilium.io
      - ciliumendpoints.cilium.io
      - ciliumendpointslices.cilium.io
      - ciliumenvoyconfigs.cilium.io
      - ciliumexternalworkloads.cilium.io
      - ciliumidentities.cilium.io
      - ciliumlocalredirectpolicies.cilium.io
      - ciliumnetworkpolicies.cilium.io
      - ciliumnodes.cilium.io
      - ciliumnodeconfigs.cilium.io
      - ciliumcidrgroups.cilium.io
      - ciliuml2announcementpolicies.cilium.io
      - ciliumpodippools.cilium.io
    resources:
      - customresourcedefinitions
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools
      - ciliumpodippools
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumpodippools
    verbs:
      - create
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools/status
    verbs:
      - patch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - componentstatuses
      - endpoints
      - namespaces
      - nodes
      - pods
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - "*"
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: cilium
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
  - kind: ServiceAccount
    name: cilium
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
  - kind: ServiceAccount
    name: cilium-operator
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
  - kind: ServiceAccount
    name: hubble-ui
    namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: dsr
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: home-cluster
  cni-exclusive: "false"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "false"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bandwidth-manager: "true"
  enable-bbr: "true"
  enable-bgp-control-plane: "true"
  enable-bpf-clock-probe: "false"
  enable-bpf-masquerade: "true"
  enable-bpf-tproxy: "true"
  enable-endpoint-health-checking: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  endpoint-status: policy
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query drop tcp flow port-distribution icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.244.0.0/16
  k8s-client-burst: "10"
  k8s-client-qps: "5"
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: native
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml:
    "cluster-name: home-cluster\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf:
    "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRlhlV0YzSGwvOXZudUFma3VPdFZvekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13T0RJd01UQXdOVEE0V2hjTk1qWXdPREU1TVRBdwpOVEE0V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ1ZMLzZZd3lsOGl0bWllRDhCSlViT2JnaXZqY0t3cVQxeFNrTld3bytGeExyVzZUdjQKN0F0Z2Vyd01sRWN3ZGJ6VC9ReUV1cWpHd1RrQWE3RXFEZll5L1RiWktFVlBqN2IvVFk1dGFHSHpHNnI5UHpldwpYbVRMMXZEOVBlRDNub1lTNFV5Mml3Vmp4cFdYRzZCMnVRK210RzgrTTRmbW95V25FcVNGZmZWeDNGWmk3Z3VwCkwyK1ZaVjdZNWdtZk44b1lqbVJJejFvSW5Ra0o5WmxpYTZZMFZJWEFIbWRTR25UY3FINy93eERLZmVXUWNYVDMKRUFuSWpxakRGTVBzTUd0emZJMVhhTXlLNUhJZXZvb3VQd0RZR1pZTHZGTkFXdzhHeFJPL0ZMRUpscUFneDIyUQp0Umd4b3lnQkVhQmFhSFN5MkNqVTRLK3hyeHZxV0RWeVUzYmZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVPbGF5YklYMTNaZ0IvOGhKMmNEbUZVaHlBSG93RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFKTHVGaW1QbXlFQjVpZEh6ZExRdDVRWFFQK3dEcSs3ZzM0NnY0RVJuQ1FHaTJ2eU93VTNtQjRiCnpqU3VKNEk5cGZrYVByNGhpZWgrcktJQk54WjRTK3hZazZZZDcyVFNpcm1PNWwrVUk3ZzhWR2NBRGVON1VDTDIKK1V1REpCWUorc0JLMHRZeEl0OWZ2YkJtcVZOZlI5SmRlaVlXSHc0MG41aUd5TFZ2dUlxeEhYZWw2ZWMxUS9VWQpYS0lMRXg3YnBXLzNET1BjdUdtM3EwT1lZa3E1YXVYMUMvZ21YV0lZRVBJRVVjRHFsV2gxUzdIQWZuSldTcVFGCk9iTC8xK1RSaHJ1MmJnbGpPeE1DdFNuYVN3SnF6emowd0k3dGUwbndkTHllTlRKS0NURFFzRS81aHhTc1ZTVlUKdTNlNnYzVko4ZXBwNFJ4QWh3ZVR3bkJvc2V0WUxOdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBbFMvK21NTXBmSXJab25nL0FTVkd6bTRJcjQzQ3NLazljVXBEVnNLUGhjUzYxdWs3CitPd0xZSHE4REpSSE1IVzgwLzBNaExxb3hzRTVBR3V4S2czMk12MDIyU2hGVDQrMi8wMk9iV2hoOHh1cS9UODMKc0Y1a3k5YncvVDNnOTU2R0V1Rk10b3NGWThhVmx4dWdkcmtQcHJSdlBqT0g1cU1scHhLa2hYMzFjZHhXWXU0TApxUzl2bFdWZTJPWUpuemZLR0k1a1NNOWFDSjBKQ2ZXWlltdW1ORlNGd0I1blVocDAzS2grLzhNUXluM2xrSEYwCjl4QUp5STZvd3hURDdEQnJjM3lOVjJqTWl1UnlIcjZLTGo4QTJCbVdDN3hUUUZzUEJzVVR2eFN4Q1phZ0lNZHQKa0xVWU1hTW9BUkdnV21oMHN0Z28xT0N2c2E4YjZsZzFjbE4yM3dJREFRQUJBb0lCQUc2MGhzRGxVY3ZSWFY1cQp6SllWQzAzejZRNGNxL1JjSWZRSG42Q3FEOGE4RGNtY21aeEZ6TXR6U0VndFlBWmQyQm1YRmNzSW1HV2t6Sis3ClNtUmlwK2QrYjAwRnpTa1ZCRDYvVm9scGhBWGE2aSt5MGFoVzQ0VS9vdVRKSGoraHF1d25zNzFodkVZbC9xdDcKSEwvODQ5aFkzSlBUdVcwMGM2UmUrU2IyS1VTcmtucENoSEhBYWRyamJxaHYyRHVBQzJjM0Vqb0FPdlk0b1QvNApNb3hKdmVoR055Y256TmxDNTVCUmdVUWZaenVyQlppVVNMZFltQUhWM3RId0UyR1J3Z0s5ai9BQTBna2w4b2hmCnBRRmxIZzU3bnNYVjYyc3JESVJXQ1hoOWNnSVcvMTQxUURpVzI5Nm1pSUdMUlRzdXpjZk5heUZhNExSN3hUZ0UKRHU3VVZnRUNnWUVBd0NoUFIzU0VmWXYvOUszNGowaXFFck1xYk5WejNXU2NQZXRweEsrcjR3VXI0d0laNHY5ZgpyZWtUR2Zjc0hJVHRKUVB6ZEUvS0g3Mk4wMWdUZlVRQ3d3aDk0eXI2WjZ3YjNKQ05zSFFhWVN0UHg1SGhLakU2Cm14ZmlZK3FQZTBrWGthM21aOVFpU1lKaUdRZUUzMjJjcXl2SGRLRFBHcmN0VldSL3JtMDlxV0VDZ1lFQXhzRHUKaUtMNTR3Y0NrYnVYUlUwZWRqWFZNdDJDWDFhMVZNZnA4RGRMc0k5ZEJycjl0enN3cjl0bjBpaWlMak95c0JzbwpqTk5tV0JIQW0rK1VlT05jYlBsV0UxY3J6YzJ2b21pU3U2ZE94K3BPTGZxUmYrT0JzUXFLTGJZVU5iWlhqQ3NZCmMwZ2pXdU9oQ1YrY0lZbmFiK3VSK1JBekY2ZnhpRUxXcmhXenlEOENnWUVBbkErZzQ1MmtCUHJ3ODkxZkk2K1cKUVAyMkZSSCt1ZTMrWHVPVTBTTURiS3RFaTJlbmNvNkpQSXN3OGtPbVZiczNobnFBL1JQWVNwTCtYb2tIdXhMRApVM2JRRnZGTzBXZ2NjTFFOL3lNc1VZS0Zsc1hKb3lTOFBqM1ZwZVJZaDM1RFlCTm1MeWxBZDRjbStNRDhqeUZNCnZsQWQrNENtODBHVjFlWjdORVNRY2NFQ2dZQXNDYW1RbXRQVmFzTTErU091VmtVT21pVHdEVWFLeTFLSVEzZGgKSTA5aEFwTHhIOU9CbXRyUnpFSjN2VXNhQTVodkRzVndWcExScHJWUGw4a0U5Qk9SamJsMXRaWGVGdG40bVVVUgowU05TaG1ibUp5Ty8rMi9NQTNMVWFBaVlVaHVaMGg2cnhHc1pBMkMyQy9vek1ERTNKVElGeG9JYmxybWNvSHFpCnZlcEV6d0tCZ0ZwYjFUQkNlMDVuVzN5a1c1eTE2Z3BiZnFiYXcwYUNXTUxIajJYQU43R3JjTHVWc0xTcnlzcmcKWVlQQkhnYWpoeDlXTUFvVEIxTEMyRG1sb3h5ZEdpa3JIb2NTOXNSWU9mcU5Md2RwdlhKNDVRRHZwdjdTZnd2egpOZTR6U2pTQk1naVV1RUNsWU9mdWpVd3FQbWRQZmpwWCtZMm5JZXZLbVBzaTVsK3RCNDdGCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRlhlV0YzSGwvOXZudUFma3VPdFZvekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13T0RJd01UQXdOVEE0V2hjTk1qWXdPREU1TVRBdwpOVEE0V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ1ZMLzZZd3lsOGl0bWllRDhCSlViT2JnaXZqY0t3cVQxeFNrTld3bytGeExyVzZUdjQKN0F0Z2Vyd01sRWN3ZGJ6VC9ReUV1cWpHd1RrQWE3RXFEZll5L1RiWktFVlBqN2IvVFk1dGFHSHpHNnI5UHpldwpYbVRMMXZEOVBlRDNub1lTNFV5Mml3Vmp4cFdYRzZCMnVRK210RzgrTTRmbW95V25FcVNGZmZWeDNGWmk3Z3VwCkwyK1ZaVjdZNWdtZk44b1lqbVJJejFvSW5Ra0o5WmxpYTZZMFZJWEFIbWRTR25UY3FINy93eERLZmVXUWNYVDMKRUFuSWpxakRGTVBzTUd0emZJMVhhTXlLNUhJZXZvb3VQd0RZR1pZTHZGTkFXdzhHeFJPL0ZMRUpscUFneDIyUQp0Umd4b3lnQkVhQmFhSFN5MkNqVTRLK3hyeHZxV0RWeVUzYmZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVPbGF5YklYMTNaZ0IvOGhKMmNEbUZVaHlBSG93RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFKTHVGaW1QbXlFQjVpZEh6ZExRdDVRWFFQK3dEcSs3ZzM0NnY0RVJuQ1FHaTJ2eU93VTNtQjRiCnpqU3VKNEk5cGZrYVByNGhpZWgrcktJQk54WjRTK3hZazZZZDcyVFNpcm1PNWwrVUk3ZzhWR2NBRGVON1VDTDIKK1V1REpCWUorc0JLMHRZeEl0OWZ2YkJtcVZOZlI5SmRlaVlXSHc0MG41aUd5TFZ2dUlxeEhYZWw2ZWMxUS9VWQpYS0lMRXg3YnBXLzNET1BjdUdtM3EwT1lZa3E1YXVYMUMvZ21YV0lZRVBJRVVjRHFsV2gxUzdIQWZuSldTcVFGCk9iTC8xK1RSaHJ1MmJnbGpPeE1DdFNuYVN3SnF6emowd0k3dGUwbndkTHllTlRKS0NURFFzRS81aHhTc1ZTVlUKdTNlNnYzVko4ZXBwNFJ4QWh3ZVR3bkJvc2V0WUxOdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU8xQnp0eTFneDh3dlJGNFNZUVRoeTh3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURneU1ERXdNRFV3T0ZvWERUSTJNRGd4T1RFdwpNRFV3T0Zvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQW9PaDBXakxZdDZsSFpLbU94S3FYQ3NybW1YOVMKNVpzdUhYR3NaczREZDR4K3R6S2o2OXpwaVBHMlc3VG0xSStvbWh3Z3Fnd1FtVWhsWUxJa1hUT1BhZmR4eW02agpMK3UvSkxsV0ZpT3pLQU5IYkozcWJXWHFHblBVSkxDMnNSNmJtUWtuV05OYU1NRmJKaDlnb1ZSZ2c3SEtqa1dOCkp2ZmEva0VYZ1FQcFIxRGw5RFMza0xCZnR3Tm4rYWNuTXluVzMvbW8rdEU0Z1FlVysrcnlhYm5IUXQwSy8zNVcKS3l6OVBGRXNsRXdXaWpTR2JxcFB3ZC8rNlR0SVZnVXdRNC9uMEZzNlBxaTREeVRlY2Y1empFQnpLT25nRGFpVApxZHg4Wlc0QWZDZnNNOW1CVktzRlpXU2xZVzNCZzBNb0h5U1lmK2dxRit5a2lFczhrY2V4bDgvcmlRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUTZWckpzaGZYZG1BSC95RW5ad09ZVgpTSElBZWpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBRkFNSkx3Unh5d2hWVE1KTitWTEd4cUlOTWRaaFRkcmg4Ny9wZ0xObTA1NU5mc0gKTGt5Y3pldkhjbXNlb05vNXpxZnptcjljR082R3VTaWZwZnpQZjNUYURROU81aFFzSWd1V0w4WFdHYnB4ZWJlegpkVkVIeUdhZkUrem1hY3EwUzQ2VCsyWitncWlON3prZTQ2SitlTU53bzk4S3VkK0N3ZnVna1J0b0RqME1LVThsCk9scnVTM1hSVkkzVGJ6bjRlUC9BZDMzZ1VaZUt3R0Nub21acnBXdDd2UExVQlRrOVZHMzdQNzNzRDNqMHorUTEKTnNWZDcwdkp1Qk8zVnF4Z2Z0enhkbi9pZFFMY0prejcwem94bVY5MDlFV3NVTlU4VVREYWJWbzl4a2ZUVmxWMgptR2pSSDhvVFBBR2J1V3ZoRVYvcmJ0dm5kaGpwVUdlQWZkM21rdXM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBb09oMFdqTFl0NmxIWkttT3hLcVhDc3JtbVg5UzVac3VIWEdzWnM0RGQ0eCt0ektqCjY5enBpUEcyVzdUbTFJK29taHdncWd3UW1VaGxZTElrWFRPUGFmZHh5bTZqTCt1L0pMbFdGaU96S0FOSGJKM3EKYldYcUduUFVKTEMyc1I2Ym1Ra25XTk5hTU1GYkpoOWdvVlJnZzdIS2prV05KdmZhL2tFWGdRUHBSMURsOURTMwprTEJmdHdObithY25NeW5XMy9tbyt0RTRnUWVXKytyeWFibkhRdDBLLzM1V0t5ejlQRkVzbEV3V2lqU0dicXBQCndkLys2VHRJVmdVd1E0L24wRnM2UHFpNER5VGVjZjV6akVCektPbmdEYWlUcWR4OFpXNEFmQ2ZzTTltQlZLc0YKWldTbFlXM0JnME1vSHlTWWYrZ3FGK3lraUVzOGtjZXhsOC9yaVFJREFRQUJBb0lCQUdENHRtWkZqbVhoRnEyTApvZ2JUNkFNUkZMZ2RDNUJrWFA1UnExeXBlMTFveGxVUnA4aFZja2lkb3hEUmpPczlTSmJYckxmT1haS0RGdFdYCmhtTEUyQUU4cHM4Z3JpZ0xJejYya3pMMGdOdjBYZThQbkdBaHMxd053aVA2ZTU5eW1zTTN5UWEzR1B1WkM1MkYKKzI0K3M0dXFjakFicWwxNXNmallzWm1IQ2VkMzNMMlVoYU5FVW95QXFRY2E5cFFjSUc1VGNqOEJiSEJ5bXBnTwpwRFFNYndkekdDVXNiQStZZFVkRWY0aFdqdFJ0dm45bDl6U0ZoMFZjbnRqWFBQWSt0bzFLSE9QOGFqbmg5aU5FCldiN0RSclJscnBMVGF1TDlqTG9oOUwwTWlTcGRRdEFwaDR3N0IzUGl4MUV0MGg1a21GT0o4VDJUVUVWRDVzbFkKbVlSWlRJRUNnWUVBd2hjYVo0ZFMzcStSQUowQzhXM2RJMkJmMUV2bjFEcDg0NmhMeENiK1NjRzBhMkY4b04wNwpSeFlyMlIrc2VkN0dveFl0VUFYSlNjeXFlOWhFaW1XekFqV2poK090UEJEWmNYK2tsMEFjMEx1bHRHU3c2VWk0ClVQbTBQVWNuK2s2dW04OUI3dDZSVXFaVWZaRnJiSk12cHZEYks0M21oUHN3WUtFMGk0L1dJbTBDZ1lFQTFEdkgKWU5hajFOR2FNUGdmc0JsSTFhZG1MbCtuN2pGKzI3UUNXVHJMY081TDFhV01NMVY4U0xBNFFwK3NsS28wL0dqTApEQnlPbnFQdDg3VjBsK0h2ZXl6alNvNnI4L0R3OFB1NGFKZW9NQ1RuQmMzRk9pQ1V2cno5QmcxdGF6MDVpWm9TClpCMGhzNW1XUTFsQndGZDlVNEpIdHBIZ1NNVld1VGRCUU9rMVhBMENnWUVBcEJsSWQ5UFFXdnJ4akNVMFFjL3oKc2w5ZlptMHUreDdnVE5NVURDb3p3VVNIT0dyYUptQW1LRG8wcElURkhOMGY4TzlsTEUxWUhJOXdiUGt6S2hoRwpPMDRDajNnT0ZjVGhNN2NKLzk5eS9ZQkozN1ZxWmpMWHM0OEx0dXVjZjJOYStkMUlENkFhR2xrTEFvZWEzZGVyCjZHZW54ckZZLzRJcEt1bmhOVVpOZEJrQ2dZRUFoUmMvdnNDYldMaGdvMWpXTms2RTJFYnoweHoxYUcvdGg4Vm8KdTZBZE9DS1h0OURyREw0TkJHQk54Nm51UmdRKzJoSzFVbEVPTnZuQ0hOU3IyeHM2WE5vWFp3ZjFXVEs5UmNIMQpNTkg2RE1iM2dUSTYvbXEwSExEVFUxcFVSYTNOU1RjdlZVelhkNU5YSWNEMWRMTG95dGVtTlIxaHN3RGRrNlRNCjdQSFNIbmtDZ1lBMVUwYlNYN05uYTFvem9YQVNWcTI1K2hIWk8yOCtKRUNxWlIzYmdQTzVUL3FnbXZuaXlHWHUKWkpNbXJuQWdlQUNZTjVud2w5UjV0dlVxM0NSUFo2NUZmZVA1bDNTUDNUZm9EdDBUT1ZsM29QM3p2eWhtUllzaQpyTHFSdzVNMWV5ZzVwQ0F5WFY4bVRySjExemRHa3Y4SGgySEVDcDhCeHpKbldNVmltdU1aSWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRlhlV0YzSGwvOXZudUFma3VPdFZvekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13T0RJd01UQXdOVEE0V2hjTk1qWXdPREU1TVRBdwpOVEE0V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ1ZMLzZZd3lsOGl0bWllRDhCSlViT2JnaXZqY0t3cVQxeFNrTld3bytGeExyVzZUdjQKN0F0Z2Vyd01sRWN3ZGJ6VC9ReUV1cWpHd1RrQWE3RXFEZll5L1RiWktFVlBqN2IvVFk1dGFHSHpHNnI5UHpldwpYbVRMMXZEOVBlRDNub1lTNFV5Mml3Vmp4cFdYRzZCMnVRK210RzgrTTRmbW95V25FcVNGZmZWeDNGWmk3Z3VwCkwyK1ZaVjdZNWdtZk44b1lqbVJJejFvSW5Ra0o5WmxpYTZZMFZJWEFIbWRTR25UY3FINy93eERLZmVXUWNYVDMKRUFuSWpxakRGTVBzTUd0emZJMVhhTXlLNUhJZXZvb3VQd0RZR1pZTHZGTkFXdzhHeFJPL0ZMRUpscUFneDIyUQp0Umd4b3lnQkVhQmFhSFN5MkNqVTRLK3hyeHZxV0RWeVUzYmZBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVPbGF5YklYMTNaZ0IvOGhKMmNEbUZVaHlBSG93RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFKTHVGaW1QbXlFQjVpZEh6ZExRdDVRWFFQK3dEcSs3ZzM0NnY0RVJuQ1FHaTJ2eU93VTNtQjRiCnpqU3VKNEk5cGZrYVByNGhpZWgrcktJQk54WjRTK3hZazZZZDcyVFNpcm1PNWwrVUk3ZzhWR2NBRGVON1VDTDIKK1V1REpCWUorc0JLMHRZeEl0OWZ2YkJtcVZOZlI5SmRlaVlXSHc0MG41aUd5TFZ2dUlxeEhYZWw2ZWMxUS9VWQpYS0lMRXg3YnBXLzNET1BjdUdtM3EwT1lZa3E1YXVYMUMvZ21YV0lZRVBJRVVjRHFsV2gxUzdIQWZuSldTcVFGCk9iTC8xK1RSaHJ1MmJnbGpPeE1DdFNuYVN3SnF6emowd0k3dGUwbndkTHllTlRKS0NURFFzRS81aHhTc1ZTVlUKdTNlNnYzVko4ZXBwNFJ4QWh3ZVR3bkJvc2V0WUxOdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZVENDQWttZ0F3SUJBZ0lSQU14SzJWYmtaaGhQaCtrd29wN1U2eHN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURneU1ERXdNRFV3T0ZvWERUSTJNRGd4T1RFdwpNRFV3T0Zvd0x6RXRNQ3NHQTFVRUF3d2tLaTVvYjIxbExXTnNkWE4wWlhJdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUExVXMzY0ZPZVNvYWQKSUIwcVM1a2FJSVhZT01YMWpSQXFvbE9YK3NQRUlnM3VCTnAyRk1WWkVJd1FxSTQvRkFnOXpvbi85SUR3Ri9NRApFNFdUbUc2THVESlppeUJDaHk2cHNQUDM2MGV0MUxwNzhyUTQ2Ym8zU0tSb3lYbTJoWGZDM0RuOGJIUm9yOTdXCnJmeUtITmtraWxnZ1RkRmRNdXBWQklhWUNISkhpeUxYeG9CNXYzU2hSTTNZL2xxYjU4dzcwbkxBV01weVRYUmYKNjNkTi9mV3RjcjM4OHdWNWxLdVp3aWxrS0xnUUdvT2RpMmpxQzgvSzFPMTNabFZtZklldjhMOGcyQjVyblFGbQp2eEpoYlYxT3R6MDdwa2hvakpOMUo5RGJkdzRWaC9zaDJ1eStQTTBLamxoTUVaMHdweUk0T01oTGRhUGJpSHVtClhBUFZEUElEQ3dJREFRQUJvNEdTTUlHUE1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlE2VnJKcwpoZlhkbUFIL3lFblp3T1lWU0hJQWVqQXZCZ05WSFJFRUtEQW1naVFxTG1odmJXVXRZMngxYzNSbGNpNW9kV0ppCmJHVXRaM0p3WXk1amFXeHBkVzB1YVc4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFHbTRpenRrcTM1UTJDVTMKWU1xeS9ENHU1RmdaY2w5dytmWjdxSVJ1dTlJVTZsMTZPNkJHTnhEWmR5cVRWcGs0cXRDNHgzdXJEREJURUdWRgpKLzdTUS9VdStkTlVXSkVyOWRKYVB0TlI5dWhNS3owblJRYWhyWDJQTUp5dyswNkVBSnk4RWxmeU1ONElCMStFCnQ3VENOa0pUb3pKMkVOSFlBY0ZCZVp4a3dQdy91dGtZNkNzSlRJMG5mc2F0NmFXRGRTSFVYeGhtcUhuSXU5QVcKeGFxRmdGNjRYcTVpTG1NaVdHS0RWR2xUTUV1dVRVVHlQSkQ5dHZRdVRvaE13VWF0Uk1BcFk3NzdkK09BY05WUApJSVQ5RGdnbk9QLzVDbk1ZblY5WDNwbk50REVuZytuWFBJbkl4Mzc1eGJXQW1HMlFRZGZYd2E2Mng4RzZnRXdzCmxYWmlMRm89Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMVVzM2NGT2VTb2FkSUIwcVM1a2FJSVhZT01YMWpSQXFvbE9YK3NQRUlnM3VCTnAyCkZNVlpFSXdRcUk0L0ZBZzl6b24vOUlEd0YvTURFNFdUbUc2THVESlppeUJDaHk2cHNQUDM2MGV0MUxwNzhyUTQKNmJvM1NLUm95WG0yaFhmQzNEbjhiSFJvcjk3V3JmeUtITmtraWxnZ1RkRmRNdXBWQklhWUNISkhpeUxYeG9CNQp2M1NoUk0zWS9scWI1OHc3MG5MQVdNcHlUWFJmNjNkTi9mV3RjcjM4OHdWNWxLdVp3aWxrS0xnUUdvT2RpMmpxCkM4L0sxTzEzWmxWbWZJZXY4TDhnMkI1cm5RRm12eEpoYlYxT3R6MDdwa2hvakpOMUo5RGJkdzRWaC9zaDJ1eSsKUE0wS2psaE1FWjB3cHlJNE9NaExkYVBiaUh1bVhBUFZEUElEQ3dJREFRQUJBb0lCQVFDM2R6OTBpemg0K2xsbApLakViWGRJdmIzR1JSQlgzQkpUbmsrZ0NkeW5aOFFsdmUwcGVpM0lVM2FYbWxwU0RjcU5YYVRTVTUrT2RkaGFMClVEYW93MDNEWHV2TzFDemxncW5MMzg2OHZxY3plRVR0ZTBBSkszZ3FMK0ZDakVNSGd3QkYxa3JlTHpOdE04eU4KVTlDcEI4NTZnVnNvRkpLS0hTNkwrZ29FR2VpWU1Bbk1WOUowVjBtYml1U044QnVJM21OZkhsRGxqZEpjemVpMgorWndRVENoOHVrOU5TVkRRbU8yb3JDRUc1WFdhYW54SW5jdnU2UHAyTGJleU8rWXR1UGUzM2taMlgxRUQ3Vm05Cjg4NUJuV1pzMU9xUnlkbjFzZHlOcncyUlpYQ09SdzlDK05hVzJyVW4zTWkwb0N6TmtNUExFN25Kb1YwRUhBT0sKSGx4K3EySGhBb0dCQVBYeUhYMkpaTWowbkFVam56bmRUaE4vZ1N5NXJVVVZEWmNSSlR4dEZSMGU0bEpqWmFGRgpGdnFnZFpTWG4vbnphc3lNM21raEdBNzhWelk3WHZCbHVlOWpZNlNrdGw1ZXVTWGlDMVlQMzhZNTQ3WlhrRW5OCld6L2NYdnNxSHVma3lrYjFZcEdrZWFleTAxVjZ2RExPckNQK3ovNFFvZ0Z4OWVwVU5mVG9YNnFmQW9HQkFONEQKWS9RU2p6cER0b1hVN3k3WThxOXBIWktEbVlqeEh1Rmp5SGtHZnEvYnFsa1h0dEJ2ekNSVUkzdFhBbGM0Y2JRdwpTU0FGYzloQ2o1MmxjNVNMWkErMkx1OFMyTHQzdWovblgrT0JMNjEycXY1aUoyWjdsNGN6OVk3WXJyaEdQZmFXCno5M0w0L0dNNlJGM25PSmo2RDE2NERZbndqQ0hXK2Jva2VINURId1ZBb0dBVjZoSmRuckhudy8vbzUxRW5OMFIKZk1XUEJwL083N1pITjdaMnJRaTc0N3NrTXZVV1BkcGdERWV3WUp1Qit4WVUxSDdJcm5PTEhadzJnUys3OExaeApCSzlKemw2ZVdSZ3RxU0RkcFhqVzZ0R3JKVXdrTXdtc0lpQ3JBWjNMa2g3ck1VczRMR3lRcDRLRzdBcG9sVHN3CkEweElXV2NZTnFlbFhEVlRYY3lNZkVVQ2dZQStYTU54NXRpMnJCaVVKVWorWnRCY3QzRW9HN0ZBQjBMK1d0SVEKTk9QWE1DUDhuSzJzaFFyWjFZeVY4ODNqaENaa1QvL3FiNzJucktLOHpLSFh3d1BiYWZockRXYzEyWjdHbm82UAowRlQ5SzgxQ1lYM2h5cXU0dmI2blhuUk5yT1Z3NDlJRjRtVG9FQVhUOHo1dFZWVUNHQWJ0RDJQN3o3bmY5Y29zCnFKRjZOUUtCZ1FDZzIxVnB1M01VZjRYbUpTSEpjNERuQ0lkckdKQ1FONXhKSCtMcnhQc1BURFFzTlBOWWhkK2kKazY2TTJXc0JRY1pPV1FUQ21yTDk4WVlCdWtldWZxZVl0amlqNzdQWGVGTnRRZjV1dzQycTNRRVBPOXYrTUJyVApuTUhoQWVhZExQWDhWdVBxaktzVTE4MFVick05VmhHWEFubGtIUzFnWGgwL0R0VVRCaytlOFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
    - name: hubble-metrics
      port: 9965
      protocol: TCP
      targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
    - name: peer-service
      port: 443
      protocol: TCP
      targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ff3b9199d7b5e6bd7fb5d7f7a384bbd180fac7ffd759126297980faeca2a01ee
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  io.cilium/app: operator
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
        - args:
            - --config-dir=/tmp/cilium/config-map
            - --debug=$(CILIUM_DEBUG)
          command:
            - cilium-operator-generic
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_DEBUG
              valueFrom:
                configMapKeyRef:
                  key: debug
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: 192.168.1.20
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/operator-generic:v1.14.1@sha256:e061de0a930534c7e3f8feda8330976367971238ccafff42659f104effd4b5f7
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 9234
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 3
          name: cilium-operator
          readinessProbe:
            failureThreshold: 5
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 9234
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 5
            timeoutSeconds: 3
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /tmp/cilium/config-map
              name: cilium-config-path
              readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
        - operator: Exists
      volumes:
        - configMap:
            name: cilium-config
          name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 2377e902b05fcb5eab2f040823d96bf083593a39234638f79da89f0a3ba15121
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  k8s-app: cilium
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
        - args:
            - serve
          command:
            - hubble-relay
          image: quay.io/cilium/hubble-relay:v1.14.1@sha256:db30e85a7abc10589ce2a97d61ee18696a03dc5ea04d44b4d836d88bd75b59d8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            tcpSocket:
              port: grpc
          name: hubble-relay
          ports:
            - containerPort: 4245
              name: grpc
          readinessProbe:
            tcpSocket:
              port: grpc
          securityContext:
            capabilities:
              drop:
                - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /etc/hubble-relay
              name: config
              readOnly: true
            - mountPath: /var/lib/hubble-relay/tls
              name: tls
              readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
        - configMap:
            items:
              - key: config.yaml
                path: config.yaml
            name: hubble-relay-config
          name: config
        - name: tls
          projected:
            defaultMode: 256
            sources:
              - secret:
                  items:
                    - key: tls.crt
                      path: client.crt
                    - key: tls.key
                      path: client.key
                    - key: ca.crt
                      path: hubble-server-ca.crt
                  name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
        - image: quay.io/cilium/hubble-ui:v0.12.0@sha256:1c876cfa1d5e35bc91e1025c9314f922041592a88b03313c22c1f97a5d2ba88f
          imagePullPolicy: IfNotPresent
          name: frontend
          ports:
            - containerPort: 8081
              name: http
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /etc/nginx/conf.d/default.conf
              name: hubble-ui-nginx-conf
              subPath: nginx.conf
            - mountPath: /tmp
              name: tmp-dir
        - env:
            - name: EVENTS_SERVER_PORT
              value: "8090"
            - name: FLOWS_API_ADDR
              value: hubble-relay:80
          image: quay.io/cilium/hubble-ui-backend:v0.12.0@sha256:8a79a1aad4fc9c2aa2b3e4379af0af872a89fcec9d99e117188190671c66fc2e
          imagePullPolicy: IfNotPresent
          name: backend
          ports:
            - containerPort: 8090
              name: grpc
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
        - configMap:
            defaultMode: 420
            name: hubble-ui-nginx
          name: hubble-ui-nginx-conf
        - emptyDir: {}
          name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ff3b9199d7b5e6bd7fb5d7f7a384bbd180fac7ffd759126297980faeca2a01ee
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  k8s-app: cilium
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
        - args:
            - --config-dir=/tmp/cilium/config-map
          command:
            - cilium-agent
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_CLUSTERMESH_CONFIG
              value: /var/lib/cilium/clustermesh/
            - name: KUBERNETES_SERVICE_HOST
              value: 192.168.1.20
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/cilium:v1.14.1@sha256:edc1d05ea1365c4a8f6ac6982247d5c145181704894bb698619c3827b6963a72
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                  - /cni-uninstall.sh
          livenessProbe:
            failureThreshold: 10
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: cilium-agent
          ports:
            - containerPort: 4244
              hostPort: 4244
              name: peer-service
              protocol: TCP
            - containerPort: 9965
              hostPort: 9965
              name: hubble-metrics
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          securityContext:
            capabilities:
              add:
                - CHOWN
                - KILL
                - NET_ADMIN
                - NET_RAW
                - IPC_LOCK
                - SYS_ADMIN
                - SYS_RESOURCE
                - DAC_OVERRIDE
                - FOWNER
                - SETGID
                - SETUID
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          startupProbe:
            failureThreshold: 105
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /host/proc/sys/net
              name: host-proc-sys-net
            - mountPath: /host/proc/sys/kernel
              name: host-proc-sys-kernel
            - mountPath: /sys/fs/bpf
              mountPropagation: HostToContainer
              name: bpf-maps
            - mountPath: /sys/fs/cgroup
              name: cilium-cgroup
            - mountPath: /var/run/cilium
              name: cilium-run
            - mountPath: /host/etc/cni/net.d
              name: etc-cni-netd
            - mountPath: /var/lib/cilium/clustermesh
              name: clustermesh-secrets
              readOnly: true
            - mountPath: /lib/modules
              name: lib-modules
              readOnly: true
            - mountPath: /run/xtables.lock
              name: xtables-lock
            - mountPath: /var/lib/cilium/tls/hubble
              name: hubble-tls
              readOnly: true
            - mountPath: /tmp
              name: tmp
      hostNetwork: true
      initContainers:
        - command:
            - cilium
            - build-config
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: KUBERNETES_SERVICE_HOST
              value: 192.168.1.20
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/cilium:v1.14.1@sha256:edc1d05ea1365c4a8f6ac6982247d5c145181704894bb698619c3827b6963a72
          imagePullPolicy: IfNotPresent
          name: config
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /tmp
              name: tmp
        - args:
            - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
          command:
            - /bin/bash
            - -c
            - --
          image: quay.io/cilium/cilium:v1.14.1@sha256:edc1d05ea1365c4a8f6ac6982247d5c145181704894bb698619c3827b6963a72
          imagePullPolicy: IfNotPresent
          name: mount-bpf-fs
          securityContext:
            privileged: true
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /sys/fs/bpf
              mountPropagation: Bidirectional
              name: bpf-maps
        - command:
            - /init-container.sh
          env:
            - name: CILIUM_ALL_STATE
              valueFrom:
                configMapKeyRef:
                  key: clean-cilium-state
                  name: cilium-config
                  optional: true
            - name: CILIUM_BPF_STATE
              valueFrom:
                configMapKeyRef:
                  key: clean-cilium-bpf-state
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: 192.168.1.20
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/cilium:v1.14.1@sha256:edc1d05ea1365c4a8f6ac6982247d5c145181704894bb698619c3827b6963a72
          imagePullPolicy: IfNotPresent
          name: clean-cilium-state
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
                - SYS_ADMIN
                - SYS_RESOURCE
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /sys/fs/bpf
              name: bpf-maps
            - mountPath: /sys/fs/cgroup
              mountPropagation: HostToContainer
              name: cilium-cgroup
            - mountPath: /var/run/cilium
              name: cilium-run
        - command:
            - /install-plugin.sh
          image: quay.io/cilium/cilium:v1.14.1@sha256:edc1d05ea1365c4a8f6ac6982247d5c145181704894bb698619c3827b6963a72
          imagePullPolicy: IfNotPresent
          name: install-cni-binaries
          resources:
            requests:
              cpu: 100m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /host/opt/cni/bin
              name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
        - operator: Exists
      volumes:
        - emptyDir: {}
          name: tmp
        - hostPath:
            path: /var/run/cilium
            type: DirectoryOrCreate
          name: cilium-run
        - hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
          name: bpf-maps
        - hostPath:
            path: /sys/fs/cgroup
            type: DirectoryOrCreate
          name: cilium-cgroup
        - hostPath:
            path: /opt/cni/bin
            type: DirectoryOrCreate
          name: cni-path
        - hostPath:
            path: /etc/cni/net.d
            type: DirectoryOrCreate
          name: etc-cni-netd
        - hostPath:
            path: /lib/modules
          name: lib-modules
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - name: clustermesh-secrets
          projected:
            defaultMode: 256
            sources:
              - secret:
                  name: cilium-clustermesh
                  optional: true
              - secret:
                  items:
                    - key: tls.key
                      path: common-etcd-client.key
                    - key: tls.crt
                      path: common-etcd-client.crt
                    - key: ca.crt
                      path: common-etcd-client-ca.crt
                  name: clustermesh-apiserver-remote-cert
                  optional: true
        - hostPath:
            path: /proc/sys/net
            type: Directory
          name: host-proc-sys-net
        - hostPath:
            path: /proc/sys/kernel
            type: Directory
          name: host-proc-sys-kernel
        - name: hubble-tls
          projected:
            defaultMode: 256
            sources:
              - secret:
                  items:
                    - key: tls.crt
                      path: server.crt
                    - key: tls.key
                      path: server.key
                    - key: ca.crt
                      path: client-ca.crt
                  name: hubble-server-certs
                  optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
