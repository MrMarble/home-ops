---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlLamlyT0JDRlV6UFJjdWNqLzh1NGN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURjeE5ERXhNalEwTjFvWERUSTJNRGN4TXpFeApNalEwTjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUExMWJOVVY5S01pSTdhcDhqWHZkTlJXVDNWTnI3NnZTcVQvY1JVYVAzUzZhSzJvbmYKRi9vM29DdHQ5Um90U2pGMm9sYW1ISTg0Y1VoZVcrU0JEL25mQU4xL2MzcXlrWEJTdndMazA0TnBhVDFvRUhubwpvaFR6V09DbnN5SWJQQkZkU20weS9SaXhUT0FmOHJ6UHBPMStmaDB3bWIrTGhxQzEwQzROOE5lVU1YLy9uOStOCnR3YzlkcDJtYWFZdzM4ZW96K1Q3djdDMUZrdGVtSVp0TkNiN1B5MGk0dHFtTzFkNmhLVkRCNEpYeVdpQ0pMYlYKQ0JVbVh2QXFTVFRUU1c4UkxjSGVTdjB3Tk9vVDdmSyt0dWF4ajNkNDlNL1V1SDlRb2VUT0ZZeHVXOENpUVlHUAp5YWt6WEV1djdFeEZ0TzJRaDJBV3RuOW5VbFIyU0l6amV1ak5MUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQmZIamo5ZmtnT3FGMUNVMWtVY21Wb0lCYVdrTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQkVvV0VvKzZSU1lqYWhqa0xQdUx0NWtpTUEwUzNjOEJjN3JiK25KclFwVUlGZ3o0QmM3SEpwCkFFQ0IyVC9BdmUxQlBHbTBOTk9EV0VBdGVlQk1WUzBFbElMNW5vTmZMZHZVZEh3TjRYWndFRzRiczBLQVhQVzYKZmpZNWhaWEJla0dvRWgvSkpieHRuNWVwc3kyc3JweEwrVGFrY3ZDRW92eG0wTGo0Tk9TT00wQ1hZSS9QOEk2cQorVEFNamRrMGRWZ2Z0by9aOE55aDVvU3Y2TXpZdTRycjlQSC9uMCtKUkZnTFhhQ3RISmRDZnVrT3BzNkdCelZiCklKeHVrZkRQZUdDbFhtRmZxUEtYUkw5cHBmUkhLUVF3Rm4vMkVKTEUxNC96dXFTbC8xWFRkQnh4UW5mYkRRdGgKV2F6VG9ZRE5hclhQbmh1eW96Q3c2UmU0cTFBQW5sY1UKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBMTFiTlVWOUtNaUk3YXA4alh2ZE5SV1QzVk5yNzZ2U3FUL2NSVWFQM1M2YUsyb25mCkYvbzNvQ3R0OVJvdFNqRjJvbGFtSEk4NGNVaGVXK1NCRC9uZkFOMS9jM3F5a1hCU3Z3TGswNE5wYVQxb0VIbm8Kb2hUeldPQ25zeUliUEJGZFNtMHkvUml4VE9BZjhyelBwTzErZmgwd21iK0xocUMxMEM0TjhOZVVNWC8vbjkrTgp0d2M5ZHAybWFhWXczOGVveitUN3Y3QzFGa3RlbUladE5DYjdQeTBpNHRxbU8xZDZoS1ZEQjRKWHlXaUNKTGJWCkNCVW1YdkFxU1RUVFNXOFJMY0hlU3Ywd05Pb1Q3ZksrdHVheGozZDQ5TS9VdUg5UW9lVE9GWXh1VzhDaVFZR1AKeWFrelhFdXY3RXhGdE8yUWgyQVd0bjluVWxSMlNJempldWpOTFFJREFRQUJBb0lCQUNaR25vNGxNdW9BWGJGUgpBaGVDTzdEbkJuT0Z6UnR4UzhpVThQWWkvL1RwY0dyeDhMNnhVaXZkTEZsUnd0VWFQNjBSVzh0ZHhibVZGSGlmCkFEWFh3MFRER2tGcmdNd0xQQm9KcUtUVUNldVQ1Nmh1RXVTa2RyRElsZVpvWEpEcndUcFdlS2EyT2VXaFBPeUgKbFIwS3ZkNHEwQlcwRDFmcHZ3ZDIrREZrRUVwUDAzS2x3bktqQjdDTlluR1lDeUJxbWFWRFRzRGprMm1ma0trQQozbXpNUnNWSXZZSUY3Q0Vhd0VhWEZjNGN3ZHY2akZNWjhJVUlYZXFkVmliRnlNdTMrZk8rREJmclhrTk85QzRoCmUxckNQTnpVWmhoVEl6NG9jOG5XbHJ4alN6TlhrUGZkM1ZzWXlTWkMxWTFCL0JvdXFjUmJ6N29jNitUYzJ4dVMKNlNRNVBhRUNnWUVBKzl1bDQ0MG5oc1F2UWpUejIyNnlQSmNLSFJSUm9XNWdtM01ZYm1ibzA3aU9mYTlPUDdiTgp1WUFVVE43VXNZZTlxWlRIbWQrb2tSM2NIejNhNmNYa3cvYW01WWZvOTgwMU5ObUViNlJtR3UwajZNc05iV3pXCmc2U0YvQkdYZE9pUEVaNkt2eitVdXJYdXljajVPNnA2U2JodmhlK0hIc1l1Z3Yzb2ZEclhIcWtDZ1lFQTJ1Rm4Kcmo0UE9Ba2x2UWlxN3hhNVRDUFRKK083b2pYekJPTGxjcnV3djFpK2lZbmlHcUl2d050RDRlKy9iY0w4NjQ2dApFYnZHMFhKL1AzUjhpTGhKdUpNcDFNbXZCQ2NvYVVPT0hxR3ZqMHJtVEtpVUcvb1JsWW1kSWMreWNKR1IyNHN3CmlvQ1ZTanczOEhGWmp1ZWxMMzIvUld3M1ZUQS80Z0pHUGVrRFlPVUNnWUFUaTZJK0hKQTZ0ekxyc214U1ZTN2oKNE56YUVOK2M1Wkg5dmxyaEJuOS9IczJBRjRDOUZSUzJGcWg4cHJaZTZLZmhaemh1U3Bzc1YrTGpVY3VSWk5neQpGUXd5dCs5dWU3QnJYNDRWays2UW5HS3pDRDhNaE92STM1VytVQ2N1M1hWczZwN2Q1TE5JSWlKYjZvcmRCSWZrCi9MazY3YkhRdzVTTWVlUDI4Q0lOc1FLQmdEU2dEenFRaHo0MHpOTUhXM25DbitpVGtIZzl3K1k3VEdPM1hlMVkKL1NUMFpGTlRTSDZZMGh4dlc0SGVEOHVISHlKUG1vTHgvOXBweWZocXZHcHV6S0xKRnp5bkJTSmRlOVRiUGpkVgpMbzJvTjNqazZ6OVN2NW1SamFzTWNkMm8wa1hUMEdic2hYaGt4QnBXVm04S2VPZlROd0t0QXh6RFRnaTcvVUZ6ClhiR1ZBb0dBR2hRdmFtTTJjVHhjTWt4UWFkenkvOHNrQ3NXNENxeWdaRmlzbTV1c0p3bXBsV0tHbGd1akhibEIKWUdQSFpaeDFIRjZBMmZUeWIzRVR6MHJ6RUd4TG5vbmhtM0tnVjE5VkVqQVNKYm96WlNYYnJTV3B1L0tmRzBKbwpGcU9zd3JjYUdjY1BrZEhhY2dyVkFmbllzWEN1S1BUYUd3eW1ZVXZaYkdKcEkyOXlKc1E9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlLamlyT0JDRlV6UFJjdWNqLzh1NGN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURjeE5ERXhNalEwTjFvWERUSTJNRGN4TXpFeApNalEwTjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUExMWJOVVY5S01pSTdhcDhqWHZkTlJXVDNWTnI3NnZTcVQvY1JVYVAzUzZhSzJvbmYKRi9vM29DdHQ5Um90U2pGMm9sYW1ISTg0Y1VoZVcrU0JEL25mQU4xL2MzcXlrWEJTdndMazA0TnBhVDFvRUhubwpvaFR6V09DbnN5SWJQQkZkU20weS9SaXhUT0FmOHJ6UHBPMStmaDB3bWIrTGhxQzEwQzROOE5lVU1YLy9uOStOCnR3YzlkcDJtYWFZdzM4ZW96K1Q3djdDMUZrdGVtSVp0TkNiN1B5MGk0dHFtTzFkNmhLVkRCNEpYeVdpQ0pMYlYKQ0JVbVh2QXFTVFRUU1c4UkxjSGVTdjB3Tk9vVDdmSyt0dWF4ajNkNDlNL1V1SDlRb2VUT0ZZeHVXOENpUVlHUAp5YWt6WEV1djdFeEZ0TzJRaDJBV3RuOW5VbFIyU0l6amV1ak5MUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQmZIamo5ZmtnT3FGMUNVMWtVY21Wb0lCYVdrTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQkVvV0VvKzZSU1lqYWhqa0xQdUx0NWtpTUEwUzNjOEJjN3JiK25KclFwVUlGZ3o0QmM3SEpwCkFFQ0IyVC9BdmUxQlBHbTBOTk9EV0VBdGVlQk1WUzBFbElMNW5vTmZMZHZVZEh3TjRYWndFRzRiczBLQVhQVzYKZmpZNWhaWEJla0dvRWgvSkpieHRuNWVwc3kyc3JweEwrVGFrY3ZDRW92eG0wTGo0Tk9TT00wQ1hZSS9QOEk2cQorVEFNamRrMGRWZ2Z0by9aOE55aDVvU3Y2TXpZdTRycjlQSC9uMCtKUkZnTFhhQ3RISmRDZnVrT3BzNkdCelZiCklKeHVrZkRQZUdDbFhtRmZxUEtYUkw5cHBmUkhLUVF3Rm4vMkVKTEUxNC96dXFTbC8xWFRkQnh4UW5mYkRRdGgKV2F6VG9ZRE5hclhQbmh1eW96Q3c2UmU0cTFBQW5sY1UKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBMTFiTlVWOUtNaUk3YXA4alh2ZE5SV1QzVk5yNzZ2U3FUL2NSVWFQM1M2YUsyb25mCkYvbzNvQ3R0OVJvdFNqRjJvbGFtSEk4NGNVaGVXK1NCRC9uZkFOMS9jM3F5a1hCU3Z3TGswNE5wYVQxb0VIbm8Kb2hUeldPQ25zeUliUEJGZFNtMHkvUml4VE9BZjhyelBwTzErZmgwd21iK0xocUMxMEM0TjhOZVVNWC8vbjkrTgp0d2M5ZHAybWFhWXczOGVveitUN3Y3QzFGa3RlbUladE5DYjdQeTBpNHRxbU8xZDZoS1ZEQjRKWHlXaUNKTGJWCkNCVW1YdkFxU1RUVFNXOFJMY0hlU3Ywd05Pb1Q3ZksrdHVheGozZDQ5TS9VdUg5UW9lVE9GWXh1VzhDaVFZR1AKeWFrelhFdXY3RXhGdE8yUWgyQVd0bjluVWxSMlNJempldWpOTFFJREFRQUJBb0lCQUNaR25vNGxNdW9BWGJGUgpBaGVDTzdEbkJuT0Z6UnR4UzhpVThQWWkvL1RwY0dyeDhMNnhVaXZkTEZsUnd0VWFQNjBSVzh0ZHhibVZGSGlmCkFEWFh3MFRER2tGcmdNd0xQQm9KcUtUVUNldVQ1Nmh1RXVTa2RyRElsZVpvWEpEcndUcFdlS2EyT2VXaFBPeUgKbFIwS3ZkNHEwQlcwRDFmcHZ3ZDIrREZrRUVwUDAzS2x3bktqQjdDTlluR1lDeUJxbWFWRFRzRGprMm1ma0trQQozbXpNUnNWSXZZSUY3Q0Vhd0VhWEZjNGN3ZHY2akZNWjhJVUlYZXFkVmliRnlNdTMrZk8rREJmclhrTk85QzRoCmUxckNQTnpVWmhoVEl6NG9jOG5XbHJ4alN6TlhrUGZkM1ZzWXlTWkMxWTFCL0JvdXFjUmJ6N29jNitUYzJ4dVMKNlNRNVBhRUNnWUVBKzl1bDQ0MG5oc1F2UWpUejIyNnlQSmNLSFJSUm9XNWdtM01ZYm1ibzA3aU9mYTlPUDdiTgp1WUFVVE43VXNZZTlxWlRIbWQrb2tSM2NIejNhNmNYa3cvYW01WWZvOTgwMU5ObUViNlJtR3UwajZNc05iV3pXCmc2U0YvQkdYZE9pUEVaNkt2eitVdXJYdXljajVPNnA2U2JodmhlK0hIc1l1Z3Yzb2ZEclhIcWtDZ1lFQTJ1Rm4Kcmo0UE9Ba2x2UWlxN3hhNVRDUFRKK083b2pYekJPTGxjcnV3djFpK2lZbmlHcUl2d050RDRlKy9iY0w4NjQ2dApFYnZHMFhKL1AzUjhpTGhKdUpNcDFNbXZCQ2NvYVVPT0hxR3ZqMHJtVEtpVUcvb1JsWW1kSWMreWNKR1IyNHN3CmlvQ1ZTanczOEhGWmp1ZWxMMzIvUld3M1ZUQS80Z0pHUGVrRFlPVUNnWUFUaTZJK0hKQTZ0ekxyc214U1ZTN2oKNE56YUVOK2M1Wkg5dmxyaEJuOS9IczJBRjRDOUZSUzJGcWg4cHJaZTZLZmhaemh1U3Bzc1YrTGpVY3VSWk5neQpGUXd5dCs5dWU3QnJYNDRWays2UW5HS3pDRDhNaE92STM1VytVQ2N1M1hWczZwN2Q1TE5JSWlKYjZvcmRCSWZrCi9MazY3YkhRdzVTTWVlUDI4Q0lOc1FLQmdEU2dEenFRaHo0MHpOTUhXM25DbitpVGtIZzl3K1k3VEdPM1hlMVkKL1NUMFpGTlRTSDZZMGh4dlc0SGVEOHVISHlKUG1vTHgvOXBweWZocXZHcHV6S0xKRnp5bkJTSmRlOVRiUGpkVgpMbzJvTjNqazZ6OVN2NW1SamFzTWNkMm8wa1hUMEdic2hYaGt4QnBXVm04S2VPZlROd0t0QXh6RFRnaTcvVUZ6ClhiR1ZBb0dBR2hRdmFtTTJjVHhjTWt4UWFkenkvOHNrQ3NXNENxeWdaRmlzbTV1c0p3bXBsV0tHbGd1akhibEIKWUdQSFpaeDFIRjZBMmZUeWIzRVR6MHJ6RUd4TG5vbmhtM0tnVjE5VkVqQVNKYm96WlNYYnJTV3B1L0tmRzBKbwpGcU9zd3JjYUdjY1BrZEhhY2dyVkFmbllzWEN1S1BUYUd3eW1ZVXZaYkdKcEkyOXlKc1E9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlLamlyT0JDRlV6UFJjdWNqLzh1NGN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURjeE5ERXhNalEwTjFvWERUSTJNRGN4TXpFeApNalEwTjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUExMWJOVVY5S01pSTdhcDhqWHZkTlJXVDNWTnI3NnZTcVQvY1JVYVAzUzZhSzJvbmYKRi9vM29DdHQ5Um90U2pGMm9sYW1ISTg0Y1VoZVcrU0JEL25mQU4xL2MzcXlrWEJTdndMazA0TnBhVDFvRUhubwpvaFR6V09DbnN5SWJQQkZkU20weS9SaXhUT0FmOHJ6UHBPMStmaDB3bWIrTGhxQzEwQzROOE5lVU1YLy9uOStOCnR3YzlkcDJtYWFZdzM4ZW96K1Q3djdDMUZrdGVtSVp0TkNiN1B5MGk0dHFtTzFkNmhLVkRCNEpYeVdpQ0pMYlYKQ0JVbVh2QXFTVFRUU1c4UkxjSGVTdjB3Tk9vVDdmSyt0dWF4ajNkNDlNL1V1SDlRb2VUT0ZZeHVXOENpUVlHUAp5YWt6WEV1djdFeEZ0TzJRaDJBV3RuOW5VbFIyU0l6amV1ak5MUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQmZIamo5ZmtnT3FGMUNVMWtVY21Wb0lCYVdrTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQkVvV0VvKzZSU1lqYWhqa0xQdUx0NWtpTUEwUzNjOEJjN3JiK25KclFwVUlGZ3o0QmM3SEpwCkFFQ0IyVC9BdmUxQlBHbTBOTk9EV0VBdGVlQk1WUzBFbElMNW5vTmZMZHZVZEh3TjRYWndFRzRiczBLQVhQVzYKZmpZNWhaWEJla0dvRWgvSkpieHRuNWVwc3kyc3JweEwrVGFrY3ZDRW92eG0wTGo0Tk9TT00wQ1hZSS9QOEk2cQorVEFNamRrMGRWZ2Z0by9aOE55aDVvU3Y2TXpZdTRycjlQSC9uMCtKUkZnTFhhQ3RISmRDZnVrT3BzNkdCelZiCklKeHVrZkRQZUdDbFhtRmZxUEtYUkw5cHBmUkhLUVF3Rm4vMkVKTEUxNC96dXFTbC8xWFRkQnh4UW5mYkRRdGgKV2F6VG9ZRE5hclhQbmh1eW96Q3c2UmU0cTFBQW5sY1UKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQUlDVC9ZSEU3UVczT0hkMjZMRTc0VDB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURjeE5ERXhNalEwTjFvWERUSTJNRGN4TXpFeApNalEwTjFvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU5KR1V3ZGFkL2c0d2h4UzJUTFMKWjIxZzhHcUJkTk1ubk9hK3FkNzJFajhaUUFJT285eVV3ZWVqYzVlUkhkT1hqUUhJWnFCNHhmdmxtVURMZ0NsQgpLSXhjRzBJMGdvZ3VON0Q1Y0pJUTNkRFZjb2tSZ0psY3lOY0huaUdPY0w0Y1NWTzMrSkxmR2xSYUhSTGJGbVV4CkFFb1ppL29tTzVEUTVWUGo3Tkt4UDJBUGpDaDlKV3FWZHYzVGJFQkhmQ2lCbnhsb0lXZElPU1hQZVVWNnNGb04KNjhVT1J2UGtvOTlIVHRUNlUxTUROYmpCc0t0b3QzS1V3QzNjMmtFbWxPQWNFVnorN3dPSkd0THdvZ1lrUW5pcgpsZ3JaOTVXQkNycTVLTDRyV1kyZ0pXV3FqYUlaRjcrK1lOaHNjcWVIaHFPKy9vd0RNSjRYUkJpYldRbkVWYStMCm1qc0NBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVUY4ZU9QMStTQTZvWApVSlRXUlJ5WldnZ0ZwYVF3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWJLTUMzOW9Hbm95ODVJUUo1R1lmQzJIekF3czkKeVZiQlpGVENNR2hPU05hSzFXZStxVzh1bXZwMk1UU2hPQVprcS9PYTBuUWZYRUFWY2dqL1poYmNjWlNJS1c1OAo0bGNrN1U1czkreHFqbVpiRzZQVk1pZHJlSlgrQ3lMUVR1ZkZTY2xZOXNRREtsTk1yV2dxSW4zWm1xZEk3NzgxCjRHeTNmT0dNOVg3NG5zNmd3eWhBdENBS1Vrb0s5dkF1Q0NrSG9pa240dGsvSXVOZnRXOWdVaUlldzBKWitTNXYKUWg0ZFp1a2cyajdOZllDL29SZEhrOUxweUtoM1NIRzdQTDVNY1daa1dUUW52ZENMdStZRXdWMU9CVXhFdVlNawpDUThZelozUjZaUk5NakxPSUljSXgrVzNiS1NhVmdlVlZ5UmNzVDZDai9RcTNvZW5kdUNlREhieVJ3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMGtaVEIxcDMrRGpDSEZMWk10Sm5iV0R3YW9GMDB5ZWM1cjZwM3ZZU1B4bEFBZzZqCjNKVEI1Nk56bDVFZDA1ZU5BY2htb0hqRisrV1pRTXVBS1VFb2pGd2JRalNDaUM0M3NQbHdraERkME5WeWlSR0EKbVZ6STF3ZWVJWTV3dmh4SlU3ZjRrdDhhVkZvZEV0c1daVEVBU2htTCtpWTdrTkRsVStQczByRS9ZQStNS0gwbAphcFYyL2ROc1FFZDhLSUdmR1dnaFowZzVKYzk1Ulhxd1dnM3J4UTVHOCtTajMwZE8xUHBUVXdNMXVNR3dxMmkzCmNwVEFMZHphUVNhVTRCd1JYUDd2QTRrYTB2Q2lCaVJDZUt1V0N0bjNsWUVLdXJrb3ZpdFpqYUFsWmFxTm9oa1gKdjc1ZzJHeHlwNGVHbzc3K2pBTXduaGRFR0p0WkNjUlZyNHVhT3dJREFRQUJBb0lCQVFDeHdvZXdZTGVvM1BxawpEUm5Xais2bGxkeklmUFl4QjN6cHlHYzh1Sk9HU2lkRlZmRUtxYXNlMHB3R2xzUTdPeFFXWEw3OWkvdjdUZ2IzCnN0Ritqcm5qcG4zWXd5RlNWSmY2QVhVNzFneGUzZ0w4Z3hKUEZCUXBUQ1JQUStabG9PNFFXeWRGcWx2TTBYMWcKa2x2bFliNVg1aTdpWXUzYUorNm1zN2xpQ0R1R1RUWW1pd2JDUUFBLzBpd29ZL2pkbnE5RGJtd0MyMnVSUXN6ZAovYlUvdTliSGUxQllGeU42K3duNjlqNjRlMkZTaE5IdVl4MHJqMXV3NFlUc0YxWml4b0xWdkRVVnBqTVlVcll4Ci9VUWlSUmVXQUpuRjR0TDZoSENmRHcvRVpZK2lobUNxQ254cm4vOXNVRU9hM2ttL0hiSXlLTURBQnhjNm03S2MKYTZnY3h5ODVBb0dCQU9xWW5wU09vMmtpUnh0RWh0YnJ0VEtVNG1ZajJmY0RBdGZiWU5RcElMMEFBY3dPSTFSOQpJd2VKdGhiN2V2U2k2eWxLY0xIcXRKbVRFNExGSG0wTVBHNERpOVFEc0s5UmpBWGdNc0oxOFlYM1diU2V3dFFVCjlOVFYvQzhoaS9WN0FwNTdabkJCTzFpZUR6RlFiWDV5NXNxQ3dsUVRTRWJTRTU1dmsrdkZXNGI5QW9HQkFPVjEKb3czN1JBSk1Kditra0d3NnRScVVGaGttWG9PQm5Bc2I2cE5VZndPTkNud1hwYWNUQVdJYm5NS2t1L2NieWU1RgpkUUVJSHMrUVNZMktBMHJiUnNLQmJYbERHU056MzY4b3UyeHVLVkRXM09UQUdKT0d3cGxXK2RnQlprWUg1VWxzCmNrdVIxOFo4N20ycnBzczIzaTBtNk1BQVVXbG1xSDVDbTN0YkcxZVhBb0dBTWVuM0U3U2xvQ0RpOERKTVhqNFkKZDRLbUNRVm53dDZwSkRSUkRkTVNYQ1E4UGFaa2JmMlNEbkNHaGExTUkvRG1DQXNHbjFSSXlNUTZTb0NXVUsxaAp6aWFEQWNFblBxWWpITHp2RCtENFdvQ2VYWWZKL0VYWk1jKzFzSEY2emVnMlRuSURBYTlmYVNONEtBM3N2aExFCmVDSUtKc2xUZjM0REhwcXU1bU0vYmlFQ2dZQlVCcHI2SUx3TDExVWtvbCtjc25ibFQ3c3o1SUFSeWlHWlU5UzMKdE9aNkoyamlma3BUL3pxdmNZc2JIL1lSREdVSzB2YUF0VGVMTEx3eWo0cWJHK2N5alBESXloQm5raVFrWVZjWQo0dEpRWHc0dTJrVmxxS0NVUkd4amRFZStkMSs0WG5VUVJVenR5NHdJTHlaNkhoS0lHRXA5SE9Dekp6dW1XTC9WCkVVelc2d0tCZ0UxbG9KUTNsdWRzUWQzTGZEM1d4eEYrZXNtZDBaU3ZETE5CbXJrUWNlNGVyeENRZ1U4TTFQdEkKa2JTY1hiandtNTJNQXlLOGlQL2ZTWTh3RHdsaXJ2Zm9YQ3dtdzAwVkpOblU2QzVpRFY4dk5IQ2xMVjdVaFlKcQpxUHlZRGVaS1FrV0hXNEMxVnd6VkluWTUxTmNoR2Noay9jSXdsd1lmMnFFc3FvSGRVdXdICi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:
  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: "vxlan"

  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "disabled"
  bpf-lb-sock: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  cni-uninstall: "true"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  disable-cnp-status-updates: "true"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/sys/fs/cgroup"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
      - services
      - pods
      - endpoints
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - list
      - watch
      # This is used when validating policies in preflight. This will need to stay
      # until we figure out how to avoid "get" inside the preflight, and then
      # should be removed ideally.
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools
      - ciliumbgppeeringpolicies
      - ciliumclusterwideenvoyconfigs
      - ciliumclusterwidenetworkpolicies
      - ciliumegressgatewaypolicies
      - ciliumendpoints
      - ciliumendpointslices
      - ciliumenvoyconfigs
      - ciliumidentities
      - ciliumlocalredirectpolicies
      - ciliumnetworkpolicies
      - ciliumnodes
      - ciliumnodeconfigs
    verbs:
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
      - ciliumendpoints
      - ciliumnodes
    verbs:
      - create
  - apiGroups:
      - cilium.io
    # To synchronize garbage collection of such resources
    resources:
      - ciliumidentities
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
    verbs:
      - delete
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
      - ciliumnodes/status
    verbs:
      - get
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
      - ciliumendpoints/status
      - ciliumendpoints
    verbs:
      - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
      # to automatically delete [core|kube]dns pods so that are starting to being
      # managed by Cilium
      - delete
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      # To remove node taints
      - nodes
      # To set NetworkUnavailable false on startup
      - nodes/status
    verbs:
      - patch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      # to perform LB IP allocation for BGP
      - services/status
    verbs:
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      # to check apiserver connectivity
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      # to perform the translation of a CNP that contains `ToGroup` to its endpoints
      - services
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies
      - ciliumclusterwidenetworkpolicies
    verbs:
      # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
      - create
      - update
      - deletecollection
      # To update the status of the CNPs and CCNPs
      - patch
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
    verbs:
      # Update the auto-generated CNPs and CCNPs status.
      - patch
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
      - ciliumidentities
    verbs:
      # To perform garbage collection of such resources
      - delete
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
    verbs:
      # To synchronize garbage collection of such resources
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
    verbs:
      - create
      - update
      - get
      - list
      - watch
        # To perform CiliumNode garbage collector
      - delete
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes/status
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpointslices
      - ciliumenvoyconfigs
    verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
      - patch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - update
    resourceNames:
      - ciliumloadbalancerippools.cilium.io
      - ciliumbgppeeringpolicies.cilium.io
      - ciliumclusterwideenvoyconfigs.cilium.io
      - ciliumclusterwidenetworkpolicies.cilium.io
      - ciliumegressgatewaypolicies.cilium.io
      - ciliumendpoints.cilium.io
      - ciliumendpointslices.cilium.io
      - ciliumenvoyconfigs.cilium.io
      - ciliumexternalworkloads.cilium.io
      - ciliumidentities.cilium.io
      - ciliumlocalredirectpolicies.cilium.io
      - ciliumnetworkpolicies.cilium.io
      - ciliumnodes.cilium.io
      - ciliumnodeconfigs.cilium.io
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools/status
    verbs:
      - patch
  # For cilium-operator running in HA mode.
  #
  # Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
  # between multiple running instances.
  # The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
  # common and fewer objects in the cluster watch "all Leases".
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - update
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
  - kind: ServiceAccount
    name: "cilium-operator"
    namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
    - name: peer-service
      port: 443
      protocol: TCP
      targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
        - name: cilium-agent
          image: "quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b"
          imagePullPolicy: IfNotPresent
          command:
            - cilium-agent
          args:
            - --config-dir=/tmp/cilium/config-map
          startupProbe:
            httpGet:
              host: "127.0.0.1"
              path: /healthz
              port: 9879
              scheme: HTTP
              httpHeaders:
                - name: "brief"
                  value: "true"
            failureThreshold: 105
            periodSeconds: 2
            successThreshold: 1
          livenessProbe:
            httpGet:
              host: "127.0.0.1"
              path: /healthz
              port: 9879
              scheme: HTTP
              httpHeaders:
                - name: "brief"
                  value: "true"
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              host: "127.0.0.1"
              path: /healthz
              port: 9879
              scheme: HTTP
              httpHeaders:
                - name: "brief"
                  value: "true"
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
            timeoutSeconds: 5
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_CLUSTERMESH_CONFIG
              value: /var/lib/cilium/clustermesh/
            - name: CILIUM_CNI_CHAINING_MODE
              valueFrom:
                configMapKeyRef:
                  name: cilium-config
                  key: cni-chaining-mode
                  optional: true
            - name: CILIUM_CUSTOM_CNI_CONF
              valueFrom:
                configMapKeyRef:
                  name: cilium-config
                  key: custom-cni-conf
                  optional: true
          lifecycle:
            postStart:
              exec:
                command:
                  - "bash"
                  - "-c"
                  - |
                    /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
            preStop:
              exec:
                command:
                  - /cni-uninstall.sh
          securityContext:
            seLinuxOptions:
              level: s0
              type: spc_t
            capabilities:
              add:
                - CHOWN
                - KILL
                - NET_ADMIN
                - NET_RAW
                - IPC_LOCK
                - SYS_ADMIN
                - SYS_RESOURCE
                - DAC_OVERRIDE
                - FOWNER
                - SETGID
                - SETUID
              drop:
                - ALL
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            # Unprivileged containers need to mount /proc/sys/net from the host
            # to have write access
            - mountPath: /host/proc/sys/net
              name: host-proc-sys-net
            # Unprivileged containers need to mount /proc/sys/kernel from the host
            # to have write access
            - mountPath: /host/proc/sys/kernel
              name: host-proc-sys-kernel
            - name: bpf-maps
              mountPath: /sys/fs/bpf
              # Unprivileged containers can't set mount propagation to bidirectional
              # in this case we will mount the bpf fs from an init container that
              # is privileged and set the mount propagation from host to container
              # in Cilium.
              mountPropagation: HostToContainer
            # Check for duplicate mounts before mounting
            - name: cilium-cgroup
              mountPath: /sys/fs/cgroup
            - name: cilium-run
              mountPath: /var/run/cilium
            - name: etc-cni-netd
              mountPath: /host/etc/cni/net.d
            - name: clustermesh-secrets
              mountPath: /var/lib/cilium/clustermesh
              readOnly: true
              # Needed to be able to load kernel modules
            - name: lib-modules
              mountPath: /lib/modules
              readOnly: true
            - name: xtables-lock
              mountPath: /run/xtables.lock
            - name: hubble-tls
              mountPath: /var/lib/cilium/tls/hubble
              readOnly: true
            - name: tmp
              mountPath: /tmp
      initContainers:
        - name: config
          image: "quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b"
          imagePullPolicy: IfNotPresent
          command:
            - cilium
            - build-config
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: tmp
              mountPath: /tmp
          terminationMessagePolicy: FallbackToLogsOnError
        # Mount the bpf fs if it is not mounted. We will perform this task
        # from a privileged container because the mount propagation bidirectional
        # only works from privileged containers.
        - name: mount-bpf-fs
          image: "quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b"
          imagePullPolicy: IfNotPresent
          args:
            - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
          command:
            - /bin/bash
            - -c
            - --
          terminationMessagePolicy: FallbackToLogsOnError
          securityContext:
            privileged: true
          volumeMounts:
            - name: bpf-maps
              mountPath: /sys/fs/bpf
              mountPropagation: Bidirectional
        - name: clean-cilium-state
          image: "quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b"
          imagePullPolicy: IfNotPresent
          command:
            - /init-container.sh
          env:
            - name: CILIUM_ALL_STATE
              valueFrom:
                configMapKeyRef:
                  name: cilium-config
                  key: clean-cilium-state
                  optional: true
            - name: CILIUM_BPF_STATE
              valueFrom:
                configMapKeyRef:
                  name: cilium-config
                  key: clean-cilium-bpf-state
                  optional: true
          terminationMessagePolicy: FallbackToLogsOnError
          securityContext:
            seLinuxOptions:
              level: s0
              type: spc_t
            capabilities:
              add:
                - NET_ADMIN
                - SYS_ADMIN
                - SYS_RESOURCE
              drop:
                - ALL
          volumeMounts:
            - name: bpf-maps
              mountPath: /sys/fs/bpf
              # Required to mount cgroup filesystem from the host to cilium agent pod
            - name: cilium-cgroup
              mountPath: /sys/fs/cgroup
              mountPropagation: HostToContainer
            - name: cilium-run
              mountPath: /var/run/cilium
          resources:
            requests:
              cpu: 100m
              memory: 100Mi # wait-for-kube-proxy
        # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
        - name: install-cni-binaries
          image: "quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b"
          imagePullPolicy: IfNotPresent
          command:
            - "/install-plugin.sh"
          resources:
            requests:
              cpu: 100m
              memory: 10Mi
          securityContext:
            seLinuxOptions:
              level: s0
              type: spc_t
            capabilities:
              drop:
                - ALL
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - name: cni-path
              mountPath: /host/opt/cni/bin
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  k8s-app: cilium
              topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
        - name: tmp
          emptyDir: {}
          # To keep state between restarts / upgrades
        - name: cilium-run
          hostPath:
            path: /var/run/cilium
            type: DirectoryOrCreate
          # To keep state between restarts / upgrades for bpf maps
        - name: bpf-maps
          hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
        # To keep state between restarts / upgrades for cgroup2 filesystem
        - name: cilium-cgroup
          hostPath:
            path: /sys/fs/cgroup
            type: DirectoryOrCreate
        # To install cilium cni plugin in the host
        - name: cni-path
          hostPath:
            path: /opt/cni/bin
            type: DirectoryOrCreate
          # To install cilium cni configuration in the host
        - name: etc-cni-netd
          hostPath:
            path: /etc/cni/net.d
            type: DirectoryOrCreate
          # To be able to load kernel modules
        - name: lib-modules
          hostPath:
            path: /lib/modules
          # To access iptables concurrently with other processes (e.g. kube-proxy)
        - name: xtables-lock
          hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          # To read the clustermesh configuration
        - name: clustermesh-secrets
          secret:
            secretName: cilium-clustermesh
            # note: the leading zero means this number is in octal representation: do not remove it
            defaultMode: 0400
            optional: true
        - name: host-proc-sys-net
          hostPath:
            path: /proc/sys/net
            type: Directory
        - name: host-proc-sys-kernel
          hostPath:
            path: /proc/sys/kernel
            type: Directory
        - name: hubble-tls
          projected:
            # note: the leading zero means this number is in octal representation: do not remove it
            defaultMode: 0400
            sources:
              - secret:
                  name: hubble-server-certs
                  optional: true
                  items:
                    - key: ca.crt
                      path: client-ca.crt
                    - key: tls.crt
                      path: server.crt
                    - key: tls.key
                      path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
        - name: cilium-operator
          image: "quay.io/cilium/operator-generic:v1.13.4@sha256:09ab77d324ef4d31f7d341f97ec5a2a4860910076046d57a2d61494d426c6301"
          imagePullPolicy: IfNotPresent
          command:
            - cilium-operator-generic
          args:
            - --config-dir=/tmp/cilium/config-map
            - --debug=$(CILIUM_DEBUG)
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_DEBUG
              valueFrom:
                configMapKeyRef:
                  key: debug
                  name: cilium-config
                  optional: true
          livenessProbe:
            httpGet:
              host: "127.0.0.1"
              path: /healthz
              port: 9234
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 3
          volumeMounts:
            - name: cilium-config-path
              mountPath: /tmp/cilium/config-map
              readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  io.cilium/app: operator
              topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
        - name: cilium-config-path
          configMap:
            name: cilium-config
---
# Source: cilium/templates/cilium-secrets-namespace.yaml
# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.
