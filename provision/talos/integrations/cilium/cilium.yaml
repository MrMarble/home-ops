# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
      - services
      - pods
      - endpoints
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - list
      - watch
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools
      - ciliumbgppeeringpolicies
      - ciliumclusterwideenvoyconfigs
      - ciliumclusterwidenetworkpolicies
      - ciliumegressgatewaypolicies
      - ciliumendpoints
      - ciliumendpointslices
      - ciliumenvoyconfigs
      - ciliumidentities
      - ciliumlocalredirectpolicies
      - ciliumnetworkpolicies
      - ciliumnodes
      - ciliumnodeconfigs
      - ciliumcidrgroups
      - ciliuml2announcementpolicies
      - ciliumpodippools
    verbs:
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
      - ciliumendpoints
      - ciliumnodes
    verbs:
      - create
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
    verbs:
      - delete
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
      - ciliumnodes/status
    verbs:
      - get
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
      - ciliumendpoints/status
      - ciliumendpoints
      - ciliuml2announcementpolicies/status
    verbs:
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
      - delete
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
      - nodes/status
    verbs:
      - patch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services/status
    verbs:
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies
      - ciliumclusterwidenetworkpolicies
    verbs:
      - create
      - update
      - deletecollection
      - patch
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
    verbs:
      - patch
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
      - ciliumidentities
    verbs:
      - delete
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
    verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes/status
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpointslices
      - ciliumenvoyconfigs
    verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
      - patch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resourceNames:
      - ciliumloadbalancerippools.cilium.io
      - ciliumbgppeeringpolicies.cilium.io
      - ciliumclusterwideenvoyconfigs.cilium.io
      - ciliumclusterwidenetworkpolicies.cilium.io
      - ciliumegressgatewaypolicies.cilium.io
      - ciliumendpoints.cilium.io
      - ciliumendpointslices.cilium.io
      - ciliumenvoyconfigs.cilium.io
      - ciliumexternalworkloads.cilium.io
      - ciliumidentities.cilium.io
      - ciliumlocalredirectpolicies.cilium.io
      - ciliumnetworkpolicies.cilium.io
      - ciliumnodes.cilium.io
      - ciliumnodeconfigs.cilium.io
      - ciliumcidrgroups.cilium.io
      - ciliuml2announcementpolicies.cilium.io
      - ciliumpodippools.cilium.io
    resources:
      - customresourcedefinitions
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools
      - ciliumpodippools
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumpodippools
    verbs:
      - create
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools/status
    verbs:
      - patch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - componentstatuses
      - endpoints
      - namespaces
      - nodes
      - pods
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - "*"
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: cilium
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
  - kind: ServiceAccount
    name: cilium
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
  - kind: ServiceAccount
    name: cilium-operator
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
  - kind: ServiceAccount
    name: hubble-ui
    namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: dsr
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: k8s
  cni-exclusive: "false"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "false"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bandwidth-manager: "true"
  enable-bbr: "true"
  enable-bgp-control-plane: "true"
  enable-bpf-clock-probe: "false"
  enable-bpf-masquerade: "true"
  enable-bpf-tproxy: "true"
  enable-endpoint-health-checking: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  endpoint-status: policy
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query drop tcp flow port-distribution icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.244.0.0/16
  k8s-client-burst: "10"
  k8s-client-qps: "5"
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: native
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml:
    "cluster-name: k8s\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf:
    "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSWExVWpadkF3MmlOa1BMdFMxdkdGREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TWpJMk1UTXpPRFUxV2hjTk1qWXhNakkxTVRNegpPRFUxV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzZuVTZkQUJBQTJPc3oxQWh3eCs3RVRJZnpua1J2alZBWk55TTRrNjBaeEV2WkxLVGYKdjRLS2RaSzFzVitzQ05jOEF0L25NTHJSeEpaMGpmcGpEU3JGVVJVWjArMzQ2QUdkRC83emg2T2xUM2VNUGo4awowR0dpTTdIUy9aTWhlcWJQZHA4cE1VUmFLUlJ4cXozeWhpSzg4RDBxWFNmaGhpZnFvcEp4c3lMZUo3azMvYWNtClpCL21qWldUZ3ZBR0hZR3BSekoreU96ZGxSODhYQ2pQUENkdzE4VjhJK1I0UzMwakZNMy9wNFVIVXU5YTdrMGEKcUgrQ1ZQWXpaNXRTMTF4b0kyZml0TFpiN1FXWHZyVVRIc3BpSHlRakpDWWRpTTZSR0hhaTg1MDRZcHA0bmQ2UwpoM25Rb0N3QU1JNWtiK0JKeWd6VUtqbG5JdDBHMXhzSXFDU0hBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU5NnRMZk9lS2oySHYxem5yWkxzZ0tQNFErTjR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCQzRRQlBYQlRUV0NDengwZ1dDZUFGMTZ0KzBxNlhtWHpPdllIS0wyNzdnclY4T2dRK1VQZE9OClFqTlFGMVRnZmpUTU9ZQkEvd0trSFNJTkd0VEFmSGg5L1YzTE1pbDFGNHpFdUU0cWtXaHFUR2gwNTZsQ29ta2EKUHRJbTJETVZmZnFqazNibFk2bk5NdjdQTkdhTUN5K0ZzZXlrNjBobDFxNm9BVGpGT3JwVFRtQ3RUYWh0YmwxUQora1FhaFhVTnlKNjdXeFRXVmdoK2NNSVIxKzljbWVwV3I2WTZtMU9ibVRqTUNTUWVOTTBXcWhzSGI4ZithTUY5CkZ0UVp3UC83ZW5SS1ZDTDA3Q1oydlRNanlMLy80OVpmNzJVY2hkZWNVZnAvK2JZekhQNWF3T2xGd0FWalN1TzAKeU1MQVQ4ZTFtcGhwU200cnB0MnRSdEthRUNyMDdqOD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdXAxT25RQVFBTmpyTTlRSWNNZnV4RXlIODU1RWI0MVFHVGNqT0pPdEdjUkwyU3lrCjM3K0NpbldTdGJGZnJBalhQQUxmNXpDNjBjU1dkSTM2WXcwcXhWRVZHZFB0K09nQm5RLys4NGVqcFU5M2pENC8KSk5CaG9qT3gwdjJUSVhxbXozYWZLVEZFV2lrVWNhczk4b1lpdlBBOUtsMG40WVluNnFLU2NiTWkzaWU1Ti8ybgpKbVFmNW8yVms0THdCaDJCcVVjeWZzanMzWlVmUEZ3b3p6d25jTmZGZkNQa2VFdDlJeFROLzZlRkIxTHZXdTVOCkdxaC9nbFQyTTJlYlV0ZGNhQ05uNHJTMlcrMEZsNzYxRXg3S1loOGtJeVFtSFlqT2tSaDJvdk9kT0dLYWVKM2UKa29kNTBLQXNBRENPWkcvZ1Njb00xQ281WnlMZEJ0Y2JDS2draHdJREFRQUJBb0lCQURtVTNITDVWL2JLK0Jndgo3c0xPRGxDbnhMTlpQSWluTS9YejIzeFRwTy8wYityOUtZcVl6ekRtQW5UcDNEbDdLTjZ0akdVTDFqbHZ6WFQ5CmNpc3FIdTV2akhGQndZWXlJSDFVT0Rqd3U0QUF1MFNjMkdNRm9YcXBOTStEeXVoanJpRUoyeWFjdXhpTzRHNEsKaHJ6VXd0ZEYwYm5Hc00yWDFhMUNxS2xJdXhPTTYyRTUwd2RTNW9lQ0phak5UVzRiNFZ3dTZaR2ZaMFlLR1ZwSApOZUJueWlrL3NYQmdkaTM0QnFUc1FOMjRUaWxNdk90VlAzdUJCMzEvYXVldFRUOGxqbUlpUmNURFovaUN6UWpDCnN0cDduZitoQktxZEtDOXBwZmxOSlFCL0NjWGgwNUxJcWZHMXFyOWJEdXBhOTdOdk1qSjA1dUxkVEQ5Qkp2VzUKN0EvRXVKRUNnWUVBMWZQd1dYRWpzRHlpSmkwU1VoT09ZZnZ6S1dtVllreXllcHc2T1gwbjZHVkw2eFVtOE8vNwpOaWE4bXl0R3Vtcys2K25BQmhqSDdNQ3Qxdnl5U1dtbC92UU1uUHR3cWZ2WkRGK09KU0tGb3Bud1JFQ2lkZFFPCkVjeDdlc3VkSzcyR0dWbGZHZzU5OVozMjlBWGdyOHFvbWJub0xhQjJKQnk2dlhNaS8yMk9lSDBDZ1lFQTMwbjIKRzdCRHg3ZkpNR3Q5MUo1YllPWGNyMTczN2RsQlBnMjdNRVREK2wzdm9GN1Bzd09xT2xCeFY4dXR5YlFFdmt1TgovMzlBRUZUeWNOUURLZ0NuUVk1UHFRTjB6YWxLYWorMmVxZ3VHY3BGam4wdXJ0WXQwMzRQZU9Wam9ZeUoveTFyCnVaTEFuZ2tkZEY3MDBtUlJtUWZBOExOSWlocjNjNFlGS0JFVHBGTUNnWUVBb0wvZlhkUTcxRFk2UGlTdkZ5dksKVnFST1ZsY1YvZjFTTy8wVllndys1OFR6L1hTdkJXZkpmeTRybHdvMDRldWlJdTVGY0U4K0p3dTlrVUhiVW4wbQpVeUJhT2JoUk5lWWJkY2gxckVENzF1ZUNOa1c1eW4zQTlHNkdlQVJ6Mm1GVFY4aG1ROVdQbmZOSmtKNjU2bHFCCndyNkRTNFM4UHZXMitKQ0JReGkxYXFFQ2dZRUFvNk5UZnRVOXh6YjBkY3pCQ2JvSUk4b3hZa0NLR0VCNHBONXgKU1oyTHRvZHpIcWQ5TmFkQThMMlZZdzg4eks1bUw0TzFqQUlZMUI4OUVkeitlS0REOHJJMXhScG9WblJ6dWN2NQprb2lBU0p4SlAzU1Vhc05DRUZXNVJ4TnRZYTVhVDYxYzNrSWpjVzRpck84T0lzWXNXcWNwQ2YySjh0UnlkckpJClF5WElyRXNDZ1lCSTRBNEIyak1ySEVHS1hJcEhJOGFhUVFHUXNPZEFzL2o4UFZRUlU2N1p4U2lXSHdsOWFMaE4KNkV3cTN5YWlQMnBlaWdlTmpKY0h5NmFLUDZvS0RnYkpQVDUxM2ZtKzhRUXpzTTQraWl5S1BGY0lmUE5UcGx1dwp6dFhKeEJiY1lwenpOczhwZTBEblVncEtMZFl1T2NUVVozUk9RVTZhMGkzRVB5VUprMHdtOWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSWExVWpadkF3MmlOa1BMdFMxdkdGREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TWpJMk1UTXpPRFUxV2hjTk1qWXhNakkxTVRNegpPRFUxV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzZuVTZkQUJBQTJPc3oxQWh3eCs3RVRJZnpua1J2alZBWk55TTRrNjBaeEV2WkxLVGYKdjRLS2RaSzFzVitzQ05jOEF0L25NTHJSeEpaMGpmcGpEU3JGVVJVWjArMzQ2QUdkRC83emg2T2xUM2VNUGo4awowR0dpTTdIUy9aTWhlcWJQZHA4cE1VUmFLUlJ4cXozeWhpSzg4RDBxWFNmaGhpZnFvcEp4c3lMZUo3azMvYWNtClpCL21qWldUZ3ZBR0hZR3BSekoreU96ZGxSODhYQ2pQUENkdzE4VjhJK1I0UzMwakZNMy9wNFVIVXU5YTdrMGEKcUgrQ1ZQWXpaNXRTMTF4b0kyZml0TFpiN1FXWHZyVVRIc3BpSHlRakpDWWRpTTZSR0hhaTg1MDRZcHA0bmQ2UwpoM25Rb0N3QU1JNWtiK0JKeWd6VUtqbG5JdDBHMXhzSXFDU0hBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU5NnRMZk9lS2oySHYxem5yWkxzZ0tQNFErTjR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCQzRRQlBYQlRUV0NDengwZ1dDZUFGMTZ0KzBxNlhtWHpPdllIS0wyNzdnclY4T2dRK1VQZE9OClFqTlFGMVRnZmpUTU9ZQkEvd0trSFNJTkd0VEFmSGg5L1YzTE1pbDFGNHpFdUU0cWtXaHFUR2gwNTZsQ29ta2EKUHRJbTJETVZmZnFqazNibFk2bk5NdjdQTkdhTUN5K0ZzZXlrNjBobDFxNm9BVGpGT3JwVFRtQ3RUYWh0YmwxUQora1FhaFhVTnlKNjdXeFRXVmdoK2NNSVIxKzljbWVwV3I2WTZtMU9ibVRqTUNTUWVOTTBXcWhzSGI4ZithTUY5CkZ0UVp3UC83ZW5SS1ZDTDA3Q1oydlRNanlMLy80OVpmNzJVY2hkZWNVZnAvK2JZekhQNWF3T2xGd0FWalN1TzAKeU1MQVQ4ZTFtcGhwU200cnB0MnRSdEthRUNyMDdqOD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRZWd5MXhkU005SHZZK241QmhHRWNDekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TWpJMk1UTXpPRFUxV2hjTk1qWXhNakkxTVRNegpPRFUxV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEdmp1cEloODdabGVZQk1jK1ZyOXZyMlp4WTRJYUsKRE1ud1N1aHhLSi8vZHh4d0pMcmNVeVMyL0c4bzFvenFWNjBuZWdZdmQrUi91bXZIa0tyZkdONk1VS2R0UjVpbwo2UXJIM3lad1V6bXAvdjJoMlpsa3JpMDhMZkcyUTVwV0hJRWx0UXhuMVZ6V2d6TGZnRDV1WGdVVzFPMWJ1Uk5vCldpSXI0bnVYSDVUZXovOGkyeGljWFY1YWkxNmVQdlpoNEwxSXllSXl6eG9RYjNmZmw5NWJZM1lQeG1zYVE5MmoKTVpNTk1wL3JMamxkYUE3S0ZZY1NuWkxNYi9PemMyUDRQcWVyQ1ltaHpkeUNKZUVzQmZ2eVNPWnU2dUljb09BTQpjSmpzWUtuUmtmanlsM2VtK21uekYrYm5uaDF3U1VGdDMrUTBKWWJmVkdIeXRwM2gvS3dZRTNyNUFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZQZXJTM3puaW85aDc5YzU2MlM3SUNqKwpFUGplTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUF0RVJFaGV0ckhodXY5Qnl4WWFUM2RNSEdVZ1FPNWJVVlo3ejY0QWU4UEVQUXE5Zk4KWG1yZXZzQzFQZVRIbmhuMytubkFMelZIRTBsU0tzcDNwcDV3ZkZxMk1ZZmM2YjBNTjRGZmJRcVZxbmdkNFpYdwp4TGtDcXFVaXN0MEdyUFFWRVhsZFpJNCtFS2FWMnZ1L2gxZ0VxdVlmcUxSL20yK0dIRkROeEhFTEN1enlaQnh4Ckw3ZmhRQ01HcWJmTVVvUmlKdW5pYklHR1EvRTRxeFMzclg0N0FJUGNlT2h6WDF6bnFJYkhLaUZsL2tDR0pyTFMKUTNpSHlaOEJMQkFDTGg4Nk4wRzBFM3BiVlpTY0xQRG1hb1k1dWlFS0lOaFB6VjF1SVd0L2NRV2k3NWZ6REVCdAppRkQ4L09GcE10Qzl6L1lXUENrcFdCemVoQllJVlFOdlBHcmE2UT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNzQ3cVNJZk8yWlhtQVRIUGxhL2I2OW1jV09DR2lneko4RXJvY1NpZi8zY2NjQ1M2CjNGTWt0dnh2S05hTTZsZXRKM29HTDNma2Y3cHJ4NUNxM3hqZWpGQ25iVWVZcU9rS3g5OG1jRk01cWY3OW9kbVoKWks0dFBDM3h0a09hVmh5QkpiVU1aOVZjMW9NeTM0QStibDRGRnRUdFc3a1RhRm9pSytKN2x4K1Uzcy8vSXRzWQpuRjFlV290ZW5qNzJZZUM5U01uaU1zOGFFRzkzMzVmZVcyTjJEOFpyR2tQZG96R1REVEtmNnk0NVhXZ095aFdICkVwMlN6Ry96czNOaitENm5xd21Kb2MzY2dpWGhMQVg3OGtqbWJ1cmlIS0RnREhDWTdHQ3AwWkg0OHBkM3B2cHAKOHhmbTU1NGRjRWxCYmQva05DV0czMVJoOHJhZDRmeXNHQk42K1FJREFRQUJBb0lCQURERjJSOUJQelQvbHQrQgpZN0VuSjlCaDhyb0pwSHF3MWVCdGI5dXlHTGtyYUFmUkFwWmUreWVpUjRONkF5Q25EeUx0YmhyMS92aWVYTms1CnRBQk9FT2xpZG1RQ1lxdHBIdi9JaUF2d2Rkb05oMWdQZEhLU0g3V1Q2UlZodUNkMkVEazhIalY1dERnY2FCd24KQVE3NVozSFpraVhOall6K1pOeW9kTjgwMTl0dytyc3NrN2s2Sjc5ZVZJcXJDUmZaemF3SUpyOENKeGVpZVRQcApRRm04UXZ0YWFRMUFOSzlGVXZ4WVNhQ0w3aG05d3lSVEp0TWJQanRsRHNLdXNaQ3lRNUo3L043YmhqVWJMUERuClQ2MzMxVjM2emh5OFRlbFNCUFlVc3FTWmwxSE5WTmo3WmppM2k0RVNKcUxmMDE1R0JLRGswN09QMFRtS0JTRjAKODFMb0t3MENnWUVBOThVemViQitTc1ZtUjhaU2o0cVU1V0JtRGlMNVpBOUJsSjRMeEJOakd2WmkvaUVyUGJ5WgplM1VCMis2SmFybW52R1RkWXFqTWhwSlI5SEU0d2hobDJ2MjNmVHFwYmtBcWFLRGk5bkoxbnl0RHVTbzZrcGNUCjduR2ZmOWVDQzViM0JWTWFPMHd4RkZKekt3Nmw2RHVZZWwybXhza090eHM4cERHU2R6eHZhaGNDZ1lFQTk0UGoKQVBKbG9RZ1dWanY4clJWZGdQV21vM3JIcnhvSWw5UUJVeHhYWHNWblFVL2VzL3E5UlJkUDhZbXdjTk56VkkvTwppZ1NXNkV4bFhjc214UnljekttbExNcS91TDdIelVTTDNMNGh3eUljeE5lNUZBRFluekkzN21FTWRMOGg2OG5zClNPVno2YkNyQlFLM000MG44enNzeTQyRjNqd0J3dnI5V1V1TFBXOENnWUVBa2I0bjkwN0FHdzllaUoyNTlzRlgKc0UweCt1TEx1L1hWWjZ4SDA0QnI3WEk4N0t0cUdoaVVWN0NOOVdhczRtQnVzRHpNbExvaUJJNlJNcTVlNnAwYgpYT09kU1VaMlgyblRDRlNLN05pTEk2TjVaTFBZWEY0TjFWWjBzZWg4a0lDdXNTMGU0djZBYUNuUG9PWXU1Um9aCktQRnBwc2locFVlYU5pTUt1cVNNRE9VQ2dZQUZ0T1c3OU5yQS9yVzlJVDd2SXFuNE9qR3dYVGxUWVM5SGlOeksKOU1GUzd3dzFaa2tGTDBmRDJ3aTkwZVhlaEJHSnBwTWxmWHVaT1lHd3l1bEc3Q1QxVndmMjQybk9NWi9ickxQbwp6LzFwU1ZVT2VNYk1ua1JnVDBFWTN1WHhueUtDRkRLOWI0VGZvM0lkK0hVTzNEZEtsVmV3RGNCRFluREw5UXQ0ClRwU1VRd0tCZ0V2OE9wZGhQRXVlcU5DbUcyMVYxWXRseVhXWVBYNmQwTnYvQk84dU55WUIzd2N0eVdxMG1jcWQKU1liZStiZ29Ubm9jTDlhTTdBTWpRejJWN2RGL2F5NXY0RkdvZXdCdlZwK05GekU1aHkrRTFFd2RES0dYYVc4ZQp2Z21WMDBSRFJiRWtwTmpuN0hKSUpNNXlrc2hLejVvUEVvT1lxM2p6Wm1QTThaWXphSWw2Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSWExVWpadkF3MmlOa1BMdFMxdkdGREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TWpJMk1UTXpPRFUxV2hjTk1qWXhNakkxTVRNegpPRFUxV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzZuVTZkQUJBQTJPc3oxQWh3eCs3RVRJZnpua1J2alZBWk55TTRrNjBaeEV2WkxLVGYKdjRLS2RaSzFzVitzQ05jOEF0L25NTHJSeEpaMGpmcGpEU3JGVVJVWjArMzQ2QUdkRC83emg2T2xUM2VNUGo4awowR0dpTTdIUy9aTWhlcWJQZHA4cE1VUmFLUlJ4cXozeWhpSzg4RDBxWFNmaGhpZnFvcEp4c3lMZUo3azMvYWNtClpCL21qWldUZ3ZBR0hZR3BSekoreU96ZGxSODhYQ2pQUENkdzE4VjhJK1I0UzMwakZNMy9wNFVIVXU5YTdrMGEKcUgrQ1ZQWXpaNXRTMTF4b0kyZml0TFpiN1FXWHZyVVRIc3BpSHlRakpDWWRpTTZSR0hhaTg1MDRZcHA0bmQ2UwpoM25Rb0N3QU1JNWtiK0JKeWd6VUtqbG5JdDBHMXhzSXFDU0hBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU5NnRMZk9lS2oySHYxem5yWkxzZ0tQNFErTjR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCQzRRQlBYQlRUV0NDengwZ1dDZUFGMTZ0KzBxNlhtWHpPdllIS0wyNzdnclY4T2dRK1VQZE9OClFqTlFGMVRnZmpUTU9ZQkEvd0trSFNJTkd0VEFmSGg5L1YzTE1pbDFGNHpFdUU0cWtXaHFUR2gwNTZsQ29ta2EKUHRJbTJETVZmZnFqazNibFk2bk5NdjdQTkdhTUN5K0ZzZXlrNjBobDFxNm9BVGpGT3JwVFRtQ3RUYWh0YmwxUQora1FhaFhVTnlKNjdXeFRXVmdoK2NNSVIxKzljbWVwV3I2WTZtMU9ibVRqTUNTUWVOTTBXcWhzSGI4ZithTUY5CkZ0UVp3UC83ZW5SS1ZDTDA3Q1oydlRNanlMLy80OVpmNzJVY2hkZWNVZnAvK2JZekhQNWF3T2xGd0FWalN1TzAKeU1MQVQ4ZTFtcGhwU200cnB0MnRSdEthRUNyMDdqOD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZVENDQWttZ0F3SUJBZ0lSQUltWnNZRklVbnR0MjkzTk1KK2pCazh3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRJeU5qRXpNemcxTlZvWERUSTJNVEl5TlRFegpNemcxTlZvd0x6RXRNQ3NHQTFVRUF3d2tLaTVvYjIxbExXTnNkWE4wWlhJdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF1TE8wMTlOamxWUVkKQSs1UHZOaHhTWG0wM3VUMXFBeUdndXpUYXlqTFcwajJiamlZUXZ2VWhkZXV1c2R1U1lPV3U4ZTJuSkh0VzljaQp3a0NrY1ZEb0FIN2xFcFN4QjBrckVUTHN1RnJBcUJ3YVpRdjBQcWhGbG83QWozSUxhLzJGdVFNenVHRkRMTGJsCjNaaU9seFhUM2V4ZVVnMWxKZHJ6dE13TlExRkFlWElPODBGOTBUYk0xZ2cvRnZJbUpyZXhQaVNBcDlGRndNazcKTXh0bThtMDhaTnlZWjZhcTFCZndqRnlDdEVXVXN4cFJqQmtvL3N5STFWVUFSbzh4MnVUYlBKdk45ZGprZ2MvMgpyMEVRcmI4SnpOVGc5MElpSHk5SkpKWmVFQkxjc1VRa0JmVmsvdmdNSmJsbkpTSFdVd0dSeU9PUFViTGViZk9uCnBBY1VuRStSZ3dJREFRQUJvNEdTTUlHUE1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlQzcTB0OAo1NHFQWWUvWE9ldGt1eUFvL2hENDNqQXZCZ05WSFJFRUtEQW1naVFxTG1odmJXVXRZMngxYzNSbGNpNW9kV0ppCmJHVXRaM0p3WXk1amFXeHBkVzB1YVc4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFKSDVIZ0xXRkFxVnJJWGUKOGdFbTQrZ29KbXRiTmxudkZJRFFJU1dOZFhZVDA2WXFiM0g5VmRyZHNkVTl6dkl0MklEa3lsUXcxTlJzNnN1RQpkN1R6VGc2N1Q4SFF3T29jM1Z1SGFiQ2lNVnZ0YVZnR0M4RytLZmlqR0dJbDZ6OHo1UktxckNTT3NvaVU5QmI1Cjd6L2srRUh4SHkrZEtYWnJZcmo3b0pubmdHWlJlY0huaEh4NlU0ZFNIckFkWkgzeTBDWENKSkJUUnZDZ1BpN2gKTi9VVUU1MTNpOXBvMWpnQlpQaHVzMmJwN05GK3ZZbEZvMENEd242SHdPMlBrK1RRMVFEbUxnZUl6RW9tRjhnUApWMWhqOXNHbEUrM2o4djE4cUdYclNOcisyN3BpRHN6eVBkLzB1Q0ptRitPMEZ2OGh5d2NSVjBjdElobHQzSUtTCmo1N2ZtL289Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBdUxPMDE5TmpsVlFZQSs1UHZOaHhTWG0wM3VUMXFBeUdndXpUYXlqTFcwajJiamlZClF2dlVoZGV1dXNkdVNZT1d1OGUybkpIdFc5Y2l3a0NrY1ZEb0FIN2xFcFN4QjBrckVUTHN1RnJBcUJ3YVpRdjAKUHFoRmxvN0FqM0lMYS8yRnVRTXp1R0ZETExibDNaaU9seFhUM2V4ZVVnMWxKZHJ6dE13TlExRkFlWElPODBGOQowVGJNMWdnL0Z2SW1KcmV4UGlTQXA5RkZ3TWs3TXh0bThtMDhaTnlZWjZhcTFCZndqRnlDdEVXVXN4cFJqQmtvCi9zeUkxVlVBUm84eDJ1VGJQSnZOOWRqa2djLzJyMEVRcmI4SnpOVGc5MElpSHk5SkpKWmVFQkxjc1VRa0JmVmsKL3ZnTUpibG5KU0hXVXdHUnlPT1BVYkxlYmZPbnBBY1VuRStSZ3dJREFRQUJBb0lCQVFDeC8wMktxUWRSUTZlWgpNakxaOVdUSHdHaVVYZVo0T3dudVpya2dqa0hjQ1NhajlocVdnd2ErcmFxUUNkMjVMdjAybmpMWUZMSEFUa1lMCkdpemZuMjdWKzNSYlFieVJIdXhJT09GMGtORVZzVyttYmF6R0xYaFNyZVBZMmJrMEt6Q1JxZ3BQNkR2S2ZjQnMKbTdiZTE0UkVYS1JSUXVOMVpkcHpKQ3FyODBQRlJJaG0vdnFZNHJaY0dwYXJIZjE4VC85TEJJRlltWFpNUzFyaQpBRUZ2dFpvdDI2UUM5RVExUlVUeHU2dXhGeTN2VnlwS3ZGY05XZnp0eE1QRDVycXFHZDltelZySkEwcmJpUWR1CnFoeVQrVEczOW4vMmFzSFkyZGhCOHk3b2ZOZnZXQy8reWpoUllnZFdHL29UZU9BRkg5VGc0SC80SUZtTUl6MlIKanlLejYxWmhBb0dCQU9ZVk1LaTdaQW0xQ0tZTUhoT2U0M0ErL0RSYmhZQ3FrbWR5cWhUT2l2MlFTSlFPRXBxQQozTEJRUFFMdVdjQTJrV3F1SkVvazJhTStLQ3JOOG9wY0VGTGppSlhwa3d5T3JZeStENit3Qk5KNm1BNWNkc0N4CmE5ankwOTdDMzNQOVFzNWJQMlNjMmJKTnFzMXIyVFpiQ1BQK1Z0SzlIR0hWQnBIME5pK3ZGN1NwQW9HQkFNMkIKNHpPZ0ptQ1cxMHZvbjY5THVuNFhxaVlnbjBYYWxVRzh2K0JwZmN2ZE1DME5EdjBFVnZFL1oxdmJpY0o2dnpHTgowK3IyeFppQlhwWVhNMHhFbE92MXMxNFhTaG1lVG84S0dTNy9Qb2k5WWVEa21rVDN4OHVPbzlPS0JKZGplemlKCklkOUxKSlVCZWdtR1hLaVIzbE9VZlM5RlUrcUx3Zm1IZFUzaEV3UkxBb0dCQUpmUG4zMlZ0MW9ZVXc2TXJFT3gKOE11ZEkzZkFjNFFFQi9tdDFMOUowTGVodmVIQ3IwKzJldWJ5Nm03R3FmMkRnOHRwLzVQVVlLMnZVMzE2eWUrMAo4eWhkN1Q5TkVMT1dhTGlXcDI3NnF4UGR3L3FsMDgwc3c4WXY0cy8yc00ydGE2a1ExL0VnOVJzSzJBb1dnUW0yClkxL3FqNHNaTUdMMDFoTHptZFU0cUdHUkFvR0JBTDhCOTV1M1FaUksvd2IxeXQzU1JCOElmY1A4VkMxSDhheHMKOCtad0JsVWlXN0d6em5lS3ZnaHl4dTJReXFUeEU1M0tWZXF3dkkxM3lPTTE0eDhESzJ0NUxlTEpRTDA0NzRseAplR0MvS205TG5wcTV2MDFWQStXRnlXMUhmZWI3dHI2Z2J0UXM4bTV3TmU1K2JNYmM5VWkzM2ZhK3VEVnErcnFqCmxYcnlOSXVyQW9HQkFKekcwWW5HR3ZrTjRvVTlkR3M0UTFCb2JkMFEwTHRnL2d4cHl5bk9ncVQvWHdQMzhaUWUKVnozTkhQS2VvSFc5UldCSEpWTHBDR2lqMmRBcjR4UmpZTzVHNEJXR3A2OTB5TVJGZGQ3TVB1TWpFby9ld1lzWAo5cVNNREtrb0grQzlZTkk0dEQyUFVpYS94dVR1OTVMNjJFZzJDMDNZdHhYMHA4dm9PN2dHOFhNZAotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
    - name: hubble-metrics
      port: 9965
      protocol: TCP
      targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
    - name: peer-service
      port: 443
      protocol: TCP
      targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ff3b9199d7b5e6bd7fb5d7f7a384bbd180fac7ffd759126297980faeca2a01ee
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  io.cilium/app: operator
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
        - args:
            - --config-dir=/tmp/cilium/config-map
            - --debug=$(CILIUM_DEBUG)
          command:
            - cilium-operator-generic
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_DEBUG
              valueFrom:
                configMapKeyRef:
                  key: debug
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: localhost
            - name: KUBERNETES_SERVICE_PORT
              value: "7445"
          image: quay.io/cilium/operator-generic:v1.14.6@sha256:2f0bf8fb8362c7379f3bf95036b90ad5b67378ed05cd8eb0410c1afc13423848
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 9234
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 3
          name: cilium-operator
          readinessProbe:
            failureThreshold: 5
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 9234
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 5
            timeoutSeconds: 3
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /tmp/cilium/config-map
              name: cilium-config-path
              readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
        - operator: Exists
      volumes:
        - configMap:
            name: cilium-config
          name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 2377e902b05fcb5eab2f040823d96bf083593a39234638f79da89f0a3ba15121
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  k8s-app: cilium
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
        - args:
            - serve
          command:
            - hubble-relay
          image: quay.io/cilium/hubble-relay:v1.15.1@sha256:3254aaf85064bc1567e8ce01ad634b6dd269e91858c83be99e47e685d4bb8012
          imagePullPolicy: IfNotPresent
          livenessProbe:
            tcpSocket:
              port: grpc
          name: hubble-relay
          ports:
            - containerPort: 4245
              name: grpc
          readinessProbe:
            tcpSocket:
              port: grpc
          securityContext:
            capabilities:
              drop:
                - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /etc/hubble-relay
              name: config
              readOnly: true
            - mountPath: /var/lib/hubble-relay/tls
              name: tls
              readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
        - configMap:
            items:
              - key: config.yaml
                path: config.yaml
            name: hubble-relay-config
          name: config
        - name: tls
          projected:
            defaultMode: 256
            sources:
              - secret:
                  items:
                    - key: tls.crt
                      path: client.crt
                    - key: tls.key
                      path: client.key
                    - key: ca.crt
                      path: hubble-server-ca.crt
                  name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
        - image: quay.io/cilium/hubble-ui:v0.12.2@sha256:978dacbe4bd1c9b815bc2257a1360a35d541e7fbb3e1f9b898c1823d9300a8f3
          imagePullPolicy: IfNotPresent
          name: frontend
          ports:
            - containerPort: 8081
              name: http
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /etc/nginx/conf.d/default.conf
              name: hubble-ui-nginx-conf
              subPath: nginx.conf
            - mountPath: /tmp
              name: tmp-dir
        - env:
            - name: EVENTS_SERVER_PORT
              value: "8090"
            - name: FLOWS_API_ADDR
              value: hubble-relay:80
          image: quay.io/cilium/hubble-ui-backend:v0.12.2@sha256:910c77e083d49c370d31c622df8061efa6b5bcffe99caaf7e406105f48457bde
          imagePullPolicy: IfNotPresent
          name: backend
          ports:
            - containerPort: 8090
              name: grpc
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
        - configMap:
            defaultMode: 420
            name: hubble-ui-nginx
          name: hubble-ui-nginx-conf
        - emptyDir: {}
          name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ff3b9199d7b5e6bd7fb5d7f7a384bbd180fac7ffd759126297980faeca2a01ee
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  k8s-app: cilium
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
        - args:
            - --config-dir=/tmp/cilium/config-map
          command:
            - cilium-agent
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_CLUSTERMESH_CONFIG
              value: /var/lib/cilium/clustermesh/
            - name: KUBERNETES_SERVICE_HOST
              value: localhost
            - name: KUBERNETES_SERVICE_PORT
              value: "7445"
          image: quay.io/cilium/cilium:v1.14.6@sha256:37a49f1abb333279a9b802ee8a21c61cde9dd9138b5ac55f77bdfca733ba852a
          imagePullPolicy: IfNotPresent
          lifecycle:
            postStart:
              exec:
                command:
                  - bash
                  - -c
                  - |
                    set -o errexit
                    set -o pipefail
                    set -o nounset

                    # When running in AWS ENI mode, it's likely that 'aws-node' has
                    # had a chance to install SNAT iptables rules. These can result
                    # in dropped traffic, so we should attempt to remove them.
                    # We do it using a 'postStart' hook since this may need to run
                    # for nodes which might have already been init'ed but may still
                    # have dangling rules. This is safe because there are no
                    # dependencies on anything that is part of the startup script
                    # itself, and can be safely run multiple times per node (e.g. in
                    # case of a restart).
                    if [[ "$(iptables-save | grep -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                    then
                        echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                        iptables-save | grep -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                    fi
                    echo 'Done!'
            preStop:
              exec:
                command:
                  - /cni-uninstall.sh
          livenessProbe:
            failureThreshold: 10
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: cilium-agent
          ports:
            - containerPort: 4244
              hostPort: 4244
              name: peer-service
              protocol: TCP
            - containerPort: 9965
              hostPort: 9965
              name: hubble-metrics
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          securityContext:
            capabilities:
              add:
                - CHOWN
                - KILL
                - NET_ADMIN
                - NET_RAW
                - IPC_LOCK
                - SYS_ADMIN
                - SYS_RESOURCE
                - DAC_OVERRIDE
                - FOWNER
                - SETGID
                - SETUID
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          startupProbe:
            failureThreshold: 105
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /host/proc/sys/net
              name: host-proc-sys-net
            - mountPath: /host/proc/sys/kernel
              name: host-proc-sys-kernel
            - mountPath: /sys/fs/bpf
              mountPropagation: HostToContainer
              name: bpf-maps
            - mountPath: /sys/fs/cgroup
              name: cilium-cgroup
            - mountPath: /var/run/cilium
              name: cilium-run
            - mountPath: /host/etc/cni/net.d
              name: etc-cni-netd
            - mountPath: /var/lib/cilium/clustermesh
              name: clustermesh-secrets
              readOnly: true
            - mountPath: /lib/modules
              name: lib-modules
              readOnly: true
            - mountPath: /run/xtables.lock
              name: xtables-lock
            - mountPath: /var/lib/cilium/tls/hubble
              name: hubble-tls
              readOnly: true
            - mountPath: /tmp
              name: tmp
      hostNetwork: true
      initContainers:
        - command:
            - cilium
            - build-config
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: KUBERNETES_SERVICE_HOST
              value: localhost
            - name: KUBERNETES_SERVICE_PORT
              value: "7445"
          image: quay.io/cilium/cilium:v1.14.6@sha256:37a49f1abb333279a9b802ee8a21c61cde9dd9138b5ac55f77bdfca733ba852a
          imagePullPolicy: IfNotPresent
          name: config
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /tmp
              name: tmp
        - args:
            - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
          command:
            - /bin/bash
            - -c
            - --
          image: quay.io/cilium/cilium:v1.14.6@sha256:37a49f1abb333279a9b802ee8a21c61cde9dd9138b5ac55f77bdfca733ba852a
          imagePullPolicy: IfNotPresent
          name: mount-bpf-fs
          securityContext:
            privileged: true
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /sys/fs/bpf
              mountPropagation: Bidirectional
              name: bpf-maps
        - command:
            - /init-container.sh
          env:
            - name: CILIUM_ALL_STATE
              valueFrom:
                configMapKeyRef:
                  key: clean-cilium-state
                  name: cilium-config
                  optional: true
            - name: CILIUM_BPF_STATE
              valueFrom:
                configMapKeyRef:
                  key: clean-cilium-bpf-state
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: localhost
            - name: KUBERNETES_SERVICE_PORT
              value: "7445"
          image: quay.io/cilium/cilium:v1.14.6@sha256:37a49f1abb333279a9b802ee8a21c61cde9dd9138b5ac55f77bdfca733ba852a
          imagePullPolicy: IfNotPresent
          name: clean-cilium-state
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
                - SYS_ADMIN
                - SYS_RESOURCE
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /sys/fs/bpf
              name: bpf-maps
            - mountPath: /sys/fs/cgroup
              mountPropagation: HostToContainer
              name: cilium-cgroup
            - mountPath: /var/run/cilium
              name: cilium-run
        - command:
            - /install-plugin.sh
          image: quay.io/cilium/cilium:v1.14.6@sha256:37a49f1abb333279a9b802ee8a21c61cde9dd9138b5ac55f77bdfca733ba852a
          imagePullPolicy: IfNotPresent
          name: install-cni-binaries
          resources:
            requests:
              cpu: 100m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /host/opt/cni/bin
              name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
        - operator: Exists
      volumes:
        - emptyDir: {}
          name: tmp
        - hostPath:
            path: /var/run/cilium
            type: DirectoryOrCreate
          name: cilium-run
        - hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
          name: bpf-maps
        - hostPath:
            path: /sys/fs/cgroup
            type: DirectoryOrCreate
          name: cilium-cgroup
        - hostPath:
            path: /opt/cni/bin
            type: DirectoryOrCreate
          name: cni-path
        - hostPath:
            path: /etc/cni/net.d
            type: DirectoryOrCreate
          name: etc-cni-netd
        - hostPath:
            path: /lib/modules
          name: lib-modules
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - name: clustermesh-secrets
          projected:
            defaultMode: 256
            sources:
              - secret:
                  name: cilium-clustermesh
                  optional: true
              - secret:
                  items:
                    - key: tls.key
                      path: common-etcd-client.key
                    - key: tls.crt
                      path: common-etcd-client.crt
                    - key: ca.crt
                      path: common-etcd-client-ca.crt
                  name: clustermesh-apiserver-remote-cert
                  optional: true
        - hostPath:
            path: /proc/sys/net
            type: Directory
          name: host-proc-sys-net
        - hostPath:
            path: /proc/sys/kernel
            type: Directory
          name: host-proc-sys-kernel
        - name: hubble-tls
          projected:
            defaultMode: 256
            sources:
              - secret:
                  items:
                    - key: tls.crt
                      path: server.crt
                    - key: tls.key
                      path: server.key
                    - key: ca.crt
                      path: client-ca.crt
                  name: hubble-server-certs
                  optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
