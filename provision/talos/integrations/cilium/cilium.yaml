# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-bgp-control-plane-secrets
  namespace: kube-system
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
      - services
      - pods
      - endpoints
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - list
      - watch
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools
      - ciliumbgppeeringpolicies
      - ciliumbgpnodeconfigs
      - ciliumbgpadvertisements
      - ciliumbgppeerconfigs
      - ciliumclusterwideenvoyconfigs
      - ciliumclusterwidenetworkpolicies
      - ciliumegressgatewaypolicies
      - ciliumendpoints
      - ciliumendpointslices
      - ciliumenvoyconfigs
      - ciliumidentities
      - ciliumlocalredirectpolicies
      - ciliumnetworkpolicies
      - ciliumnodes
      - ciliumnodeconfigs
      - ciliumcidrgroups
      - ciliuml2announcementpolicies
      - ciliumpodippools
    verbs:
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
      - ciliumendpoints
      - ciliumnodes
    verbs:
      - create
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
    verbs:
      - delete
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
      - ciliumnodes/status
    verbs:
      - get
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
      - ciliumendpoints/status
      - ciliumendpoints
      - ciliuml2announcementpolicies/status
      - ciliumbgpnodeconfigs/status
    verbs:
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
      - delete
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
      - nodes/status
    verbs:
      - patch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services/status
    verbs:
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies
      - ciliumclusterwidenetworkpolicies
    verbs:
      - create
      - update
      - deletecollection
      - patch
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
    verbs:
      - patch
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
      - ciliumidentities
    verbs:
      - delete
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
    verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes/status
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpointslices
      - ciliumenvoyconfigs
      - ciliumbgppeerconfigs
      - ciliumbgpadvertisements
      - ciliumbgpnodeconfigs
    verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
      - patch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resourceNames:
      - ciliumloadbalancerippools.cilium.io
      - ciliumbgppeeringpolicies.cilium.io
      - ciliumbgpclusterconfigs.cilium.io
      - ciliumbgppeerconfigs.cilium.io
      - ciliumbgpadvertisements.cilium.io
      - ciliumbgpnodeconfigs.cilium.io
      - ciliumbgpnodeconfigoverrides.cilium.io
      - ciliumclusterwideenvoyconfigs.cilium.io
      - ciliumclusterwidenetworkpolicies.cilium.io
      - ciliumegressgatewaypolicies.cilium.io
      - ciliumendpoints.cilium.io
      - ciliumendpointslices.cilium.io
      - ciliumenvoyconfigs.cilium.io
      - ciliumexternalworkloads.cilium.io
      - ciliumidentities.cilium.io
      - ciliumlocalredirectpolicies.cilium.io
      - ciliumnetworkpolicies.cilium.io
      - ciliumnodes.cilium.io
      - ciliumnodeconfigs.cilium.io
      - ciliumcidrgroups.cilium.io
      - ciliuml2announcementpolicies.cilium.io
      - ciliumpodippools.cilium.io
    resources:
      - customresourcedefinitions
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools
      - ciliumpodippools
      - ciliumbgpclusterconfigs
      - ciliumbgpnodeconfigoverrides
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumpodippools
    verbs:
      - create
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools/status
    verbs:
      - patch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - componentstatuses
      - endpoints
      - namespaces
      - nodes
      - pods
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - "*"
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-bgp-control-plane-secrets
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-bgp-control-plane-secrets
subjects:
  - kind: ServiceAccount
    name: cilium
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: cilium
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
  - kind: ServiceAccount
    name: cilium
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
  - kind: ServiceAccount
    name: cilium-operator
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
  - kind: ServiceAccount
    name: hubble-ui
    namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bgp-secrets-namespace: kube-system
  bpf-lb-acceleration: disabled
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: dsr
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: k8s
  cni-exclusive: "false"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  dnsproxy-enable-transparent-mode: "true"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bandwidth-manager: "true"
  enable-bbr: "true"
  enable-bgp-control-plane: "true"
  enable-bpf-clock-probe: "false"
  enable-bpf-masquerade: "true"
  enable-bpf-tproxy: "true"
  enable-endpoint-health-checking: "true"
  enable-health-check-loadbalancer-ip: "false"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-masquerade-to-route-source: "false"
  enable-metrics: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  endpoint-status: policy
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-export-file-max-backups: "5"
  hubble-export-file-max-size-mb: "10"
  hubble-listen-address: :4244
  hubble-metrics: dns:query drop tcp flow port-distribution icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.244.0.0/16
  k8s-client-burst: "20"
  k8s-client-qps: "10"
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  max-connected-clusters: "255"
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  operator-prometheus-serve-addr: :9963
  policy-cidr-match-mode: ""
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: tunnel
  service-no-backend-response: reject
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel-protocol: vxlan
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml:
    "cluster-name: k8s\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf:
    "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n\n        # Liveness probe\n        location
    /healthz {\n            access_log off;\n            add_header Content-Type text/plain;\n
    \           return 200 'ok';\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU10endiNHBSZmNrWWFlSEJMS3dqeGt3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd05qRXpOREl5TmxvWERUSTNNRFF3TmpFegpOREl5Tmxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF3UHVickQyRTV2dXhRSVJ3RWhKYkg1dm1QQ0dXTktEbjhmODQ3R2FlK05QcXBNL2wKVnUxdk1mVzFIVnAzN0Y3VG5qZ2NTR1hIeXhOMWFucHNadW1vcVNrL0FTSyt3RVM0ZEpsNVFOeXlHZWtFNDk4TwpUQVE3TzFCTlR3YnVUdlBNNUxRMzlZZE95OFoyU2kvUjJuZGlvdzlKcHFZZ1Izd3B2MnVwTHBweWlTYWZVTUNzClVKUGhmeUpSQVRCY0k3dmplY2YvZU9SM2FOUnVVcHhybjRhOXNoWHNIUEVOSkMvZ3YyMEIxc2w4Yjk4NytTU1QKT1YvTzFvVlVPRWlYL2hHSDRVYllyMVRxTnZyMU9KUzBObU40MUxzeUZObk92UkF6NUpjUUo2cW16RjVIMjhQcQpOa0daNjNFS2tnVVBYOGZPYmhHYW5YT0J4NnQzRTVVNTJhVGxzUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRDRXc0NYZE5zckJZRVF6eWYxNFB5NCtuLyswTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQkFBU01WMUhjcHpBQkdzMnRIdFlUMjlzNWhVQmdxQ3E2TjBSYzNaQ1V6ZUdQRU9BSUgzaTRTCk96RUJvVnBSNE5QeVlxQjk4RHAvRmV3S0lvQW96ZXZ5WVQxOGNnc1U5emIrZUFrMFordzBLSDR1c0kyMnhyRU4KQ0c3cG4waGMyYlBqUmRFdmk2d01XL2VGVE1VaWFlV0lNN2ExQUdQdmxrcGZPRmJDMnEwOVU4TDN2Y1JOVVQ0ZgpFMnZwQ0tXSDBzU2R0VHIxbDBsaGkwamhvRGQ0YnBWMG92bnNPaENVSjJkdWtaVit4RFhrVVpnVjhSUFpuZFhhClE0bVVUWm4wWEUzRERyZU9YaHJCT29uKzVyMHQ1Uk8xd3U3UDV3MG9nQ1k4RUZGcm8yYmZ6dlR2bnZ0clJ6bFoKdXdWR3NYYldQTjVYV3lOMXBTR3BWMWVBWlZqdFFLOVYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd1B1YnJEMkU1dnV4UUlSd0VoSmJINXZtUENHV05LRG44Zjg0N0dhZStOUHFwTS9sClZ1MXZNZlcxSFZwMzdGN1RuamdjU0dYSHl4TjFhbnBzWnVtb3FTay9BU0srd0VTNGRKbDVRTnl5R2VrRTQ5OE8KVEFRN08xQk5Ud2J1VHZQTTVMUTM5WWRPeThaMlNpL1IybmRpb3c5SnBxWWdSM3dwdjJ1cExwcHlpU2FmVU1DcwpVSlBoZnlKUkFUQmNJN3ZqZWNmL2VPUjNhTlJ1VXB4cm40YTlzaFhzSFBFTkpDL2d2MjBCMXNsOGI5ODcrU1NUCk9WL08xb1ZVT0VpWC9oR0g0VWJZcjFUcU52cjFPSlMwTm1ONDFMc3lGTm5PdlJBejVKY1FKNnFtekY1SDI4UHEKTmtHWjYzRUtrZ1VQWDhmT2JoR2FuWE9CeDZ0M0U1VTUyYVRsc1FJREFRQUJBb0lCQUYreEk4c3ZvaVFyTUFSdQo1MmQrcEtLeTJtSjh3UStOcmhYSVdZQ1hqa0tTU21xNUQ5NmYwNkJ4VndLY0pwVVZuRmQ3T1VNSS9SNE1vdzlPCmIweEVsclp5MW1RSXg0OXRSQTNGUUdQU1M1b2ZlcVpIcDc0MzV1c05jWmc3TnBYOXZGNjNvbnZrUVVVNFB0V2cKaXEyS3YyVmRva2E1WDQ0eTJqeXA5UFUvN29Wa3ZlYUsySWdMRTFUZ0M1ZUx3WGI5dkIzaVFHcGI4M1M2OUhnTwpMcktzSURtSGhrV1BnMGV1VWlYMWNzZUd0eU9JdlRDQ0dtN2RHSXI2bmgyRHNFNVBDeVhVc1BySzZQQWpOci9JCnJUTG54VEliWDhFYjFpRnBaNExZYWQzRzlNd2xhK2l5OHRSRmpZa3VRdFh1VkNBa1BwNmJ3a1NYb1kyOGVxdDUKQUJxeEFmRUNnWUVBNHV2VEFEU2FiMmp4T3ZxUk5DQWlPeEMxNWRTUkNVcjVaNDlvRVdEV2tBTkFmSGJGd1NTdApwVnN6NHNWbDNJVnRzUHZBWWF5WE0xdzdoRkZ5ZXJZWnpnaXhpeFV1WWs2S2l3dEV5UHFBVjlOVmhLQ29xaVJnCjNzdVhNb3gydnB3endjS1YwVGxoTHRDSkNSd2xsZjd5ZjYzL3hLUHV4T0dUT0YwYndyZ1hmbjBDZ1lFQTJiWnUKdlRoc2R0cGh0QVh6Q1pXdWltaFB3WlNwaU1qMGRETGhmVTB6UVdkR2IwazY5WG53UEtKTFdDeFhzMWNSeE1VNgpzOUtwZnN0cFBrSTMrdGNOK0FaNnk5eC9PRGVmd3FTZHA5b1FFL2dLdXk1Sjlxcnk3bDhDUFRVNlhMU21sS081CnRZUFZZaUJ1RzFoS2crUW1sMUlDRHRFcGYyODZoSFkrSWx5eVprVUNnWUVBa0VyV1kvWVBFYkxRV2VtRXRYbU4KYXJPSWhybHc5RkRKWUpHdTRnWUt5WTVYemcwVVdHbURSWGRGK2ZmOWVva1pwQVdoWWpxRjlyRzZZcndMcUgzcwowTGQwZGZVbEJudmMydWR5ZUwzWktIK0lqSXBBVmRoR0JNVyt3ZlRSZVFrSVhEZm9YaDgzYmJaS3ZSRTUwVFJKCmJPanVqMUtTZkh6WHlXcGpRYUVmeDEwQ2dZQTNVVTlaN05oQ2FzS2doMUoxZ1A3VVZDVFB2d0pFcXlyUnk0dlgKMXFITFlINVpFSFpXb1NFVmh2YzE5QzVrZHg4Z3JDeDZQSENzc3VxTzB5eCtJOTU4d3NpNHU5SG5hdHJCRGlxdwoxNHQyUjNRU2szUmZwSmdOVVQ2MFpxM3BtRTByUDE2VWJHYnZnK1gyTkx6YVBrSS8rS3BsTVdnbDVSRXRUdzRDCmxTTVBNUUtCZ1FEYmo3R3Radk1JU0d0SEJHVDVIaVcvbDZXK3RUV0lkTVJnK0FDdmQyY28rN0cxcmZCN2Nzay8KYzRMa1gvWEsxZXZNS0VDZlRXOUx6TVpjdUt2Z2dURWFGTG9GVk54aXprVFdjK3ZCTGxldE03a2ZaWkFrWUNEUgpOOWFmNU9PKzdzeHFCVUx4R1hBOUFyVEl2NGc5RkpZMFRjelFTeGVZdWNoYitZejhxKzNtbUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU10endiNHBSZmNrWWFlSEJMS3dqeGt3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd05qRXpOREl5TmxvWERUSTNNRFF3TmpFegpOREl5Tmxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF3UHVickQyRTV2dXhRSVJ3RWhKYkg1dm1QQ0dXTktEbjhmODQ3R2FlK05QcXBNL2wKVnUxdk1mVzFIVnAzN0Y3VG5qZ2NTR1hIeXhOMWFucHNadW1vcVNrL0FTSyt3RVM0ZEpsNVFOeXlHZWtFNDk4TwpUQVE3TzFCTlR3YnVUdlBNNUxRMzlZZE95OFoyU2kvUjJuZGlvdzlKcHFZZ1Izd3B2MnVwTHBweWlTYWZVTUNzClVKUGhmeUpSQVRCY0k3dmplY2YvZU9SM2FOUnVVcHhybjRhOXNoWHNIUEVOSkMvZ3YyMEIxc2w4Yjk4NytTU1QKT1YvTzFvVlVPRWlYL2hHSDRVYllyMVRxTnZyMU9KUzBObU40MUxzeUZObk92UkF6NUpjUUo2cW16RjVIMjhQcQpOa0daNjNFS2tnVVBYOGZPYmhHYW5YT0J4NnQzRTVVNTJhVGxzUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRDRXc0NYZE5zckJZRVF6eWYxNFB5NCtuLyswTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQkFBU01WMUhjcHpBQkdzMnRIdFlUMjlzNWhVQmdxQ3E2TjBSYzNaQ1V6ZUdQRU9BSUgzaTRTCk96RUJvVnBSNE5QeVlxQjk4RHAvRmV3S0lvQW96ZXZ5WVQxOGNnc1U5emIrZUFrMFordzBLSDR1c0kyMnhyRU4KQ0c3cG4waGMyYlBqUmRFdmk2d01XL2VGVE1VaWFlV0lNN2ExQUdQdmxrcGZPRmJDMnEwOVU4TDN2Y1JOVVQ0ZgpFMnZwQ0tXSDBzU2R0VHIxbDBsaGkwamhvRGQ0YnBWMG92bnNPaENVSjJkdWtaVit4RFhrVVpnVjhSUFpuZFhhClE0bVVUWm4wWEUzRERyZU9YaHJCT29uKzVyMHQ1Uk8xd3U3UDV3MG9nQ1k4RUZGcm8yYmZ6dlR2bnZ0clJ6bFoKdXdWR3NYYldQTjVYV3lOMXBTR3BWMWVBWlZqdFFLOVYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU5mVy9RczVvMHlFelNDbko2YWR4Ukl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd05qRXpOREl5TjFvWERUSTNNRFF3TmpFegpOREl5TjFvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTMraW1jSkJwZmFralZhdmFPL3UvUGdmS210TWYKM3dtTEx6d2VPV1BUS2hMNFNhai9KWnJEQ3dzTmFha3hsaVhBa2xUbi95dndtNnk5QWcyU3BXbWl1M2w5dWdOdwo2bkl0alVaeitnQWcvdmE5Y3IyWURNS2lnVkhXUHRnNmE4ZGltQ3RzYWRCSUxZWTI1VUZ2Y0xzRTU3UmxiVDdjCmQwT0U2SnpESW1aNEV2TENvNk9DcWtqbUJLMUVaS3RYSGUyVFZCMmNUak9EMDM0a1I2UjA1KzFGTmJiTUFjRU0KeGd5TURENWRjeS9JQTJPcHFuQ2J1NWRjeWhpWnpMQ3BHOHJVcHVPc2Zuc3ZKYUdQQWZ5ZzR2bFcxdHAxdkdNQgpZbzhWZTJad0NUSTBGM3NHL3MxUDUyNTNPL3RIYk96eE9pUmpYVUxFRk5aTGY1VzFRYURXV1hLOUh3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUStGckFsM1RiS3dXQkVNOG45ZUQ4dQpQcC8vdERBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBSTN2MXNaT0ZIYVg4SzlTN3pWcWhSMVI4ZGl6c3ozRGRYeUdGNjBncSt1bmFwelcKMk0yckEvK2dvSlJJZ2ZyYXF3d2dNUVg2MUpQUDlDZVZQcUZCUWNCSTlpaHhhKy8wWnJ5NW55RHFnUTZ6UmY4UgpTaUlhQ3dxOFdnZGlqZDE0KzlzQm5wRUpaVHU2U1dqNzJxQ3pDWU1PQUJ5T2ViUUlrdCtZZnJoM05jbGFNVTNOCnpLVEhqckN5bTV5bzBDWWZwMVJvN3NuWWsrRlROVDRKZnhJclpwWmlmTXJENXNrN1ZLOU1MdVFjdm1PMG1ESjIKemdRNUF3OTc4Z245Qm5GK3pmVDQrb09UajRNZWxzWm9RNlN6elBQdDRqeVdOZW1VdmFWSnlSVnh0dSt1ZHB5QgowbktUaUMzMEw4cERTL2JoeHNvOTNucWtvL3Y5YTlEOFFyeDNwWXM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMytpbWNKQnBmYWtqVmF2YU8vdS9QZ2ZLbXRNZjN3bUxMendlT1dQVEtoTDRTYWovCkpackRDd3NOYWFreGxpWEFrbFRuL3l2d202eTlBZzJTcFdtaXUzbDl1Z053Nm5JdGpVWnorZ0FnL3ZhOWNyMlkKRE1LaWdWSFdQdGc2YThkaW1DdHNhZEJJTFlZMjVVRnZjTHNFNTdSbGJUN2NkME9FNkp6REltWjRFdkxDbzZPQwpxa2ptQksxRVpLdFhIZTJUVkIyY1RqT0QwMzRrUjZSMDUrMUZOYmJNQWNFTXhneU1ERDVkY3kvSUEyT3BxbkNiCnU1ZGN5aGlaekxDcEc4clVwdU9zZm5zdkphR1BBZnlnNHZsVzF0cDF2R01CWW84VmUyWndDVEkwRjNzRy9zMVAKNTI1M08vdEhiT3p4T2lSalhVTEVGTlpMZjVXMVFhRFdXWEs5SHdJREFRQUJBb0lCQVFDRmxFeEhkMEFZQWFIYwo2R3VId1lhMFFQMjBKQ1F0Y1lvaG9lSCtKdm5CYmhQR0RoWTVudnloUi9TMmhvUFlxYWtiSTZCTWNUQllEMU9yCk4rRzI0VEIrVzlxUDhLR2FuSWRrY3hXWm5oNFJQYTZFRjJ2d29PVkY5VWExczFZWEdwcE5ZZ3FKamdLaGRpS2wKM3NYWElSdXFCOHRDdzIvUGp1NXB2NndDaDlNMnFaTmFrbGVGazI4TTdkbkhGTzhDU0NkanU0MHNja1lqUTNtNApnQ2x5Njg2MklLRGU1ZjVLRnBMUjI5aC9pNjR0YjdpYlJBUHVvdmxtakZHenY2ME1iYUFDaHVEMkhLbFI3Rm8yCkpZZEk3cGhjWFo4RWFmRUwzUTkwK2NmeXVWUE5vam5vN0hibjJrSHZKdWtyQlp2L21MTTZYQzY0VFMzb1BCYjMKeFh0WGRTRnhBb0dCQU9WV1hCeHY0aUUrTHdYckhKM3FqaEwvM010RHFQaER0T2lVMHRXR1NUNVZwbi8zMStrRwp1Wml3MVg3S2M2S083ZnlTNTNVeFlFeFN2cFJxVkJLVnl0b2FncmRSR2U1UloxNDk3VG84UzU1R1MrbGVsamVvCnhsaGVqL21YSldLcnhYd0JheCtIUHJUL1hkTUN3c3Q5VTg3QXh4Z3ZuZFB5dUZCanZxTk12RjRyQW9HQkFQbncKdVN1eFU2SGZ2NEdpYjdhUzJ6cFNpQk5EblRjWm1vQ3lvdUxEUWdtQ0FTT2tqMzZhSFZoNTVDSXJYQUNmcGd6RgoxOXZKcEkzS2xsTEFOT2RzN2x6WE5tb1pSSnE4elUxYzI1bUY5Nkt0RjNOYXFmVkJlaGZDRU8xWTl0YzNOYnhkClYreGlBeVQ2ckxqRnlaQWFUNFZjaERQWS9YOWI0QlZ4MU5KakdWYmRBb0dBRGZBY3N3Rzl2WVY0K0NRYzNpQVcKT0dOaWVOd0kxZVhQaGQ4ZG5TcUhJd216ajgxeFN0RkUwRm5XNzlqQUJGNHBhcE5IQytGUFYvUWpid096VGxuYQpOVDB0T3BUc1BZYW5BSnhFNGFndWRGVVRZZ0NFb3FkWVBxQ29vV09sT3dUemdLRFpjTllZWW9tdW14ZHMzVThsCm04Z3RrWE83Wk5rNGlISTNjTmRHRDNjQ2dZQmVCd2l5ZmtpWE9rU2ljVWlUcDlYZnNCTFBKSDJ0ciswbkE0MHgKd0FGRThHcWJUUnBLcDVIb3FocUFIRTNGVWtvMnZldENIUzdSeE9nZWczNmpuYUJpdnZnU25DVHFEYU15dW45RwoxMVpkRmI4ZnYzajI4a1lMVUEvc0txN2FNa1A5OUNQU291REo5YUFxOXdXb042MjQzeUJCSFIzbzN0aURXTXFXCngzOU41UUtCZ1FDNVNGekFjSVF2b0UrVjN5cmxCUFVBdTRDeXZWei9hd3dWV25CZmxTd2hqNGU3RmV2NThzM2wKR1dxU3ZpTVBpbHJpeTVtSStiN0ZUL0FSQ3YvYUFpS1o0TXlhbUp1b1F2MlJzTGJSczZ6NE0zdm9XZUVHa2hlWAozbnpJdkQxci9JL29HN04vc2pwSnFSZVp2aWp0ZnZFemt6VHRzRlIydWhGL2N0NFlmYlp1MkE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU10endiNHBSZmNrWWFlSEJMS3dqeGt3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd05qRXpOREl5TmxvWERUSTNNRFF3TmpFegpOREl5Tmxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF3UHVickQyRTV2dXhRSVJ3RWhKYkg1dm1QQ0dXTktEbjhmODQ3R2FlK05QcXBNL2wKVnUxdk1mVzFIVnAzN0Y3VG5qZ2NTR1hIeXhOMWFucHNadW1vcVNrL0FTSyt3RVM0ZEpsNVFOeXlHZWtFNDk4TwpUQVE3TzFCTlR3YnVUdlBNNUxRMzlZZE95OFoyU2kvUjJuZGlvdzlKcHFZZ1Izd3B2MnVwTHBweWlTYWZVTUNzClVKUGhmeUpSQVRCY0k3dmplY2YvZU9SM2FOUnVVcHhybjRhOXNoWHNIUEVOSkMvZ3YyMEIxc2w4Yjk4NytTU1QKT1YvTzFvVlVPRWlYL2hHSDRVYllyMVRxTnZyMU9KUzBObU40MUxzeUZObk92UkF6NUpjUUo2cW16RjVIMjhQcQpOa0daNjNFS2tnVVBYOGZPYmhHYW5YT0J4NnQzRTVVNTJhVGxzUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRDRXc0NYZE5zckJZRVF6eWYxNFB5NCtuLyswTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQkFBU01WMUhjcHpBQkdzMnRIdFlUMjlzNWhVQmdxQ3E2TjBSYzNaQ1V6ZUdQRU9BSUgzaTRTCk96RUJvVnBSNE5QeVlxQjk4RHAvRmV3S0lvQW96ZXZ5WVQxOGNnc1U5emIrZUFrMFordzBLSDR1c0kyMnhyRU4KQ0c3cG4waGMyYlBqUmRFdmk2d01XL2VGVE1VaWFlV0lNN2ExQUdQdmxrcGZPRmJDMnEwOVU4TDN2Y1JOVVQ0ZgpFMnZwQ0tXSDBzU2R0VHIxbDBsaGkwamhvRGQ0YnBWMG92bnNPaENVSjJkdWtaVit4RFhrVVpnVjhSUFpuZFhhClE0bVVUWm4wWEUzRERyZU9YaHJCT29uKzVyMHQ1Uk8xd3U3UDV3MG9nQ1k4RUZGcm8yYmZ6dlR2bnZ0clJ6bFoKdXdWR3NYYldQTjVYV3lOMXBTR3BWMWVBWlZqdFFLOVYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUekNDQWplZ0F3SUJBZ0lSQVBtcCt2Z2dQeU9NWVpoaVoyYWVWTjR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURRd05qRXpOREl5TjFvWERUSTNNRFF3TmpFegpOREl5TjFvd0pqRWtNQ0lHQTFVRUF3d2JLaTVyT0hNdWFIVmlZbXhsTFdkeWNHTXVZMmxzYVhWdExtbHZNSUlCCklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEzVEpYSzRqcGxpZ3l4eGxybU5lYjNQd2gKdVRxQ1o1RlVrRmdTY0dlb05DMWxKS0NHOW15MzR3QUVSVU5Oa1BsTzYreDRRWWNwQnRUYUxyazRwVEwwVXo0ZQpOUTdEUzczaFYwM0NCbjFyeFUxZml6SGFuRVJjRmJBRGcyWFd6SjNaRzJSbFlzZFVDeTh5RkpRQzExdXVIeEFiClNjaUQzc282U056bUdSQUdRTU9tL0M0YU8zbklMMHJFeWpXcTlacDN1SjJxc1JObmE0NVRjVG1XSVhLQ2hNaEsKM0hDWDJFSWxINHozZ0dMZ1VMZ09WTGcyMWMxZjdqckt6Z2J5TTNOMzAwQ3d4c01XaHJqTmdjWmFNTS9heDZYKwo1N1BVY2krMjhEajQvMzgyU0xNZmRiVjdDQ1lnZjVBRnpBRVBzTGd2WkVBcXB5YnN4dEdoRkU4ME9QNjlwUUlECkFRQUJvNEdKTUlHR01BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlErRnJBbDNUYkt3V0JFTThuOQplRDh1UHAvL3REQW1CZ05WSFJFRUh6QWRnaHNxTG1zNGN5NW9kV0ppYkdVdFozSndZeTVqYVd4cGRXMHVhVzh3CkRRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFLVnNXdUpYRGV4T0o5NWtFY3c3ZFZUOVN5aERuWFh0d2dFN2UwZTMKZTZ0ZUozalZLU2hORnpkclFWWmxsTFdZZ2E2amxjOExpd1dVbC9oOGVVb1lkU0Rwb3N4c0RoNkljWGZtbmtxMApZUEhRZWpuOFlpRjJNWjl4TFlYanZmemp6S0pJKzYraUZyMVE3T00rM29acVFzVFFhUm5mK2MyVTRsVGNURElFCjBUN3RDakhCRkxCMktROGRhbVQybTVWVlFOTDVEbUZadFlSYUdkTVE0K09SS0taOHZTTzQ3eS9Ub2hHTE5XamYKckpNNGxkdGsyZVpFYmVGb3VrOFFtZ0tpUTFkczRtMTRnT1lNOWxuM0pIV2xFSVd5Y1Z0VFlOSG5hb2ZOU2FTYwp5M0hjVFFSQnpHaE9IbzN0N3NPa1hZQzFhZ2dlMkozSTVMTTUrYThuS2pXRHZnZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBM1RKWEs0anBsaWd5eHhscm1OZWIzUHdodVRxQ1o1RlVrRmdTY0dlb05DMWxKS0NHCjlteTM0d0FFUlVOTmtQbE82K3g0UVljcEJ0VGFMcms0cFRMMFV6NGVOUTdEUzczaFYwM0NCbjFyeFUxZml6SGEKbkVSY0ZiQURnMlhXekozWkcyUmxZc2RVQ3k4eUZKUUMxMXV1SHhBYlNjaUQzc282U056bUdSQUdRTU9tL0M0YQpPM25JTDByRXlqV3E5WnAzdUoycXNSTm5hNDVUY1RtV0lYS0NoTWhLM0hDWDJFSWxINHozZ0dMZ1VMZ09WTGcyCjFjMWY3anJLemdieU0zTjMwMEN3eHNNV2hyak5nY1phTU0vYXg2WCs1N1BVY2krMjhEajQvMzgyU0xNZmRiVjcKQ0NZZ2Y1QUZ6QUVQc0xndlpFQXFweWJzeHRHaEZFODBPUDY5cFFJREFRQUJBb0lCQVFDYTNrMFQ2UWNLbjloMQpkOEhTd0ZxYlRWaGJOTERxekdEMXN3UXQrUlZXZXRZTzMrbStqUDN1akN0eFJ4Nyt1dDdiNWJPSXhaWWU5MVpQClVsVnJySkpOMmZjU1ZPUzltaE0wcWZlSHpiWnY3SzFSYXJWUnBiY0haRFlCZ0lMMHZpdXN0dzBaTE5BV0NKUTYKdmlxREYraUFUU21kN2lzT0NHN29adWtmY1EyL3R5OUtYendRTEd0ZzZVSStRK0F6MXBucG5tRGxEZlRhR3d0Lwo2a2tNWis0cVdkYWJFYTVISEI1Q09FYmtWYkxqKzh3WGIwZCt0TzhPNzdVUmxWRlJNUnhQSDlkaVplQUlpYXBYCnJHa3pyZVNHWW1BYXdLWDJkMmtQR1NFSlQ1enNYc3ByWnRZM2l2SXErRS9xSGtSc2hXMFY5SU83aVNzWlVTdnkKcjhzNnpLemhBb0dCQVBWUFY4Nlh4c1BOaXZ6aUNzQ3A5Q2N3b0EwSUJIMHFPS3pyWi9ENjFDT3I0WDE0aENVNApGMlNhTXZVdCs0MTgwMHUyVDNKQ1BheTNSWTQyZU1KTXcrcWRDblVVOHZBczJmaSs0RkhLa3NtOGc2bG1lUjNkCmMrTmVHeWgrREd1VUYvbERzNkt0YVdxV042MjUzdytjZ2ZFdmk4eks1NU5keU81NjNjNkNBSkNkQW9HQkFPYlYKL2QyMS9DOU9XNlVwbXVHQkhENG05NlljUTJZWEM0bi9KblcxRlM1a0FjTFZ4cXRXeXc1ZTVhSDBnNTAra0RyWgpONWZ3QmI3UEZLNUxOVDB4aEViYzNjTHk3b0R1bk5kbC9BbW81ZHVGWVRnNWdVWkZrWjlwOU9LTlF1Nnp6ZU1tClFZellDZWsrOFl4dHpDZi93bTdRcFBzbDNBbGRBUGdTYXQxVm1uNnBBb0dBR3RPZGQ2TlRnbEExRmVpbVltRnoKcU9HQmIwdGtLa2Yyd0xwUnVLSEZsMDBSc01ZQU5ZM0h5U0d2MXU0N1owS3lYTUpJTitlVWxSSEowbjZVZ0RNaQo3Y0pVeFc4UURrSHBhSEYvV0pKOXNRQWpxZC9oK09raDVraUJVZEZQREdpNm9uREw4VXRqanR0MHBWUUJWOVMyCnhTaDg4bDF5SzhTQzE4bXAvZzVyZjJVQ2dZQlFxSzJRYnlxempQblErSHk2RjFjN0VIcXdmR2ZBb0lUVHIyaE0KOFAxNXZGQXhPR20zTFJpKzZNSHNtWGZ6MWd5bnc0YjlmRTFGb3k1aXlMek5xU1BEYnlHK0lRemQySUxOY1VGawpUclFpeExSMzVRQWJBZXdrZSsycHpCcDdOakRYRW1NTlIrQU90SVBLd2dMNFp4SVZqcXBYWjU4L1ZsUWtXcXNrCnMrak1JUUtCZ0hSaEZielhpOG5GM0VJTWJROHhOV3k3VFhSODQxZXVvU2M0ZnpWT1FkVnhJalJNT2luS2tVNmkKTmJzN0J2UFJSUmhzdStQZVhUMmEwWDNmb2lYK2tiaHFrR2ZESU1tU05lMTdwQUJweGpjZXI5dW5mTWpJRnUxTQpNdDBZcjEzSXZXTnlwWjZuYWo4VVplalRReFR0MDVEWkFuOWhVRm0zTHhUS3VlSGo0blJHCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
    - name: hubble-metrics
      port: 9965
      protocol: TCP
      targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
    - name: peer-service
      port: 443
      protocol: TCP
      targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 75920b7cb80fc8875670600587938766473aa171d3e9fe36b839d04bb3c6118f
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  io.cilium/app: operator
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
        - args:
            - --config-dir=/tmp/cilium/config-map
            - --debug=$(CILIUM_DEBUG)
          command:
            - cilium-operator-generic
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_DEBUG
              valueFrom:
                configMapKeyRef:
                  key: debug
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: localhost
            - name: KUBERNETES_SERVICE_PORT
              value: "7445"
          image: quay.io/cilium/operator-generic:v1.15.3@sha256:c97f23161906b82f5c81a2d825b0646a5aa1dfb4adf1d49cbb87815079e69d61
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 9234
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 3
          name: cilium-operator
          ports:
            - containerPort: 9963
              hostPort: 9963
              name: prometheus
              protocol: TCP
          readinessProbe:
            failureThreshold: 5
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 9234
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 5
            timeoutSeconds: 3
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /tmp/cilium/config-map
              name: cilium-config-path
              readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
        - operator: Exists
      volumes:
        - configMap:
            name: cilium-config
          name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: c423d0ac47e0a93beb82a1c537d5a2736ec0439f9bd44be721e589b02981eb4f
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  k8s-app: cilium
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
        - args:
            - serve
          command:
            - hubble-relay
          image: quay.io/cilium/hubble-relay:v1.15.3@sha256:b9c6431aa4f22242a5d0d750c621d9d04bdc25549e4fb1116bfec98dd87958a2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            grpc:
              port: 4222
            timeoutSeconds: 3
          name: hubble-relay
          ports:
            - containerPort: 4245
              name: grpc
          readinessProbe:
            grpc:
              port: 4222
            timeoutSeconds: 3
          securityContext:
            capabilities:
              drop:
                - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          startupProbe:
            failureThreshold: 20
            grpc:
              port: 4222
            periodSeconds: 3
            timeoutSeconds: 3
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /etc/hubble-relay
              name: config
              readOnly: true
            - mountPath: /var/lib/hubble-relay/tls
              name: tls
              readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
        - configMap:
            items:
              - key: config.yaml
                path: config.yaml
            name: hubble-relay-config
          name: config
        - name: tls
          projected:
            defaultMode: 256
            sources:
              - secret:
                  items:
                    - key: tls.crt
                      path: client.crt
                    - key: tls.key
                      path: client.key
                    - key: ca.crt
                      path: hubble-server-ca.crt
                  name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: e8acee96ed990156efd0291c8c33709d2c7902d2ec993eefa16c7cd3d1a9d84b
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
        - image: quay.io/cilium/hubble-ui:v0.13.0@sha256:7d663dc16538dd6e29061abd1047013a645e6e69c115e008bee9ea9fef9a6666
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
          name: frontend
          ports:
            - containerPort: 8081
              name: http
          readinessProbe:
            httpGet:
              path: /
              port: 8081
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /etc/nginx/conf.d/default.conf
              name: hubble-ui-nginx-conf
              subPath: nginx.conf
            - mountPath: /tmp
              name: tmp-dir
        - env:
            - name: EVENTS_SERVER_PORT
              value: "8090"
            - name: FLOWS_API_ADDR
              value: hubble-relay:80
          image: quay.io/cilium/hubble-ui-backend:v0.13.0@sha256:1e7657d997c5a48253bb8dc91ecee75b63018d16ff5e5797e5af367336bc8803
          imagePullPolicy: IfNotPresent
          name: backend
          ports:
            - containerPort: 8090
              name: grpc
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
        - configMap:
            defaultMode: 420
            name: hubble-ui-nginx
          name: hubble-ui-nginx-conf
        - emptyDir: {}
          name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 75920b7cb80fc8875670600587938766473aa171d3e9fe36b839d04bb3c6118f
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  k8s-app: cilium
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
        - args:
            - --config-dir=/tmp/cilium/config-map
          command:
            - cilium-agent
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_CLUSTERMESH_CONFIG
              value: /var/lib/cilium/clustermesh/
            - name: GOMEMLIMIT
              valueFrom:
                resourceFieldRef:
                  divisor: "1"
                  resource: limits.memory
            - name: KUBERNETES_SERVICE_HOST
              value: localhost
            - name: KUBERNETES_SERVICE_PORT
              value: "7445"
          image: quay.io/cilium/cilium:v1.15.3@sha256:da74ab61d1bc665c1c088dff41d5be388d252ca5800f30c7d88844e6b5e440b0
          imagePullPolicy: IfNotPresent
          lifecycle:
            postStart:
              exec:
                command:
                  - bash
                  - -c
                  - |
                    set -o errexit
                    set -o pipefail
                    set -o nounset

                    # When running in AWS ENI mode, it's likely that 'aws-node' has
                    # had a chance to install SNAT iptables rules. These can result
                    # in dropped traffic, so we should attempt to remove them.
                    # We do it using a 'postStart' hook since this may need to run
                    # for nodes which might have already been init'ed but may still
                    # have dangling rules. This is safe because there are no
                    # dependencies on anything that is part of the startup script
                    # itself, and can be safely run multiple times per node (e.g. in
                    # case of a restart).
                    if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                    then
                        echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                        iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                    fi
                    echo 'Done!'
            preStop:
              exec:
                command:
                  - /cni-uninstall.sh
          livenessProbe:
            failureThreshold: 10
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: cilium-agent
          ports:
            - containerPort: 4244
              hostPort: 4244
              name: peer-service
              protocol: TCP
            - containerPort: 9965
              hostPort: 9965
              name: hubble-metrics
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          securityContext:
            capabilities:
              add:
                - CHOWN
                - KILL
                - NET_ADMIN
                - NET_RAW
                - IPC_LOCK
                - SYS_ADMIN
                - SYS_RESOURCE
                - DAC_OVERRIDE
                - FOWNER
                - SETGID
                - SETUID
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          startupProbe:
            failureThreshold: 105
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 2
            successThreshold: 1
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /host/proc/sys/net
              name: host-proc-sys-net
            - mountPath: /host/proc/sys/kernel
              name: host-proc-sys-kernel
            - mountPath: /sys/fs/bpf
              mountPropagation: HostToContainer
              name: bpf-maps
            - mountPath: /sys/fs/cgroup
              name: cilium-cgroup
            - mountPath: /var/run/cilium
              name: cilium-run
            - mountPath: /host/etc/cni/net.d
              name: etc-cni-netd
            - mountPath: /var/lib/cilium/clustermesh
              name: clustermesh-secrets
              readOnly: true
            - mountPath: /lib/modules
              name: lib-modules
              readOnly: true
            - mountPath: /run/xtables.lock
              name: xtables-lock
            - mountPath: /var/lib/cilium/tls/hubble
              name: hubble-tls
              readOnly: true
            - mountPath: /tmp
              name: tmp
      hostNetwork: true
      initContainers:
        - command:
            - cilium-dbg
            - build-config
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: KUBERNETES_SERVICE_HOST
              value: localhost
            - name: KUBERNETES_SERVICE_PORT
              value: "7445"
          image: quay.io/cilium/cilium:v1.15.3@sha256:da74ab61d1bc665c1c088dff41d5be388d252ca5800f30c7d88844e6b5e440b0
          imagePullPolicy: IfNotPresent
          name: config
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /tmp
              name: tmp
        - args:
            - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
          command:
            - /bin/bash
            - -c
            - --
          image: quay.io/cilium/cilium:v1.15.3@sha256:da74ab61d1bc665c1c088dff41d5be388d252ca5800f30c7d88844e6b5e440b0
          imagePullPolicy: IfNotPresent
          name: mount-bpf-fs
          securityContext:
            privileged: true
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /sys/fs/bpf
              mountPropagation: Bidirectional
              name: bpf-maps
        - command:
            - /init-container.sh
          env:
            - name: CILIUM_ALL_STATE
              valueFrom:
                configMapKeyRef:
                  key: clean-cilium-state
                  name: cilium-config
                  optional: true
            - name: CILIUM_BPF_STATE
              valueFrom:
                configMapKeyRef:
                  key: clean-cilium-bpf-state
                  name: cilium-config
                  optional: true
            - name: WRITE_CNI_CONF_WHEN_READY
              valueFrom:
                configMapKeyRef:
                  key: write-cni-conf-when-ready
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: localhost
            - name: KUBERNETES_SERVICE_PORT
              value: "7445"
          image: quay.io/cilium/cilium:v1.15.3@sha256:da74ab61d1bc665c1c088dff41d5be388d252ca5800f30c7d88844e6b5e440b0
          imagePullPolicy: IfNotPresent
          name: clean-cilium-state
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
                - SYS_ADMIN
                - SYS_RESOURCE
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /sys/fs/bpf
              name: bpf-maps
            - mountPath: /sys/fs/cgroup
              mountPropagation: HostToContainer
              name: cilium-cgroup
            - mountPath: /var/run/cilium
              name: cilium-run
        - command:
            - /install-plugin.sh
          image: quay.io/cilium/cilium:v1.15.3@sha256:da74ab61d1bc665c1c088dff41d5be388d252ca5800f30c7d88844e6b5e440b0
          imagePullPolicy: IfNotPresent
          name: install-cni-binaries
          resources:
            requests:
              cpu: 100m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /host/opt/cni/bin
              name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
        - operator: Exists
      volumes:
        - emptyDir: {}
          name: tmp
        - hostPath:
            path: /var/run/cilium
            type: DirectoryOrCreate
          name: cilium-run
        - hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
          name: bpf-maps
        - hostPath:
            path: /sys/fs/cgroup
            type: DirectoryOrCreate
          name: cilium-cgroup
        - hostPath:
            path: /opt/cni/bin
            type: DirectoryOrCreate
          name: cni-path
        - hostPath:
            path: /etc/cni/net.d
            type: DirectoryOrCreate
          name: etc-cni-netd
        - hostPath:
            path: /lib/modules
          name: lib-modules
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - name: clustermesh-secrets
          projected:
            defaultMode: 256
            sources:
              - secret:
                  name: cilium-clustermesh
                  optional: true
              - secret:
                  items:
                    - key: tls.key
                      path: common-etcd-client.key
                    - key: tls.crt
                      path: common-etcd-client.crt
                    - key: ca.crt
                      path: common-etcd-client-ca.crt
                  name: clustermesh-apiserver-remote-cert
                  optional: true
        - hostPath:
            path: /proc/sys/net
            type: Directory
          name: host-proc-sys-net
        - hostPath:
            path: /proc/sys/kernel
            type: Directory
          name: host-proc-sys-kernel
        - name: hubble-tls
          projected:
            defaultMode: 256
            sources:
              - secret:
                  items:
                    - key: tls.crt
                      path: server.crt
                    - key: tls.key
                      path: server.key
                    - key: ca.crt
                      path: client-ca.crt
                  name: hubble-server-certs
                  optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
