# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
      - services
      - pods
      - endpoints
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - list
      - watch
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools
      - ciliumbgppeeringpolicies
      - ciliumclusterwideenvoyconfigs
      - ciliumclusterwidenetworkpolicies
      - ciliumegressgatewaypolicies
      - ciliumendpoints
      - ciliumendpointslices
      - ciliumenvoyconfigs
      - ciliumidentities
      - ciliumlocalredirectpolicies
      - ciliumnetworkpolicies
      - ciliumnodes
      - ciliumnodeconfigs
      - ciliumcidrgroups
      - ciliuml2announcementpolicies
      - ciliumpodippools
    verbs:
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
      - ciliumendpoints
      - ciliumnodes
    verbs:
      - create
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
    verbs:
      - delete
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
      - ciliumnodes/status
    verbs:
      - get
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
      - ciliumendpoints/status
      - ciliumendpoints
      - ciliuml2announcementpolicies/status
    verbs:
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
      - delete
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
      - nodes/status
    verbs:
      - patch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services/status
    verbs:
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies
      - ciliumclusterwidenetworkpolicies
    verbs:
      - create
      - update
      - deletecollection
      - patch
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
    verbs:
      - patch
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
      - ciliumidentities
    verbs:
      - delete
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
    verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes/status
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpointslices
      - ciliumenvoyconfigs
    verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
      - patch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resourceNames:
      - ciliumloadbalancerippools.cilium.io
      - ciliumbgppeeringpolicies.cilium.io
      - ciliumclusterwideenvoyconfigs.cilium.io
      - ciliumclusterwidenetworkpolicies.cilium.io
      - ciliumegressgatewaypolicies.cilium.io
      - ciliumendpoints.cilium.io
      - ciliumendpointslices.cilium.io
      - ciliumenvoyconfigs.cilium.io
      - ciliumexternalworkloads.cilium.io
      - ciliumidentities.cilium.io
      - ciliumlocalredirectpolicies.cilium.io
      - ciliumnetworkpolicies.cilium.io
      - ciliumnodes.cilium.io
      - ciliumnodeconfigs.cilium.io
      - ciliumcidrgroups.cilium.io
      - ciliuml2announcementpolicies.cilium.io
      - ciliumpodippools.cilium.io
    resources:
      - customresourcedefinitions
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools
      - ciliumpodippools
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumpodippools
    verbs:
      - create
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools/status
    verbs:
      - patch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - componentstatuses
      - endpoints
      - namespaces
      - nodes
      - pods
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - "*"
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: cilium
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
  - kind: ServiceAccount
    name: cilium
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
  - kind: ServiceAccount
    name: cilium-operator
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
  - kind: ServiceAccount
    name: hubble-ui
    namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: dsr
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: home-cluster
  cni-exclusive: "false"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "false"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bandwidth-manager: "true"
  enable-bbr: "true"
  enable-bgp-control-plane: "true"
  enable-bpf-clock-probe: "false"
  enable-bpf-masquerade: "true"
  enable-bpf-tproxy: "true"
  enable-endpoint-health-checking: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  endpoint-status: policy
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query drop tcp flow port-distribution icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.244.0.0/16
  k8s-client-burst: "10"
  k8s-client-qps: "5"
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: native
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml:
    "cluster-name: home-cluster\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf:
    "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUpLUmRJOHpCZVpUWkFBTUFIUHhucHN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeE9UQTROVFF5TmxvWERUSTJNVEV4T0RBNApOVFF5Tmxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEvZnduV1pCSFg4bEwvSDUyMlVJV0F1OXYwaEVBMHhyNEVqZlZBOUFraTUwM05zWmkKQlJlQ0VjNlRsT3JNYjdNbXNCRTAybHU5YnV4eEg1THgvaENZRUpnRDh0TVhRTTl2VENRMkMwYVdZdDE3bTEwLwo0VklDSGZraFdyc0E3THBudk1JdlNvWWF0MXllWUhDU1Ezek5JNms2cDB2VzhZMkNkV1NmaHg5WHhkNEt6c2grCktHWS9FclRaVTRkalpjS0JnaStWeTl0Tm5ZbkZzaFpQd3h1eVFNelVCMnhITWVHRVFmaEdpL2VpVlBXMXEwZ0wKV1QxVFF3dGFCMjVpMWRkK2hrK3pjdkFZOTZXUldDZ1NIdEMzWnBwZjhheHpBWTRVakNDWWJXT3pqbVJyQitYaQpjWG9BWU8zQzRVZ0d0RDNGL1c3Y3ZiUk5KNURDOEUvV1hrVEd6d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTlFkL3Zua2dEY2ZCdk1XcUcwRWRuZUlGbnpYTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWhXb0hYajllbjUyR29Zeko2Y29CRFUyeEVlb201cFh2cG5nNENic3JSeVMvN0JsVXJmcVNSCjBhc29NMFF0ZUtOTDF6MWxNZGV3MzZiNStwVEJRUm1iL29iM3hvKzB3K0Y4WllYcThuL0VteVBXcmdYVWZRWUYKN05KQUFIZk92WXoxQUFLR2lkZFg2ZlpRSmxPSVFpQU5YZktlM2pNSlZ3OG9UNTZvMEcvbkpWempUbUNPckZ4UwpDaFA5MVJDczhhOFg4Z1lEQmQ5QjNSNnlZVFZSUk90bGtyNjRjMkwxSnRGZ3NCdTZEWXNHTklpMFNnUDhxcERLClpWeXBTQ0VSUURCTWdJa2VqcTVNbFk1NkxWME43UkZWb3gzUDFJL3d0eDA4ZTZJSFlQdHkySERBZitnSGpPVEsKT1lpNnAyYWlYaUd5U3ZaaXpjampEVHR1dVRRbGpGVTAKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBL2Z3bldaQkhYOGxML0g1MjJVSVdBdTl2MGhFQTB4cjRFamZWQTlBa2k1MDNOc1ppCkJSZUNFYzZUbE9yTWI3TW1zQkUwMmx1OWJ1eHhINUx4L2hDWUVKZ0Q4dE1YUU05dlRDUTJDMGFXWXQxN20xMC8KNFZJQ0hma2hXcnNBN0xwbnZNSXZTb1lhdDF5ZVlIQ1NRM3pOSTZrNnAwdlc4WTJDZFdTZmh4OVh4ZDRLenNoKwpLR1kvRXJUWlU0ZGpaY0tCZ2krVnk5dE5uWW5Gc2haUHd4dXlRTXpVQjJ4SE1lR0VRZmhHaS9laVZQVzFxMGdMCldUMVRRd3RhQjI1aTFkZCtoayt6Y3ZBWTk2V1JXQ2dTSHRDM1pwcGY4YXh6QVk0VWpDQ1liV096am1SckIrWGkKY1hvQVlPM0M0VWdHdEQzRi9XN2N2YlJOSjVEQzhFL1dYa1RHendJREFRQUJBb0lCQUR3Y3JOZUd6VTIvWDh1Zgp4dE0reitUYjlKUThUL3ltMm1XOWJ4NGE2anRjOTA5d2ZveUQ5dFh1RllIZVhJcG5WVlhBak1qTmc3VTRJc0g5ClRtYjZXSE04OTFwR1dhK09LT0pWZzdFQmdPQmZXVHo1UWdBN0g2TW1icDJCdXdOTVR2Y2U0b0I1NHVMWStlY0wKWGFLNWEvZnZ1cUVUMHdpU25IamFXdU5wS0tYOG9kQmJicWZvRmpQZllmczIxKzB6Y1JLWUZDQ20yTjZ3Z2N5eQpxVWIvQnFreVRDVDFXS3BDYVBiOWxmeVd4OHNjQjY1VlRTY1hVKzAreU9tbnRZN1pGUk9mZ0VnLzZSTmdjcnYzCmkxZHoxeXNmNHNjRzk5bHY0QTk2T3ZlelhpUFRyTFBVTk1lOTByL1k2RTRqVko2NGhGM3g3UzlZMlZ1VjZSWlIKcjUzNjlxa0NnWUVBL2g0YjJ1RndaanQrNG91dERLaWRualh3ZFRaNDRubks3Qm1RREtObFFneTFTWDZXNEJodgp4UGdqMTk0RkNLTE03SWN3TlVMVTNCekVPMVZpL1dCaXhGR3lCL2hHN0U1aDI3Tm5KZXkvRU1RSzBObE9NZXQ5CkVDUEZ3SzAwRlJCaGpwbEFaSXRVT1lNUHhHZzZRdG1JU0pESTMvcGcxdUg3RFdteFl4aW1VNzBDZ1lFQS85M0wKR3RBbU9EeWpKS0wzNlpQeFovV3g1MUZTRmtnVS9yWDZMRklIbEdUYytsVEpmaVZrYktraVBBcUNIZERMWDhtTQoyRFhLb2lhTDhOS01ScHBWTUV5cmVCYW9TMXJMT2JpNEoxanpTZjhNOWcwWmtKMUNPYVVpeFJvVWZRMFRFMy9ICmtEaERlZ2NOSlFiRVJsN1RGTFozd1orSEFwb0lrWmVLS3RzbjUzc0NnWUVBcm94UDVkRGtPOVN5R3pxRjZ5UUcKNEIxOHhZWmRFbk5HQjFhbnM0YW9qdTNidUZmVG1xb3VXOFYyR1ZqUGJGY25HM0RnbERVTHNRV3haSEFLUnJCbQpKeU5XZmxMenBHMVNtbTVvYzR4aTBVbFhoSTAvUU5yWVZMVzlwOU5RNndjTmU3MllsWGQrcXVKemVoMTlwMTEwClZ5UGNWcnpNdDgwUmZPMFVnMVR6S3FFQ2dZQmdOY01BY3hKY0JSa0hWcXhIelZSeDFlWXVaOXFvL0RQQXp5YWgKOGJwZDUwdGNhZk5XRnJOYlZJSEY5K0dUV29hT254ZngyTkE0QnF5S1FuRnl2dWVYZ016ZEhBL3VQZGE2L3FWbwpUajgxTE0xdjI5OG9ES254U1JINDhXU1EzUkMyUFU4S0FNNEduWTRveFJHYXNGOUlvNUFHWTNqOTFuT3dZejRWCi9WQlU3d0tCZ1FDc2hWZWhobGpjOWlqUDNxSUF1ajhhckFRRjNQb0lzM3hNaXFWRkUrNExQTGtHcWhHeEI3VDgKdU4za0xRTVBCWnA2R0dGS1JSakNXTjlBckp3ZFJqN3RHSnh2ZzBsc2tkNWZ6MmFuNVF4QzVGSkxNOStjTE9PdAo2elhMa1VqMUNMYWIwMUpkTkg4cmdadGU4cGpzRFl1SWFxYVF3QTNReDNacFF1TDU5VHI1MHc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUpLUmRJOHpCZVpUWkFBTUFIUHhucHN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeE9UQTROVFF5TmxvWERUSTJNVEV4T0RBNApOVFF5Tmxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEvZnduV1pCSFg4bEwvSDUyMlVJV0F1OXYwaEVBMHhyNEVqZlZBOUFraTUwM05zWmkKQlJlQ0VjNlRsT3JNYjdNbXNCRTAybHU5YnV4eEg1THgvaENZRUpnRDh0TVhRTTl2VENRMkMwYVdZdDE3bTEwLwo0VklDSGZraFdyc0E3THBudk1JdlNvWWF0MXllWUhDU1Ezek5JNms2cDB2VzhZMkNkV1NmaHg5WHhkNEt6c2grCktHWS9FclRaVTRkalpjS0JnaStWeTl0Tm5ZbkZzaFpQd3h1eVFNelVCMnhITWVHRVFmaEdpL2VpVlBXMXEwZ0wKV1QxVFF3dGFCMjVpMWRkK2hrK3pjdkFZOTZXUldDZ1NIdEMzWnBwZjhheHpBWTRVakNDWWJXT3pqbVJyQitYaQpjWG9BWU8zQzRVZ0d0RDNGL1c3Y3ZiUk5KNURDOEUvV1hrVEd6d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTlFkL3Zua2dEY2ZCdk1XcUcwRWRuZUlGbnpYTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWhXb0hYajllbjUyR29Zeko2Y29CRFUyeEVlb201cFh2cG5nNENic3JSeVMvN0JsVXJmcVNSCjBhc29NMFF0ZUtOTDF6MWxNZGV3MzZiNStwVEJRUm1iL29iM3hvKzB3K0Y4WllYcThuL0VteVBXcmdYVWZRWUYKN05KQUFIZk92WXoxQUFLR2lkZFg2ZlpRSmxPSVFpQU5YZktlM2pNSlZ3OG9UNTZvMEcvbkpWempUbUNPckZ4UwpDaFA5MVJDczhhOFg4Z1lEQmQ5QjNSNnlZVFZSUk90bGtyNjRjMkwxSnRGZ3NCdTZEWXNHTklpMFNnUDhxcERLClpWeXBTQ0VSUURCTWdJa2VqcTVNbFk1NkxWME43UkZWb3gzUDFJL3d0eDA4ZTZJSFlQdHkySERBZitnSGpPVEsKT1lpNnAyYWlYaUd5U3ZaaXpjampEVHR1dVRRbGpGVTAKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU41R2pGZlNyeDBWcEpocm9mQ2t4K2d3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeE9UQTROVFF5TjFvWERUSTJNVEV4T0RBNApOVFF5TjFvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXRWV3REa0IrMExSWWxSUzRsZFdEUVZGZ0NHQTgKQjM0amY4cHRqVCtsWjh0UGdDWlhPOFZJNG12U3VYeDZJV0xEdFU2cVJ5T0NEbkdYcXo3WldZVFNXNzhrczU5OAppME92YzB1ekxBT0pTTEU4ZnpJTWwzN3VqOEE4aUp3V2UvZENFT2hOUXliS0l2UUQ4TnlhS21iVnY5WmpXRTlsCkRCY2FwS3paYlFDa3loU3F6M1Z2dEtmTjZwRUpDbm5wcnFkYVJpalFtYi9iQjlOL3phUnFpKytsTW82L2ZVY2UKM2I5SEF2NWkzMjRWUUtvZGV2aGNXZFpKOU5CY1kyTkVCc1FRN0NqUm10WTE0Tk5qbmtaN0Ixbm5uUWROcTFwTgpWc25vcWlHMWx3ZFFQTGRmaXFwbzZqK2hDYjkwaDhkT2paWHlCbmp2QkVZU0dGbVlSc0UrQWdVQzF3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVFVIZjc1NUlBM0h3YnpGcWh0QkhaMwppQlo4MXpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBRFJiTkNFVFJWWFJCeFIwU05KYkxZMm1HUWhxMFVMNm84eUprR3k1bDcreGJaWGkKeUlxeXNYS2JqTVkyUlo1ZVFMUjdTZ1gyK1hmOElpSnJMdjZXaEhwMzVhdzRPczFCSmYzbkQ1WmdCRkk3S3hteQo5Q3BBdTdwcUFEa1JZaXM5THE4M1AwdmFKQlBhcXpKVlJGZ0xFQTIrU244SXpzd1lnTDUxSUUrU0lXS3c4dCtWCmhpMDZoaGNiU3VOcUtYazJVUmJmZzBZVWZFc2cybXhBNlhTMUYzK2FnUE5UZTUvNURvMWNjK1ZjbWQxK21aYXUKTjg4WmpPMUFPZ0JVZVVyeWVnam9TMFVQSmZuRWVjeXBldGFEZy9iNHFsMGFNQjdWWFk5VWNBaG1mMDhSbDhyYwpIbkRSUzQ5QTcydVl6WFFnR0c2UzBkRmNKM1MrTEVzbUR4K3hsdGs9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdFZXdERrQiswTFJZbFJTNGxkV0RRVkZnQ0dBOEIzNGpmOHB0alQrbFo4dFBnQ1pYCk84Vkk0bXZTdVh4NklXTER0VTZxUnlPQ0RuR1hxejdaV1lUU1c3OGtzNTk4aTBPdmMwdXpMQU9KU0xFOGZ6SU0KbDM3dWo4QThpSndXZS9kQ0VPaE5ReWJLSXZRRDhOeWFLbWJWdjlaaldFOWxEQmNhcEt6WmJRQ2t5aFNxejNWdgp0S2ZONnBFSkNubnBycWRhUmlqUW1iL2JCOU4vemFScWkrK2xNbzYvZlVjZTNiOUhBdjVpMzI0VlFLb2RldmhjCldkWko5TkJjWTJORUJzUVE3Q2pSbXRZMTROTmpua1o3QjFubm5RZE5xMXBOVnNub3FpRzFsd2RRUExkZmlxcG8KNmoraENiOTBoOGRPalpYeUJuanZCRVlTR0ZtWVJzRStBZ1VDMXdJREFRQUJBb0lCQVFDRDY2YVFuYjhrbW05dgpWYm5MMTU4N243WGJvaGRKNUN4elJaTlpsUm9DWHRpaGhFTW1TcXB4ZnJ1NUVhUFFNZ2ZyR1NXcngxdFFvcmNTCmNCQ3puWHRrSDdUVnNJdHN6WHNReDl1N2czOFdrVXBQeHR0K1Eydk96SzI5UE1EbXdzVWZnOERodjVDQ3lUOHMKdFhDNnRFR0E1TGsxZjkwbFpKR1BoK2hOOG8vd0tzdGt4OEp5V1BrOFFpcHpFMlE2YzFjQmFKOHNIT1hmZHpoKwp0aE9MOW9uWmZDYVVpRExnbCtlTnNRbkx3Z211Q3dwTlVJTysrai81RDYxUGl0TmljQk93dnhpbi9FRlJHTnhYClFGU2xlc2d5K3hKaWJ5bzBIQ1NwWWo5Y3pTUzRCeVlZNG9lZ25ZeUY1V3cyUWIvNWI5OFYxOTh2YkorU1BzV1EKVzFBVGlTalJBb0dCQU5OeE92ZzFRanBJcjNjbWxpNEhabHpJbmh3emJBcCtRa2lNZ25vajJsa2NBaGd3NVpjUApzNDh1R3ZMd2QvTGdrZk5lUjMzTm82bVJkM3l5Z09RbnpMUGE4RnJmSlNya1VzUk5BRlFIQWZ4WkdHc3FrTVp1CkRXRTlTWkM5bmdHT2x2QjlXVnhMK1I1dUxZYUpYYmNyU3l6Y2xXNUJZaU1SbGpQczJ1cnFoZnpUQW9HQkFOdU0KTjFCU2dGbTd2ajhaVGdTSnE4b2Zoc1Z0WjJGdXlpOVVZazQxZmlFazFQZTB4SXRsNkltTXlSdlMyVEpNNlVSSAp4K3R0RTdjbHA3bmlXSlRJMWpEbEFVMWlJdms5SGNQTDE0NFNqSEdZMjlaMDkyQzU1ekNTdEVCTmNMcjVSdUN3ClZtZTRJMzd5NHdHZGVYREFIZkdxbGtFQ1ptelRZRytUNm8ybE9BOXRBb0dBSUpocEJkQjRDRElpVXBUeE8rRksKSjIySjZrRUhHOHNBL3R3aVZSL256aXJpSzhhRjdqYXVjSmtqOEdXZnFDSjBmWGNBUUdXT0lGcmJkNjZ3N2Zzdwp0RjFCQmxFMkVwbW1KTHJXSFI0RGNWcHV5RDZFbVFKb0w2QmFFZVVaVVpZZ3NLd3lOV2RFM1NzUSs1ZDdpZnd6Cmw1UGR1V1I4ODNrSGxiT2l2K290ZzU4Q2dZQkFQaHBkZFphN0t6V3pMd3RtUm9hdlFXUmxWdXNlVnBYeEhZY2EKallxWDFqZy9OM1VmdVRVL01xUVNjVE0vQmNSb1IzelhoZlp6N0IvVlE4ZFoyaDdhOWRmWXRmTzM3TXRONU5MeApicm9MNzRlOGpFTnEyVnN1R20rR05XTGNRMThiRmw1aVFUNlp3aWJzN1JDQkRxWjBkYzg3dktFT0RSZzE3aGwvClV5NUJUUUtCZ1FDaEk3azc0Y3RUMkRlcEUwaVJ6VkNXQ2NXUHo2UTJVM3VyYWRnYzZvNDh5eWcyeUFVL1BKaW8KSVVTck95TFI2dzgxQSt3RmdJTEpYUWlxYTArRXJEWFVrK3N2bUhMUU1QQlVlYzdnWHE2bmJ3ZkNleUpWYWFnVwp1WVF1K3JPUW9XNnUzOGJKbzEzYkNUeTFrK0dNZ1Z2TlltZUVTK1ZFU0RMNnlKUEhpR1o5eFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUpLUmRJOHpCZVpUWkFBTUFIUHhucHN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeE9UQTROVFF5TmxvWERUSTJNVEV4T0RBNApOVFF5Tmxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEvZnduV1pCSFg4bEwvSDUyMlVJV0F1OXYwaEVBMHhyNEVqZlZBOUFraTUwM05zWmkKQlJlQ0VjNlRsT3JNYjdNbXNCRTAybHU5YnV4eEg1THgvaENZRUpnRDh0TVhRTTl2VENRMkMwYVdZdDE3bTEwLwo0VklDSGZraFdyc0E3THBudk1JdlNvWWF0MXllWUhDU1Ezek5JNms2cDB2VzhZMkNkV1NmaHg5WHhkNEt6c2grCktHWS9FclRaVTRkalpjS0JnaStWeTl0Tm5ZbkZzaFpQd3h1eVFNelVCMnhITWVHRVFmaEdpL2VpVlBXMXEwZ0wKV1QxVFF3dGFCMjVpMWRkK2hrK3pjdkFZOTZXUldDZ1NIdEMzWnBwZjhheHpBWTRVakNDWWJXT3pqbVJyQitYaQpjWG9BWU8zQzRVZ0d0RDNGL1c3Y3ZiUk5KNURDOEUvV1hrVEd6d0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTlFkL3Zua2dEY2ZCdk1XcUcwRWRuZUlGbnpYTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWhXb0hYajllbjUyR29Zeko2Y29CRFUyeEVlb201cFh2cG5nNENic3JSeVMvN0JsVXJmcVNSCjBhc29NMFF0ZUtOTDF6MWxNZGV3MzZiNStwVEJRUm1iL29iM3hvKzB3K0Y4WllYcThuL0VteVBXcmdYVWZRWUYKN05KQUFIZk92WXoxQUFLR2lkZFg2ZlpRSmxPSVFpQU5YZktlM2pNSlZ3OG9UNTZvMEcvbkpWempUbUNPckZ4UwpDaFA5MVJDczhhOFg4Z1lEQmQ5QjNSNnlZVFZSUk90bGtyNjRjMkwxSnRGZ3NCdTZEWXNHTklpMFNnUDhxcERLClpWeXBTQ0VSUURCTWdJa2VqcTVNbFk1NkxWME43UkZWb3gzUDFJL3d0eDA4ZTZJSFlQdHkySERBZitnSGpPVEsKT1lpNnAyYWlYaUd5U3ZaaXpjampEVHR1dVRRbGpGVTAKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZVENDQWttZ0F3SUJBZ0lSQUwxVHN0TWNqN0hlY1VPNVJNRjhhbFF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFeE9UQTROVFF5TmxvWERUSTJNVEV4T0RBNApOVFF5Tmxvd0x6RXRNQ3NHQTFVRUF3d2tLaTVvYjIxbExXTnNkWE4wWlhJdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEzWExYYnh5dzN6OTgKMTFjQjJSUy9ha3ZaVGR4U2tkMjEvQ2lKSHduY2FHNjJva3RIOGlHM0FGRUpFNStib0NZUHBEL1dZUFVqZDZXRQoyc2xLVFNiekUyL2dSb2xyRzhTcndLa1hYVndKc2FadnBJZmNEYnVxSVdUc3k2TCt0OVZWU2hrMDVlSU1Ld2s0ClRHQlkyQWc0RHpicjE3ZmFIMzJKSmtqRm92cVRTR0ZUMmJsYW5WKzhWL3prTVJHRTF3L1plZmVmdm5ySk83dXYKT01lbElwUFV5VFA1WEVLVzVmRTJDdDhhQzNUUTYwT3pmb29tZ3NuVmtvbktiYlNGdGNFZVBJMWxCTStQL1RPTgo2TEpLYmxlUTdGZzdKdVR2all2RzFEMEtpN2xwQjdjQ3hKcEtvNFl4WnE5cEN6UDZ3NExhdVFxbkx2WERkaGoxCkhqNllKdkFGWndJREFRQUJvNEdTTUlHUE1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlRVSGY3NQo1SUEzSHdiekZxaHRCSFozaUJaODF6QXZCZ05WSFJFRUtEQW1naVFxTG1odmJXVXRZMngxYzNSbGNpNW9kV0ppCmJHVXRaM0p3WXk1amFXeHBkVzB1YVc4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFOblFIR3QyK0hoeXZNSFAKRHl1K3lVK0t2cGcwbDdyT1YzZHZ0TU4vTHQzVzRsTEYrY3BHS0hqTFFLM3hVeDdMc3FJN3FDTW1QT21POWJJVAptSVBTdCtNMkFyenhvNFB3RjZXYndjMkhxeTlQWE05NkxFV3ZxZXl4WVZKZFZDeHdWenpZTWVhTCtpbTVvSHZ1CkNGMlp3L09FdmFKbkxDUTIrVW83QUZtc1VJbUdkcFJkZk5PbjJlNTNQMFg2RHJqNU1TQ1VTQ2tVVGw0RlVLY2YKVDlZMEJaWXRnRDRQUUcyTHIySGttMVBkTXVzeUVtcjViSnl3SHAweTlSNEw5cndURkhEaHd0SkNEV3B4TVB1bgo2eVdWa25UcXFJMHJ3MEFzN0hyRmYyeitHVGVLRGlaNzM2L2RDb3VtNUE3dlRucGZJOExnMzhObHh2NUFkb3NoCkV5R3JmTjA9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBM1hMWGJ4eXczejk4MTFjQjJSUy9ha3ZaVGR4U2tkMjEvQ2lKSHduY2FHNjJva3RICjhpRzNBRkVKRTUrYm9DWVBwRC9XWVBVamQ2V0Uyc2xLVFNiekUyL2dSb2xyRzhTcndLa1hYVndKc2FadnBJZmMKRGJ1cUlXVHN5NkwrdDlWVlNoazA1ZUlNS3drNFRHQlkyQWc0RHpicjE3ZmFIMzJKSmtqRm92cVRTR0ZUMmJsYQpuVis4Vi96a01SR0Uxdy9aZWZlZnZuckpPN3V2T01lbElwUFV5VFA1WEVLVzVmRTJDdDhhQzNUUTYwT3pmb29tCmdzblZrb25LYmJTRnRjRWVQSTFsQk0rUC9UT042TEpLYmxlUTdGZzdKdVR2all2RzFEMEtpN2xwQjdjQ3hKcEsKbzRZeFpxOXBDelA2dzRMYXVRcW5MdlhEZGhqMUhqNllKdkFGWndJREFRQUJBb0lCQVFDZElnc2FEYXEzanM0Zgo0dDR0MGhvTTYrc3k0MTQzb0xHc1Ruc1Y2aUphZkF6ZDFqc2o1YVo3OUFSVHgxSmZiZ0oxVXRMa2s2MXFEYW5hCnNUQW0xTGR3bUZiMDFqZUpTYUZ4b01veWRjZHZKaUZjQndjdk8zVjZJcW9meVBXakxoNUo2Tjd2Szlua2c3Tk8KQnFPa0R4andPdEZZalYyYU1MS3Ixc0ZlWngweElvUjU0TGx5TGtSYTgwL0UwZzA5T25KSW9kaWhWU0hIWTArZgp5cU5KTWlRc29XeXVxQjVaclJaaWtiZWkwV3hYVzlHajhCRklTa3pTTGExc2h1Ykd6bVU5VnJzdFh5czVqc1RPCkNoUDYyVFRJblRSSWszRlNVK3kzdUQ1VlYrWno4Q0hQMi9sSjBaNnkxUnJoa2d5ZEdSRUhXeUV3Wm1GQzI3R2sKK2NXc1Iyb3hBb0dCQU9UWUVxNFpYR3NVVGVjcXM2SnRMcHNtSFpMQUdmMHBpMWxLRFhKOHppenFzMU52dTl4RQpMV1VuWWo4M1BTMTZnTno3UVVuOTBpT0NVbkJQUTU3djg0aEF3ODhEOVFqUFNxN2NyZ0RYbmwwaXBQQStTOXlPClZWeFMvamVWRVZXZ09xQkZKNHRoSHUzVk1KRGREUnBVakc5ZHpBcDRQRGdlaGdaUlF6bCthWWsvQW9HQkFQZTYKRzFGb2VSRWZ5dXE1dHo5Q2ZqL1Y0cGsrZmF1ZHQvVVNOS3hTQ0duQWNvUFk3MXpvK0U1V3hJNTdmaG9Sd3BMZQpWQWtPL2VOYVNKVytINVhLTjVjZWVZamJWY0thSHpRdTR0M0tNeXNHWHd0WlRGbnVMYjFvTFA0MmxjYzZCYTV0CnUvZjA3UncwZDV0ZnBITmlPRi9UbXdGa1prbkpkN1BFUlVzSndwSFpBb0dBY2N1VWRtaDhFVzgyVWVabER6YjEKdndiVUc5NVV6aFB6akVJTHI4dXFCcUhxN0dtYVpDeXUyaWNjYnN6OEtmcEp6QmxRM1FkUGtJTEVsYjZFcEtzegpVYVRLK2MxQTh0R0psS3grQmtNeUo2UUxtcitQbjZ4VGZDWjA3WlM5MnZOalU4RXZxZHB3czltWVhlRGVIQ0xBCjlyd1FzNEFZaWR0N3ovWm0xRmN0Q2FjQ2dZQmx1ZWE5NTBqUDMxNVVSUzhhcXhOczQwZko1ZjkxR2E4UTFBa04KT2lKNlNxeTd0N21UVFplcGs3ZmpTcExkNGEwazRtZGYwT2d4RkVINk83aDhxaTFwd1BubldTbytYMHV4QWcvbgpROEQvU2Y1OWlvM3YzLzZvYUw4UkpSa2NWcGMrcVpFbW9VMDg1ODYxM3ZDSThTeDFMVS9ab29EZWkveTd0VDAvCk15TFRBUUtCZ1FEZ2ZILzE2YlVMMGV3UHJjYXlZeDJsUDMrQnNzeFFXZkRyREZPWXQyeG1memxaT0JGQk1QUWMKZUpaZUtLMDdtWVVPWHp6K2dobnd0ZHR3bXhtUFZHa2t1WG5tMmJIaStHTjJlellualFlTzByWE5Ram0yVXAvbAplZDBxQ0hkcmluMlhrcjVpakUrelJSYzBMV3BLbG1helhMV05uVDNCWDRtNXMwTmJmVmtVclE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
    - name: hubble-metrics
      port: 9965
      protocol: TCP
      targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
    - name: peer-service
      port: 443
      protocol: TCP
      targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ff3b9199d7b5e6bd7fb5d7f7a384bbd180fac7ffd759126297980faeca2a01ee
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  io.cilium/app: operator
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
        - args:
            - --config-dir=/tmp/cilium/config-map
            - --debug=$(CILIUM_DEBUG)
          command:
            - cilium-operator-generic
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_DEBUG
              valueFrom:
                configMapKeyRef:
                  key: debug
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: localhost
            - name: KUBERNETES_SERVICE_PORT
              value: "7445"
          image: quay.io/cilium/operator-generic:v1.14.4@sha256:f0f05e4ba3bb1fe0e4b91144fa4fea637701aba02e6c00b23bd03b4a7e1dfd55
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 9234
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 3
          name: cilium-operator
          readinessProbe:
            failureThreshold: 5
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 9234
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 5
            timeoutSeconds: 3
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /tmp/cilium/config-map
              name: cilium-config-path
              readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
        - operator: Exists
      volumes:
        - configMap:
            name: cilium-config
          name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 2377e902b05fcb5eab2f040823d96bf083593a39234638f79da89f0a3ba15121
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  k8s-app: cilium
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
        - args:
            - serve
          command:
            - hubble-relay
          image: quay.io/cilium/hubble-relay:v1.14.4@sha256:ca81622fd9f04c1316bf4144bde5dbce613758810f6022f6c706b14c9c0815db
          imagePullPolicy: IfNotPresent
          livenessProbe:
            tcpSocket:
              port: grpc
          name: hubble-relay
          ports:
            - containerPort: 4245
              name: grpc
          readinessProbe:
            tcpSocket:
              port: grpc
          securityContext:
            capabilities:
              drop:
                - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /etc/hubble-relay
              name: config
              readOnly: true
            - mountPath: /var/lib/hubble-relay/tls
              name: tls
              readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
        - configMap:
            items:
              - key: config.yaml
                path: config.yaml
            name: hubble-relay-config
          name: config
        - name: tls
          projected:
            defaultMode: 256
            sources:
              - secret:
                  items:
                    - key: tls.crt
                      path: client.crt
                    - key: tls.key
                      path: client.key
                    - key: ca.crt
                      path: hubble-server-ca.crt
                  name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
        - image: quay.io/cilium/hubble-ui:v0.12.2@sha256:978dacbe4bd1c9b815bc2257a1360a35d541e7fbb3e1f9b898c1823d9300a8f3
          imagePullPolicy: IfNotPresent
          name: frontend
          ports:
            - containerPort: 8081
              name: http
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /etc/nginx/conf.d/default.conf
              name: hubble-ui-nginx-conf
              subPath: nginx.conf
            - mountPath: /tmp
              name: tmp-dir
        - env:
            - name: EVENTS_SERVER_PORT
              value: "8090"
            - name: FLOWS_API_ADDR
              value: hubble-relay:80
          image: quay.io/cilium/hubble-ui-backend:v0.12.1@sha256:1f86f3400827a0451e6332262467f894eeb7caf0eb8779bd951e2caa9d027cbe
          imagePullPolicy: IfNotPresent
          name: backend
          ports:
            - containerPort: 8090
              name: grpc
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
        - configMap:
            defaultMode: 420
            name: hubble-ui-nginx
          name: hubble-ui-nginx-conf
        - emptyDir: {}
          name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: ff3b9199d7b5e6bd7fb5d7f7a384bbd180fac7ffd759126297980faeca2a01ee
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  k8s-app: cilium
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
        - args:
            - --config-dir=/tmp/cilium/config-map
          command:
            - cilium-agent
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_CLUSTERMESH_CONFIG
              value: /var/lib/cilium/clustermesh/
            - name: KUBERNETES_SERVICE_HOST
              value: localhost
            - name: KUBERNETES_SERVICE_PORT
              value: "7445"
          image: quay.io/cilium/cilium:v1.14.4@sha256:4981767b787c69126e190e33aee93d5a076639083c21f0e7c29596a519c64a2e
          imagePullPolicy: IfNotPresent
          lifecycle:
            postStart:
              exec:
                command:
                  - bash
                  - -c
                  - |
                    set -o errexit
                    set -o pipefail
                    set -o nounset

                    # When running in AWS ENI mode, it's likely that 'aws-node' has
                    # had a chance to install SNAT iptables rules. These can result
                    # in dropped traffic, so we should attempt to remove them.
                    # We do it using a 'postStart' hook since this may need to run
                    # for nodes which might have already been init'ed but may still
                    # have dangling rules. This is safe because there are no
                    # dependencies on anything that is part of the startup script
                    # itself, and can be safely run multiple times per node (e.g. in
                    # case of a restart).
                    if [[ "$(iptables-save | grep -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                    then
                        echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                        iptables-save | grep -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                    fi
                    echo 'Done!'
            preStop:
              exec:
                command:
                  - /cni-uninstall.sh
          livenessProbe:
            failureThreshold: 10
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: cilium-agent
          ports:
            - containerPort: 4244
              hostPort: 4244
              name: peer-service
              protocol: TCP
            - containerPort: 9965
              hostPort: 9965
              name: hubble-metrics
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          securityContext:
            capabilities:
              add:
                - CHOWN
                - KILL
                - NET_ADMIN
                - NET_RAW
                - IPC_LOCK
                - SYS_ADMIN
                - SYS_RESOURCE
                - DAC_OVERRIDE
                - FOWNER
                - SETGID
                - SETUID
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          startupProbe:
            failureThreshold: 105
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /host/proc/sys/net
              name: host-proc-sys-net
            - mountPath: /host/proc/sys/kernel
              name: host-proc-sys-kernel
            - mountPath: /sys/fs/bpf
              mountPropagation: HostToContainer
              name: bpf-maps
            - mountPath: /sys/fs/cgroup
              name: cilium-cgroup
            - mountPath: /var/run/cilium
              name: cilium-run
            - mountPath: /host/etc/cni/net.d
              name: etc-cni-netd
            - mountPath: /var/lib/cilium/clustermesh
              name: clustermesh-secrets
              readOnly: true
            - mountPath: /lib/modules
              name: lib-modules
              readOnly: true
            - mountPath: /run/xtables.lock
              name: xtables-lock
            - mountPath: /var/lib/cilium/tls/hubble
              name: hubble-tls
              readOnly: true
            - mountPath: /tmp
              name: tmp
      hostNetwork: true
      initContainers:
        - command:
            - cilium
            - build-config
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: KUBERNETES_SERVICE_HOST
              value: localhost
            - name: KUBERNETES_SERVICE_PORT
              value: "7445"
          image: quay.io/cilium/cilium:v1.14.4@sha256:4981767b787c69126e190e33aee93d5a076639083c21f0e7c29596a519c64a2e
          imagePullPolicy: IfNotPresent
          name: config
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /tmp
              name: tmp
        - args:
            - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
          command:
            - /bin/bash
            - -c
            - --
          image: quay.io/cilium/cilium:v1.14.4@sha256:4981767b787c69126e190e33aee93d5a076639083c21f0e7c29596a519c64a2e
          imagePullPolicy: IfNotPresent
          name: mount-bpf-fs
          securityContext:
            privileged: true
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /sys/fs/bpf
              mountPropagation: Bidirectional
              name: bpf-maps
        - command:
            - /init-container.sh
          env:
            - name: CILIUM_ALL_STATE
              valueFrom:
                configMapKeyRef:
                  key: clean-cilium-state
                  name: cilium-config
                  optional: true
            - name: CILIUM_BPF_STATE
              valueFrom:
                configMapKeyRef:
                  key: clean-cilium-bpf-state
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: localhost
            - name: KUBERNETES_SERVICE_PORT
              value: "7445"
          image: quay.io/cilium/cilium:v1.14.4@sha256:4981767b787c69126e190e33aee93d5a076639083c21f0e7c29596a519c64a2e
          imagePullPolicy: IfNotPresent
          name: clean-cilium-state
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
                - SYS_ADMIN
                - SYS_RESOURCE
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /sys/fs/bpf
              name: bpf-maps
            - mountPath: /sys/fs/cgroup
              mountPropagation: HostToContainer
              name: cilium-cgroup
            - mountPath: /var/run/cilium
              name: cilium-run
        - command:
            - /install-plugin.sh
          image: quay.io/cilium/cilium:v1.14.4@sha256:4981767b787c69126e190e33aee93d5a076639083c21f0e7c29596a519c64a2e
          imagePullPolicy: IfNotPresent
          name: install-cni-binaries
          resources:
            requests:
              cpu: 100m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /host/opt/cni/bin
              name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
        - operator: Exists
      volumes:
        - emptyDir: {}
          name: tmp
        - hostPath:
            path: /var/run/cilium
            type: DirectoryOrCreate
          name: cilium-run
        - hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
          name: bpf-maps
        - hostPath:
            path: /sys/fs/cgroup
            type: DirectoryOrCreate
          name: cilium-cgroup
        - hostPath:
            path: /opt/cni/bin
            type: DirectoryOrCreate
          name: cni-path
        - hostPath:
            path: /etc/cni/net.d
            type: DirectoryOrCreate
          name: etc-cni-netd
        - hostPath:
            path: /lib/modules
          name: lib-modules
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - name: clustermesh-secrets
          projected:
            defaultMode: 256
            sources:
              - secret:
                  name: cilium-clustermesh
                  optional: true
              - secret:
                  items:
                    - key: tls.key
                      path: common-etcd-client.key
                    - key: tls.crt
                      path: common-etcd-client.crt
                    - key: ca.crt
                      path: common-etcd-client-ca.crt
                  name: clustermesh-apiserver-remote-cert
                  optional: true
        - hostPath:
            path: /proc/sys/net
            type: Directory
          name: host-proc-sys-net
        - hostPath:
            path: /proc/sys/kernel
            type: Directory
          name: host-proc-sys-kernel
        - name: hubble-tls
          projected:
            defaultMode: 256
            sources:
              - secret:
                  items:
                    - key: tls.crt
                      path: server.crt
                    - key: tls.key
                      path: server.key
                    - key: ca.crt
                      path: client-ca.crt
                  name: hubble-server-certs
                  optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
