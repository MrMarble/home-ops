# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: dsr
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: home-cluster
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "false"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bandwidth-manager: "true"
  enable-bbr: "true"
  enable-bgp-control-plane: "true"
  enable-bpf-clock-probe: "true"
  enable-bpf-masquerade: "true"
  enable-bpf-tproxy: "true"
  enable-endpoint-health-checking: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  endpoint-status: policy
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA drop tcp flow port-distribution icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 10.244.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: home-cluster\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVBpQVIzdXZSSnAzQnRoeGJrdXFhbk13RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURjeE56QTVOREV3TmxvWERUSTJNRGN4TmpBNQpOREV3Tmxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE4aHkxRXJRc3hvNXBlaEM0SktiMEV5TjZobWxUczk4VXdha052WVowbndTa2NTK0gKK0dodXNMK1dicldFcjNHeUdGL0psWmprVTJKTlpVZXJmTlNuWUVvaEo0ZEJvdUNLZVlDN25aU29XTkVDOEI2agpkV2YvYlJ1Uk9HYyswRlVnYWJTNGNtNkQzcktzcjI4NDd5cHVCZWtGcnhtd29nYVM0QUQ1WjV5K1BONmQ0Y1NMCk93b0hEc1I0bmtjUnNMSUVpQUQ1ZEV1a3M5Q0FEYjE3UUVQVE0wRTErV280cyt2aGt6THRIdkZIcXp0Y29wUjgKYVAyLzh1UWZUWUduWnRWZzRuZnMvZEg5cDdwOUdsKzA5VU9teFN3QnlhS296Z2xsakxPVmRqUm5TZmlVbUp4agpHQXIwM243L2JvVTN5Tmhxa0V6anIrNlUvRHBackZTVThZMEtLd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTWJRV3lHZ0wya0lWd1JEd1lWM1RGNERTZ2dYTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQXZkYzVMUTQyZFRvZ3JRK1pNMXRTbkRGQkRFc0RVWXlwSHVhYWhGV2dreHdpVVFyMGlpMzIzClRkWUNJemVjSEs2RlpTSTRqc0hRWFF3RDZSNG9tM3BGTjRZdWZYYXZqRHgyRmdpbkNzY1RaV3RhM0xCRTZwVkgKNDZ1QnJFTWQzUStIQ2xGSFBKVjVva2dVWjBBQ3JLUHJhQlZIM2FOOVlzTkxYZVpJR3VSS2s2NU5GSzQrSW8zRwoyV0RUVS9ld2U4ckNiZVZIZDI1WWMrSTNzVjFNbGtSNTJIZkt4Mm1JUFdQckVoK0lra3Z4aHh3dUw1T0JVbVF4CkxxVXhMc3FobCtkcFJyM1l4eXU0dndFMElKL2VoOEpNVjdxTUlZN1pmRmdmaXhIL0pFRFB2WmhVOTVjTlhyazEKbmNnYytkc2NKU2NtSjEwWmpWTVJkZ0YxTUdzSjhCN1UKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBOGh5MUVyUXN4bzVwZWhDNEpLYjBFeU42aG1sVHM5OFV3YWtOdllaMG53U2tjUytICitHaHVzTCtXYnJXRXIzR3lHRi9KbFpqa1UySk5aVWVyZk5TbllFb2hKNGRCb3VDS2VZQzduWlNvV05FQzhCNmoKZFdmL2JSdVJPR2MrMEZVZ2FiUzRjbTZEM3JLc3IyODQ3eXB1QmVrRnJ4bXdvZ2FTNEFENVo1eStQTjZkNGNTTApPd29IRHNSNG5rY1JzTElFaUFENWRFdWtzOUNBRGIxN1FFUFRNMEUxK1dvNHMrdmhrekx0SHZGSHF6dGNvcFI4CmFQMi84dVFmVFlHblp0Vmc0bmZzL2RIOXA3cDlHbCswOVVPbXhTd0J5YUtvemdsbGpMT1ZkalJuU2ZpVW1KeGoKR0FyMDNuNy9ib1UzeU5ocWtFempyKzZVL0RwWnJGU1U4WTBLS3dJREFRQUJBb0lCQVFDbWxoUU04NFhmZEx1awpibjZWVVg2YzhJdHNrbW95V0NzcStRdm9QT3hmUWMxM3g1R1IzU0ZVWWU2NjdCQ0l1djBrZ2p2c3Y4OVNoRS9tCmdRTEFtSDAxNXF1YlRCaGdYb2xKQXNlVXJHV00vdnM3aG9sSHppL1V2ZVFVNEEwN1FXZFU5REQ1STR0K25vZnQKQ2VVdHdvOERhQXN1S01uOUlmTExTRUJUQjJscDdSZ2I5WUxjNGtqOXQ2NUMwRTNvUmJ2VzYyUVYwVVpmbTluUgo0aHR4SkdXcVpOaU1YVUd6YU1ZY0RrcVl0aUx6dThUcVRqRFJ3cno5UVlZVUQxMURyRjRzeTZZOGpjdk43aU5sCkhZVXp5REJqUGVhQk9KZzh6MlIzRGJRdnNKSy9WU0JqZVhkS0pVNHJ5UXExcjFsMzhWdW1NckxVYk9jbTJ6Z0gKWFVrNTNBTXhBb0dCQVA2RHpQUStleXZ4SkNQcWJCN0JraVVhWlgzVXdRRzNydExTS0pZeVRaUXNrNEhXUEVLUQpxZ09iVXZxN2VkVjlFV1laRHAxOHQycHY0SE40T2hRbnIwUmpjdHJnNnZQQVFZSlhaRUsrVStjMzFwOTBDcktnCkNBb1NjcithZGxxNG93Z0RjV2dEM2RhYkVBbko0czZQUVdKZWFhN29vbkFwdkc5S2lUc0I4Q2U1QW9HQkFQT0cKWVJuS3FwVjM1bzZ5bEpPV3NZZnFzTm9JZTFNRVlvWS96TmRka1dHWjVVaUpmbzNUMnBpOTh0Qmg0bGxKWjQwQwpnaG0zUWg5ODdPNnNNbm9lanZQRWIzWGgwSUVIamZSc3JFSm1YZTlwNnZTMnBONXZmOE5wa3FSUHhJMTVSK0ZSCkJwdkxybWI4dllMMGFrZTJCMDVHdFppQ0pyU1VucjlJalVwODFLc0RBb0dCQUtHREdHd2l2bDFiVUxqdUNhRFcKN0J4WmpQQjJNK2tZSEh3eTI0aTg4VmhIbFcvK2VRMHc2b01SYlc0cHpKMzdHVEIyVkQwQ3FRNkZZcVZFTlc4Vwo0L1Y5T3FURnVMUG9YR29QZFZPWm5uc0xoMHAzQkZib2tWRjY5WkM3djhIQWk4MEpDazJjcm9tQ3E0SGF1UENtCkhqTURnUU43STZJVUNqMkJ5bVpFeTVjWkFvR0FSaDhnb0tPWjRQWW9mbGh2cmR2TGZONllVLy96T3VGZFdWalAKckFmMlQ4dFhtVDUySVhLcVZDY0YzdmtBaTBNMnZRVEczNDdFVEhyVllwaFU1Sk1lQ0pVOG53NEowczJSRTV1agpNbTkxaHZYUndPdENxQVlsSE9pdVgvL1VFZ1NsTFB6KzBTZWlMV2VEVGswQXVXdHh5UmxWT3ZmbkcwSmNQNm90CmZSQmEwRzhDZ1lBcVU5aC83ZlRsNng2ZERsdkEyaXIyc05BVkJyeHdrMFVTUWNNS2RJbG9DSWYxOUpGY3lHdFIKa2I4eWFzbDdJZ0J3Z25sQjk1WklIMkhUR2ZpVitOaVFNU1RjalgxdVRvRGNldkY0azdMUDVTc2NjYkUvVFFMaAowd0R4UldxRlFvYVdhZDlrQitBNWVodExEOGljZklIcHRTWVV0RUxteVY5NDBLZTZaOWZIbVE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVBpQVIzdXZSSnAzQnRoeGJrdXFhbk13RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURjeE56QTVOREV3TmxvWERUSTJNRGN4TmpBNQpOREV3Tmxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE4aHkxRXJRc3hvNXBlaEM0SktiMEV5TjZobWxUczk4VXdha052WVowbndTa2NTK0gKK0dodXNMK1dicldFcjNHeUdGL0psWmprVTJKTlpVZXJmTlNuWUVvaEo0ZEJvdUNLZVlDN25aU29XTkVDOEI2agpkV2YvYlJ1Uk9HYyswRlVnYWJTNGNtNkQzcktzcjI4NDd5cHVCZWtGcnhtd29nYVM0QUQ1WjV5K1BONmQ0Y1NMCk93b0hEc1I0bmtjUnNMSUVpQUQ1ZEV1a3M5Q0FEYjE3UUVQVE0wRTErV280cyt2aGt6THRIdkZIcXp0Y29wUjgKYVAyLzh1UWZUWUduWnRWZzRuZnMvZEg5cDdwOUdsKzA5VU9teFN3QnlhS296Z2xsakxPVmRqUm5TZmlVbUp4agpHQXIwM243L2JvVTN5Tmhxa0V6anIrNlUvRHBackZTVThZMEtLd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTWJRV3lHZ0wya0lWd1JEd1lWM1RGNERTZ2dYTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQXZkYzVMUTQyZFRvZ3JRK1pNMXRTbkRGQkRFc0RVWXlwSHVhYWhGV2dreHdpVVFyMGlpMzIzClRkWUNJemVjSEs2RlpTSTRqc0hRWFF3RDZSNG9tM3BGTjRZdWZYYXZqRHgyRmdpbkNzY1RaV3RhM0xCRTZwVkgKNDZ1QnJFTWQzUStIQ2xGSFBKVjVva2dVWjBBQ3JLUHJhQlZIM2FOOVlzTkxYZVpJR3VSS2s2NU5GSzQrSW8zRwoyV0RUVS9ld2U4ckNiZVZIZDI1WWMrSTNzVjFNbGtSNTJIZkt4Mm1JUFdQckVoK0lra3Z4aHh3dUw1T0JVbVF4CkxxVXhMc3FobCtkcFJyM1l4eXU0dndFMElKL2VoOEpNVjdxTUlZN1pmRmdmaXhIL0pFRFB2WmhVOTVjTlhyazEKbmNnYytkc2NKU2NtSjEwWmpWTVJkZ0YxTUdzSjhCN1UKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBOGh5MUVyUXN4bzVwZWhDNEpLYjBFeU42aG1sVHM5OFV3YWtOdllaMG53U2tjUytICitHaHVzTCtXYnJXRXIzR3lHRi9KbFpqa1UySk5aVWVyZk5TbllFb2hKNGRCb3VDS2VZQzduWlNvV05FQzhCNmoKZFdmL2JSdVJPR2MrMEZVZ2FiUzRjbTZEM3JLc3IyODQ3eXB1QmVrRnJ4bXdvZ2FTNEFENVo1eStQTjZkNGNTTApPd29IRHNSNG5rY1JzTElFaUFENWRFdWtzOUNBRGIxN1FFUFRNMEUxK1dvNHMrdmhrekx0SHZGSHF6dGNvcFI4CmFQMi84dVFmVFlHblp0Vmc0bmZzL2RIOXA3cDlHbCswOVVPbXhTd0J5YUtvemdsbGpMT1ZkalJuU2ZpVW1KeGoKR0FyMDNuNy9ib1UzeU5ocWtFempyKzZVL0RwWnJGU1U4WTBLS3dJREFRQUJBb0lCQVFDbWxoUU04NFhmZEx1awpibjZWVVg2YzhJdHNrbW95V0NzcStRdm9QT3hmUWMxM3g1R1IzU0ZVWWU2NjdCQ0l1djBrZ2p2c3Y4OVNoRS9tCmdRTEFtSDAxNXF1YlRCaGdYb2xKQXNlVXJHV00vdnM3aG9sSHppL1V2ZVFVNEEwN1FXZFU5REQ1STR0K25vZnQKQ2VVdHdvOERhQXN1S01uOUlmTExTRUJUQjJscDdSZ2I5WUxjNGtqOXQ2NUMwRTNvUmJ2VzYyUVYwVVpmbTluUgo0aHR4SkdXcVpOaU1YVUd6YU1ZY0RrcVl0aUx6dThUcVRqRFJ3cno5UVlZVUQxMURyRjRzeTZZOGpjdk43aU5sCkhZVXp5REJqUGVhQk9KZzh6MlIzRGJRdnNKSy9WU0JqZVhkS0pVNHJ5UXExcjFsMzhWdW1NckxVYk9jbTJ6Z0gKWFVrNTNBTXhBb0dCQVA2RHpQUStleXZ4SkNQcWJCN0JraVVhWlgzVXdRRzNydExTS0pZeVRaUXNrNEhXUEVLUQpxZ09iVXZxN2VkVjlFV1laRHAxOHQycHY0SE40T2hRbnIwUmpjdHJnNnZQQVFZSlhaRUsrVStjMzFwOTBDcktnCkNBb1NjcithZGxxNG93Z0RjV2dEM2RhYkVBbko0czZQUVdKZWFhN29vbkFwdkc5S2lUc0I4Q2U1QW9HQkFQT0cKWVJuS3FwVjM1bzZ5bEpPV3NZZnFzTm9JZTFNRVlvWS96TmRka1dHWjVVaUpmbzNUMnBpOTh0Qmg0bGxKWjQwQwpnaG0zUWg5ODdPNnNNbm9lanZQRWIzWGgwSUVIamZSc3JFSm1YZTlwNnZTMnBONXZmOE5wa3FSUHhJMTVSK0ZSCkJwdkxybWI4dllMMGFrZTJCMDVHdFppQ0pyU1VucjlJalVwODFLc0RBb0dCQUtHREdHd2l2bDFiVUxqdUNhRFcKN0J4WmpQQjJNK2tZSEh3eTI0aTg4VmhIbFcvK2VRMHc2b01SYlc0cHpKMzdHVEIyVkQwQ3FRNkZZcVZFTlc4Vwo0L1Y5T3FURnVMUG9YR29QZFZPWm5uc0xoMHAzQkZib2tWRjY5WkM3djhIQWk4MEpDazJjcm9tQ3E0SGF1UENtCkhqTURnUU43STZJVUNqMkJ5bVpFeTVjWkFvR0FSaDhnb0tPWjRQWW9mbGh2cmR2TGZONllVLy96T3VGZFdWalAKckFmMlQ4dFhtVDUySVhLcVZDY0YzdmtBaTBNMnZRVEczNDdFVEhyVllwaFU1Sk1lQ0pVOG53NEowczJSRTV1agpNbTkxaHZYUndPdENxQVlsSE9pdVgvL1VFZ1NsTFB6KzBTZWlMV2VEVGswQXVXdHh5UmxWT3ZmbkcwSmNQNm90CmZSQmEwRzhDZ1lBcVU5aC83ZlRsNng2ZERsdkEyaXIyc05BVkJyeHdrMFVTUWNNS2RJbG9DSWYxOUpGY3lHdFIKa2I4eWFzbDdJZ0J3Z25sQjk1WklIMkhUR2ZpVitOaVFNU1RjalgxdVRvRGNldkY0azdMUDVTc2NjYkUvVFFMaAowd0R4UldxRlFvYVdhZDlrQitBNWVodExEOGljZklIcHRTWVV0RUxteVY5NDBLZTZaOWZIbVE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVBpQVIzdXZSSnAzQnRoeGJrdXFhbk13RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURjeE56QTVOREV3TmxvWERUSTJNRGN4TmpBNQpOREV3Tmxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE4aHkxRXJRc3hvNXBlaEM0SktiMEV5TjZobWxUczk4VXdha052WVowbndTa2NTK0gKK0dodXNMK1dicldFcjNHeUdGL0psWmprVTJKTlpVZXJmTlNuWUVvaEo0ZEJvdUNLZVlDN25aU29XTkVDOEI2agpkV2YvYlJ1Uk9HYyswRlVnYWJTNGNtNkQzcktzcjI4NDd5cHVCZWtGcnhtd29nYVM0QUQ1WjV5K1BONmQ0Y1NMCk93b0hEc1I0bmtjUnNMSUVpQUQ1ZEV1a3M5Q0FEYjE3UUVQVE0wRTErV280cyt2aGt6THRIdkZIcXp0Y29wUjgKYVAyLzh1UWZUWUduWnRWZzRuZnMvZEg5cDdwOUdsKzA5VU9teFN3QnlhS296Z2xsakxPVmRqUm5TZmlVbUp4agpHQXIwM243L2JvVTN5Tmhxa0V6anIrNlUvRHBackZTVThZMEtLd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTWJRV3lHZ0wya0lWd1JEd1lWM1RGNERTZ2dYTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQXZkYzVMUTQyZFRvZ3JRK1pNMXRTbkRGQkRFc0RVWXlwSHVhYWhGV2dreHdpVVFyMGlpMzIzClRkWUNJemVjSEs2RlpTSTRqc0hRWFF3RDZSNG9tM3BGTjRZdWZYYXZqRHgyRmdpbkNzY1RaV3RhM0xCRTZwVkgKNDZ1QnJFTWQzUStIQ2xGSFBKVjVva2dVWjBBQ3JLUHJhQlZIM2FOOVlzTkxYZVpJR3VSS2s2NU5GSzQrSW8zRwoyV0RUVS9ld2U4ckNiZVZIZDI1WWMrSTNzVjFNbGtSNTJIZkt4Mm1JUFdQckVoK0lra3Z4aHh3dUw1T0JVbVF4CkxxVXhMc3FobCtkcFJyM1l4eXU0dndFMElKL2VoOEpNVjdxTUlZN1pmRmdmaXhIL0pFRFB2WmhVOTVjTlhyazEKbmNnYytkc2NKU2NtSjEwWmpWTVJkZ0YxTUdzSjhCN1UKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUtxTXExcHlIZ1l3WUhGWXFrbjl5M2d3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURjeE56QTVOREV3TmxvWERUSTJNRGN4TmpBNQpOREV3Tmxvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXk3UmlMTFYzUjkxRFJycFB4aWJORVVDSmtyc1EKTE5HNVFVeldwK0dzdEV6aFhIZlM1ZnBPZnk2Zis4OVo2MGpFa3FkcnNpcWprQVNRdGg0TjA3VEp6UURJOHZoaQpEb2hncVhmd1dLK0daZHdqbW1WR0hycCtTWm4wbTRTODdoL1EvWm9yck8relJhbWhIN2o1TVE5VmtzNG11eXh3CjgvM2xJdzlFK3FseGlOYzFnR0NPelRmc0NsSjV4UHVLaVlVSWdNZzd0Z1EzRy8yeU4rQ2tFL1FPaUZyZzFDRk8KaWNjSloxT0l4MFFMZGY5NHErdkJwMno2U3JwWmtVSUJ2YUJFRCtjQkYrMCtwbVJuQUp1QkR5ZkF2cHpCZERocQpBWVRsZ29XU1kvQ1UwV04wV1VBcnBCQ1pDZHhpWSthaHNmTkRITkpYM1BDck9IYWtYek16YnRQT0l3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVEcwRnNob0M5cENGY0VROEdGZDB4ZQpBMG9JRnpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBRWVQYTRkM2tBMThUUTVGNWplb0gvYWg3d0FTR0Z2SVppZCs2RStvWmNvTEQ4L3AKc3ZQa1lnMmw5MGhobXZHVmRsVVhiNVlka2NrMERoL1E5RjJSNFE3Ymp2ZmZra1RweVdock93aGFtbFROMmlzVQovT3BwTGlOS3dsR2RYam9tY1ErWjlSWUVzZHRDcks4bDUwRVZaZXE4NmJyS0FaVmtBQ2tubm05QkNsSjRJVjZGCnZEMFJPbXZxN0FVdnUrWW9wSEhSUGs2Y2JZcndZTVltZ2p3YlhsYlA4ZEtDVzRoWnNxTGdsL3dwV3JNNnRzOG8KYXhLREJtK094K2F3YWpsNGIwRHNmVXI4THNKT3NrY1dRMnFDZ25HM28zdVg5OUZ3SzlvaytMZlM5Y2FNRXhpVAovMlNocmtMSE1wVHpSbWJzeTdQd3NuZFJ2ZjlXYk5wZXpvM2o2NkE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeTdSaUxMVjNSOTFEUnJwUHhpYk5FVUNKa3JzUUxORzVRVXpXcCtHc3RFemhYSGZTCjVmcE9meTZmKzg5WjYwakVrcWRyc2lxamtBU1F0aDROMDdUSnpRREk4dmhpRG9oZ3FYZndXSytHWmR3am1tVkcKSHJwK1NabjBtNFM4N2gvUS9ab3JyTyt6UmFtaEg3ajVNUTlWa3M0bXV5eHc4LzNsSXc5RStxbHhpTmMxZ0dDTwp6VGZzQ2xKNXhQdUtpWVVJZ01nN3RnUTNHLzJ5TitDa0UvUU9pRnJnMUNGT2ljY0paMU9JeDBRTGRmOTRxK3ZCCnAyejZTcnBaa1VJQnZhQkVEK2NCRiswK3BtUm5BSnVCRHlmQXZwekJkRGhxQVlUbGdvV1NZL0NVMFdOMFdVQXIKcEJDWkNkeGlZK2Foc2ZOREhOSlgzUENyT0hha1h6TXpidFBPSXdJREFRQUJBb0lCQVFDLy9pYmQ3cmNhODY5NgpGUllsTStMcDFNTVZtZHYzOGo5Q0RiTHZqbU5obUdoNzU2L045R3BSc3RjMDFjenhWcWQzZGZhcWVVZXA4TE9ZCkFxR1RuUHpxakVmWndVTmlZU1dCOUxxQ1RBVkhNZ0lZZmtWbHB1NXFYb0hPcG9BUGk4dEZpeTZKRTI4TFJJTEoKVEdVSjJXTVZOOW9IWmk2YnVQeGpXL3Z1cVErS0lXTzJIRHZoSTZUQW1JSzVZQTlrWTdXMmpvVEZreGk2TmFQbAowQzZhNmZSOWlBZXRkUVFZOFV4U1JHcm5sT3kvSGtMZVNpSTI1VElDMitQOXNwOFl2OWM0eXBPTmVLODFuTFcxCm9aRHpKbjdjRUdmRjVEUFJnWU40d1kxV3MxSTZqbmhjcnB6dHpwR29xcUZQTVZlaEtiNUhUUHFmQXk1TWxzcnYKeXRhYkFEeHhBb0dCQU0xZnZMVUhBWjdPMWdxemxIak5zYU9IeHNVWnUwTjZ1NTV5L3dTbHhuMjJVaFhSNTRZSApRUXBhb3k0UkFkQy9ROFpOM3lyMkllKzlxc2UzOEJwTVJEK21Eb2dEQzMyZnFjenNPM0U5WjNYYmQrTHhDQkxpCjc3cUU0Yjl4RVRYcVdDNXRaU3ZMcFR5U3l5Si9rWWNIV0hRV09mR29mNTl0YllMSURPUFp3N1hiQW9HQkFQM3IKVFFjMFZqOXNCM201VVIzeEF1a1BZb200WTZIdXlwbVNUMlZOd2ZISlpCWXJ2Ty9jbjJXTVlJYmtYTStHYk5nVApYckZXVmprd1JVWkJZcGcvcUwrR2llTmY2N082eGdLaGZVSFlKT3VaY0FhWHFhSTVBYWh0SW16RUF5dkV2TUdrCk9nUm9IbUFyVnA2d2I5RG50cVFpYVhXUmhleTAxRVpKamJqZGNVOVpBb0dBYjliSDQra3AxN3FaVXdDU1JPcjIKNXEvazdhYmlsSSs4cGovSFlsZUliU01oTm1LMWF3WitRODR4K0w4b051NUJVVGRNNVk5ZDBibCt5LzM5MGNSZwpraXl5MHh5ZFlFN1hZQkh4R095d2I3MFJYMU9VNnZ3TVFvMWtoaVZqa3ZISURaaGpOT05VVzFVeEs5cytlOExqClIyeG5KNU56MUhUNTR2TmdHYUNYOUdzQ2dZRUFxRjhiMzdnYnJNaDBtSW1DdVdqME5oaW1qWTRBT3dOOXdxR2IKRmlDZWh6YTBzR0xtVU9NcHF3dVBna0x4TEFjR0s2MkViL0ZCRVlEcG5yR0NzRlFlRUlvazZ1blRBSVhNQVRpVwpOMUFkQTBEbVlPaTJha1NFemVzNEZZbFFWUGlLOVpoeGhEU0tWOWpGQWtzYWlocnNLQ0JOYjlGRVRmYUdmK2tNCkdkWjA2VmtDZ1lBTEkyN3BkU3VtY0xRNDF2SCtDTlBmYUFHckR5WmloUDZiZ1F5MXd6RDNjTHluamQzMHpsVEIKajEyL2xDaW9hQ3grcmxNc2xPZDFENkpraUhkT1hDcC9xcWptUHVMbGxjcVR3SUs0L1Zqczd3M3oyU1ZibDdYZgozaGswdURhVkVSWEh3Ylk5Ujl1akU2YmFvaUFXQ1Z5WkF2RWFnUFhlSlNLMWhCT0VCNEVSNlE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVBpQVIzdXZSSnAzQnRoeGJrdXFhbk13RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURjeE56QTVOREV3TmxvWERUSTJNRGN4TmpBNQpOREV3Tmxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUE4aHkxRXJRc3hvNXBlaEM0SktiMEV5TjZobWxUczk4VXdha052WVowbndTa2NTK0gKK0dodXNMK1dicldFcjNHeUdGL0psWmprVTJKTlpVZXJmTlNuWUVvaEo0ZEJvdUNLZVlDN25aU29XTkVDOEI2agpkV2YvYlJ1Uk9HYyswRlVnYWJTNGNtNkQzcktzcjI4NDd5cHVCZWtGcnhtd29nYVM0QUQ1WjV5K1BONmQ0Y1NMCk93b0hEc1I0bmtjUnNMSUVpQUQ1ZEV1a3M5Q0FEYjE3UUVQVE0wRTErV280cyt2aGt6THRIdkZIcXp0Y29wUjgKYVAyLzh1UWZUWUduWnRWZzRuZnMvZEg5cDdwOUdsKzA5VU9teFN3QnlhS296Z2xsakxPVmRqUm5TZmlVbUp4agpHQXIwM243L2JvVTN5Tmhxa0V6anIrNlUvRHBackZTVThZMEtLd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTWJRV3lHZ0wya0lWd1JEd1lWM1RGNERTZ2dYTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQXZkYzVMUTQyZFRvZ3JRK1pNMXRTbkRGQkRFc0RVWXlwSHVhYWhGV2dreHdpVVFyMGlpMzIzClRkWUNJemVjSEs2RlpTSTRqc0hRWFF3RDZSNG9tM3BGTjRZdWZYYXZqRHgyRmdpbkNzY1RaV3RhM0xCRTZwVkgKNDZ1QnJFTWQzUStIQ2xGSFBKVjVva2dVWjBBQ3JLUHJhQlZIM2FOOVlzTkxYZVpJR3VSS2s2NU5GSzQrSW8zRwoyV0RUVS9ld2U4ckNiZVZIZDI1WWMrSTNzVjFNbGtSNTJIZkt4Mm1JUFdQckVoK0lra3Z4aHh3dUw1T0JVbVF4CkxxVXhMc3FobCtkcFJyM1l4eXU0dndFMElKL2VoOEpNVjdxTUlZN1pmRmdmaXhIL0pFRFB2WmhVOTVjTlhyazEKbmNnYytkc2NKU2NtSjEwWmpWTVJkZ0YxTUdzSjhCN1UKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZVENDQWttZ0F3SUJBZ0lSQVA0b2VkVXFNSnc5QWlPRzlwc2dhZ1V3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURjeE56QTVOREV3TmxvWERUSTJNRGN4TmpBNQpOREV3Tmxvd0x6RXRNQ3NHQTFVRUF3d2tLaTVvYjIxbExXTnNkWE4wWlhJdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUExdzJtSWVIcTdvcS8KaXJqTnp1UTJ6YzJoMEN5YVU2aEVmWTlOK0JkK24rMFhSckRINmtFcHlON2FtUXFUMEc3ZVRmMXhFd3lQcjVLawp2RlNndDRHQ2xuYllNVHIwb1pVN2lTOS9RYnlJZDZCdmlzMDA5amZkcjR5bUhyYkNnRWUxT2hiaHJuSnM4VkRrClJ1RjVkZko5TlNydkFEekxBSHM3WHU0SERtN0ZaOXpUU2gzUDlaQk9PT3hFaThzc3ljMWZLQUoyVk5mSzlnUnQKZDJQN0Ntck5HUkI1bXlZcmtQTVR5UUVxbVBuZTlleThkQUdzcjF1Ym9WNlQvMlZkaml6WFg3RWQxczFqMmZRVQpreEovZFZ1SWF0ODlRWWpOV3ZhQjcxNnYyMEI2Wi9wZzE4N09OQUtXNyttbHVlSkpUdnkzeHNlMkhRaUQrT0dqCkJMWS9wUGtvK3dJREFRQUJvNEdTTUlHUE1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlRHMEZzaApvQzlwQ0ZjRVE4R0ZkMHhlQTBvSUZ6QXZCZ05WSFJFRUtEQW1naVFxTG1odmJXVXRZMngxYzNSbGNpNW9kV0ppCmJHVXRaM0p3WXk1amFXeHBkVzB1YVc4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFYlNZd254R0RqSExhT0sKMy9GeGozTWtQMEpBU3hKMk12YkI1TmZuT1MyR1JvbTVnZzA2ZUZ2Ung5c2pzQ2VTbGFSWXBQUUEvaHYxQ2pPcgpXMlNxMk9tRFdSakZweXVha25DUTNCWStKbkxxT1BMZkI4MFB6bUVKSzJFRitWa1JqeHBaL2E4VVUwSVdJMG1aClZQR0Rab1Ezd20vSGJCTVNSb01jWjFOOEZTZm9vRmVGR0JnYzRHNTBFNUtGeS95ckNvQ2lGcHJtY1VtSFp2M2gKRGRWTW45dTZ3NWZqbXJjUktFOTlLcGNtbkVudFdwRFVZaFZHOEVud1Y3SDZVR2tCcDJOQ2RHYjRsVUVISCtvcQp4R1hrbGtRNjhIQStmVjF5Q3FGbW9pb0R3Rkd4L25pbndQNzhwQ2FqSUJVVURNWS96RTNKcEdzcGFXYlhsZWw5Cmk5ZkdwenM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMXcybUllSHE3b3EvaXJqTnp1UTJ6YzJoMEN5YVU2aEVmWTlOK0JkK24rMFhSckRICjZrRXB5TjdhbVFxVDBHN2VUZjF4RXd5UHI1S2t2RlNndDRHQ2xuYllNVHIwb1pVN2lTOS9RYnlJZDZCdmlzMDAKOWpmZHI0eW1IcmJDZ0VlMU9oYmhybkpzOFZEa1J1RjVkZko5TlNydkFEekxBSHM3WHU0SERtN0ZaOXpUU2gzUAo5WkJPT094RWk4c3N5YzFmS0FKMlZOZks5Z1J0ZDJQN0Ntck5HUkI1bXlZcmtQTVR5UUVxbVBuZTlleThkQUdzCnIxdWJvVjZULzJWZGppelhYN0VkMXMxajJmUVVreEovZFZ1SWF0ODlRWWpOV3ZhQjcxNnYyMEI2Wi9wZzE4N08KTkFLVzcrbWx1ZUpKVHZ5M3hzZTJIUWlEK09HakJMWS9wUGtvK3dJREFRQUJBb0lCQVFERlVUeXhzZnhCU3dWYwpYeHhYVElZTVp6U2xNWWVZWXJnVkRMdlplcFV3WC9ZUFluekxyMmFMYkE3ZWhSb0RFUGJnVUQ3RDM2Nm14Y0pwCkdxMHNNcVNETWlCRGEzaXlHWjg2ekYzVER3MlgxWmtDbmk2T0M4eFlHcEVCZFdjWkZMSnZ6amJjUFJsQWdad3kKZlFkWTlWbDB3eVB2NzlmRFpVNmdWMzRaL0FFY3ZZNENhdGFnYUZXd3Z1amFYVk55YmYyREVpYjllMll3UUVmYwpHQVluemR4aVE5Rm9jM0JoN0tRMDNCQ2tjMGlYTHEzUHRnNlZpbkpvZnNWbkY5RGxVc3JOWU5VeEZkbndjRnlTCm1NM3E1YzFaVytVeFVZdWxVSnVyaXlEbmZueWtCbHNmTis3cEdiYlB0aURRQUFLUlc2VHV1VmdCTk12ZXcwQjEKbFVOYmh1NGhBb0dCQU4vUngrbisrL2xwYXZ2d3FIKyt5VndJa0xGNzB1WTUrVlZKMDVyZUNNRU90Nk9YVG5NdgpENDgvZUpRTmlqRWRyU0hnakluUDV2RVl6cU41bkJsbnVqRXUwSmhPTjFxbndtaDJNd2dzdnA2bVcyZEdKMHhFCkNYcGprUUF6UTcreVZ5cHBQZ1d1MFNmUkZsUnFKZ2M0SndqdFpJY0FvY0tnMkdtTWc1NnkxcWNOQW9HQkFQWDUKTlh5K016MG5BL25YSzlBYmNWY0ZiTnNTaUpsSGxrN0ZvcDhVZVZNOUxhYTlwUW1zaWxmLzNrb21SQjByMEZrSgpsdmFtVmR4TUdvUGVUSDVJZE56Sks3WXRoSm9uNm1hYW9MR3g4Sk9hZTBzYWlGeGN4MUtYMlNVWWJ3TUJQQVR3Ck5vQ2VYQTc4QitKeE9uTmRxckVKTGNCMkc1bk4wRkR6QVVxRTd3NG5Bb0dBRnBXZmU1QWNNdVdkUXdEY3I4ODcKbUVyUTl1Zk10eWlBYlVlK3ozQzZKMmpweE5zZXNtYThSak1jWXF3ZkZxZXM4YThyM3pnWVVKbTFPQytzUGJBRwp6TEd4b0x5N3Z5MFFZK1FSY0RDN3AxeVgrb3JNcWxodk1HZGRtVXlTK0lQeFlia3U1Zm5tNXdLbEl5MTIydUdpCnByYjFudDNFZE5Rd0lpNW9sWm5zS1AwQ2dZRUF6NzFYOVREV0taR29BL3c4WHBpdTBxWWNWN0dCZUtORFNPZ1YKL25EV1B2enViMksvM2puQTVhMk4yZVlUcE9kNklaaTl6VGFTVVdwZEFuNWU4RkRWa2hxOU5qR2ZTbXJueHh4VgpGMzZIQnNKejJ1eGZ1bElKYmJJZGpQemoxUS9YMXZ2aHJDTVM4UHplMDlwNVdUSUVsVnlCTFlrU3FvVnVxTTl6CmliSllEQVVDZ1lCYjdXWEdQWVBYQitZcHJYZVdGdmFFRlk0L1hLNTQ0L2JlVzd6OVlMY3VwMTR0enMzQys2dTEKVk50OFlaOURQelpoN0IyVXlIYTRjTkFPS3poY29mVHJ6KzNCWVRvb1NxU1Mwb1dvcXQxMEJkU2o1SnZoOTJ4bwpUZ0VwaHhoTUdrdjlJZTVLTkpRVlM4N3NCSXliYVVEMUFuSUZoQ2hKaStpNTVzdkhNZnRmOXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 30e2039bf83433e9f8a266827157a8b2d013895720e631ea8a6366e077fa9c08
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.1.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.4@sha256:09ab77d324ef4d31f7d341f97ec5a2a4860910076046d57a2d61494d426c6301
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: b0d2234857ce90387e77c2bfed3154d6366fbb66fe17de3f45d559cc62b318f3
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.4@sha256:bac057a5130cf75adf5bc363292b1f2642c0c460ac9ff018fcae3daf64873871
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 30e2039bf83433e9f8a266827157a8b2d013895720e631ea8a6366e077fa9c08
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.1.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=false --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.1.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: 192.168.1.20
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
