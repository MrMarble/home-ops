---
- name: Get Docker info
  community.docker.docker_host_info:
  register: result

- name: Ensure Docker is running on a supported operating system
  ansible.builtin.fail:
    msg: Docker is not running on a supported operating system
  when: result.host_info.OperatingSystem == "Docker Desktop"

- name: Download boot image
  ansible.builtin.get_url:
    url: "{{ pxe_server_boot_image_url }}"
    dest: "{{ role_path }}/files/data/iso/{{ pxe_server_boot_image_url | basename }}"
    checksum: "{{ pxe_server_boot_image_checksum }}"
    mode: "0644"
  register: boot_image

- name: Extract boot image
  ansible.builtin.command:
    cmd: xorriso -osirrox on -indev {{ boot_image.dest }} -extract / {{ role_path }}/files/data/os
    creates: "{{ role_path }}/files/data/os/.treeinfo"

- name: Generate dnsmasq config
  ansible.builtin.template:
    src: dnsmasq.conf.j2
    dest: "{{ role_path }}/files/data/pxe-config/dnsmasq.conf"
    mode: "0644"

- name: Generate GRUB config
  ansible.builtin.template:
    src: grub.cfg.j2
    dest: "{{ role_path }}/files/data/pxe-config/grub.cfg"
    mode: "0644"

- name: Generate init config for each machine
  ansible.builtin.template:
    src: kickstart.ks.j2
    dest: "{{ role_path }}/files/data/init-config/{{ hostvars[item]['mac'] }}.ks"
    mode: "0644"
  loop: "{{ groups['metal'] }}"

- name: Start the ephemeral PXE server
  community.docker.docker_compose:
    project_src: "{{ role_path }}/files"
    state: present
    build: true
