{
  extends: [
    "config:base",
    "docker:enableMajor",
    ":disableRateLimiting",
    ":dependencyDashboard",
    ":semanticCommits",
    ":enablePreCommit",
    ":automergeDigest",
    ":automergeBranchPush",
    "github>MrMarble/home-ops//.github/renovate/autoMerge",
    "github>MrMarble/home-ops//.github/renovate/labels",
    "github>MrMarble/home-ops//.github/renovate/semanticCommits",
    "github>MrMarble/home-ops//.github/renovate/commitMessage",
    "github>MrMarble/home-ops//.github/renovate/groups",
  ],
  platform: "github",
  username: "pepinillo-bot[bot]",
  repositories: ["MrMarble/home-ops"],
  onboarding: false,
  requireConfig: false,
  gitAuthor: "pepinillo-bot <101514388+pepinillo-bot[bot]@users.noreply.github.com>",
  dependencyDashboardTitle: "Renovate Dashboard ðŸ¤–",
  suppressNotifications: ["prIgnoreNotification"],
  rebaseWhen: "conflicted",
  commitBodyTable: true,
  // set up renovate managers
  "docker-compose": {
    fileMatch: ["ansible/.+/docker-compose.*\\.ya?ml(\\.j2)?$"],
  },
  flux: {
    fileMatch: ["cluster/.+\\.ya?ml$"],
  },
  "helm-values": {
    fileMatch: ["cluster/.+\\.ya?ml$"],
  },
  helmv3: {
    fileMatch: ["charts/.+/Chart\\.ya?ml$"],
  },
  kubernetes: {
    fileMatch: ["cluster/.+\\.ya?ml$"],
  },
  regexManagers: [
    {
      description: "Process CRD dependencies",
      fileMatch: ["cluster/.+\\.ya?ml$"],
      matchStrings: [
        // GitRepository where 'Git release/tag' matches 'Helm' version
        "registryUrl=(?<registryUrl>\\S+) chart=(?<depName>\\S+)\n.*?(?<currentValue>[^-\\s]*)\n",
        // Kustomization where 'GitHub release artifact URL' matches 'Docker image' version
        "datasource=(?<datasource>\\S+) image=(?<depName>\\S+)\n.*?-\\s(.*?)/(?<currentValue>[^/]+)/[^/]+\n",
      ],
      datasourceTemplate: "{{#if datasource}}{{{datasource}}}{{else}}helm{{/if}}",
    },
    {
      description: "Process various dependencies",
      fileMatch: ["ansible/.+\\.ya?ml$", "cluster/.+\\.ya?ml$"],
      matchStrings: [
        'datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)( versioning=(?<versioning>\\S+))?\n.*?"(?<currentValue>.*)"\n',
      ],
      datasourceTemplate: "{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}",
      versioningTemplate: "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}",
    },
    {
      description: "Process raw GitHub URLs",
      fileMatch: ["cluster/.+\\.ya?ml$"],
      matchStrings: [
        "https:\\/\\/raw.githubusercontent.com\\/(?<depName>[\\w\\d\\-_]+\\/[\\w\\d\\-_]+)\\/(?<currentValue>[\\w\\d\\.\\-_]+)\\/.*",
      ],
      datasourceTemplate: "github-releases",
      versioningTemplate: "semver",
    },
  ],
  packageRules: [
    // setup datasources
    {
      matchDatasources: ["helm"],
      ignoreDeprecated: true,
    },
    {
      matchDatasources: ["docker"],
      commitMessageExtra: "to {{newVersion}}",
    },
    // packages with custom versioning
    {
      matchDatasources: ["docker"],
      versioning: "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-(?<compatibility>.*)$",
      matchPackageNames: ["docker.io/blakeblackshear/frigate"],
    },
    {
      matchDatasources: ["docker"],
      versioning: "regex:^RELEASE\\.(?<major>\\d+)-(?<minor>\\d+)-(?<patch>\\d+)T.*Z(-(?<compatibility>.*))?$",
      matchPackageNames: ["quay.io/minio/minio"],
    },
    // packages with loose versioning
    {
      matchDatasources: ["docker", "github-releases"],
      versioning: "loose",
      matchPackageNames: [
        "ghcr.io/k8s-at-home/plex",
        "ghcr.io/k8s-at-home/qbittorrent",
        "Hypfer/Valetudo",
      ],
    },
  ],
}
