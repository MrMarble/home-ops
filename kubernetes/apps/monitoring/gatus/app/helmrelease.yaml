---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: gatus
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            order: 1
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 14.10@sha256:71ddc70edccf201d6a521fe6216bc58d8c7c856a1ef96c4d4fbe9f548818ea4d
            envFrom: &envFrom
              - secretRef:
                  name: gatus-secret
          # TODO: Convert this to a proper 'sidecar' container someday
          init-config:
            order: 2
            image: &configSyncImage
              repository: ghcr.io/kiwigrid/k8s-sidecar
              tag: 1.25.4@sha256:cccfe4f9eaf2e2c63762e4ac261a3f353e38253da77027485178978e08df95d0
            env: &configSyncEnv
              FOLDER: /config
              LABEL: gatus.io/enabled
              NAMESPACE: ALL
              RESOURCE: both
              UNIQUE_FILENAMES: true
              METHOD: LIST
            resources: &resources
              requests:
                cpu: 10m
              limits:
                memory: 128Mi
        containers:
          main:
            image:
              repository: ghcr.io/twin/gatus
              tag: v5.8.0@sha256:fecb4c38722df59f5e00ab4fcf2393d9b8dad9161db208d8d79386dc86da8a55
            env:
              TZ: Europe/Madrid
              GATUS_CONFIG_PATH: /config
              CUSTOM_WEB_PORT: &port 80
            envFrom: *envFrom
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources: *resources
          config-sync:
            image: *configSyncImage
            env:
              <<: *configSyncEnv
              METHOD: WATCH
            securityContext: *securityContext
            resources: *resources
        pod:
          dnsConfig:
            options:
              - { name: ndots, value: "1" }
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            runAsNonRoot: true
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
    service:
      main:
        ports:
          http:
            port: *port
    serviceMonitor:
      main:
        enabled: true
    ingress:
      main:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: ingress.${SECRET_DOMAIN}
        hosts:
          - host: &host status.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    serviceAccount:
      create: true
      name: gatus
    persistence:
      config:
        enabled: true
        type: emptyDir
      config-file:
        type: configMap
        name: gatus-configmap
        globalMounts:
          - path: /config/config.yaml
            subPath: config.yaml
            readOnly: true
