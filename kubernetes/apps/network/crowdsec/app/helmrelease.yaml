---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app crowdsec
spec:
  interval: 30m
  chart:
    spec:
      chart: crowdsec
      version: 0.15.0
      sourceRef:
        kind: HelmRepository
        name: crowdsec
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    # for raw logs format: json or cri (docker|containerd)qqq
    container_runtime: containerd
    image:
      repository: ghcr.io/crowdsecurity/crowdsec
      tag: v1.6.8
    config:
      # https://docs.crowdsec.net/docs/notification_plugins/http#enabling-the-plugin
      profiles.yaml: |
        notifications:
          - http_default
    agent:
      # To specify each pod you want to process it logs (pods present in the node)
      acquisition:
        # The namespace where the pod is located
        - namespace: network
          # The pod name
          podName: nginx-external-controller-*
          # as in crowdsec configuration, we need to specify the program name so the parser will match and parse logs
          program: nginx
          # since the file is a symlink, we cant use inotify, so we need to use os.stat
          poll_without_inotify: true
      env:
        - name: DISABLE_crONLINE_API
          value: "false"
        # As we are running Nginx, we want to install the Nginx collection
        - name: COLLECTIONS
          value: >-
            crowdsecurity/linux
            crowdsecurity/nginx
            crowdsecurity/base-http-scenarios
            crowdsecurity/http-cve
        - name: PARSERS
          value: >-
            crowdsecurity/cri-logs
            crowdsecurity/docker-logs
        - name: SCENARIOS
          value: >-
            LePresidente/jellyfin-bf
            crowdsecurity/home-assistant-bf
        - name: TZ
          value: "Europe/Madrid"
        - name: DISABLE_ONLINE_API
          value: "false"
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 150m
          memory: 100Mi
      # -- Enable persistent volumes
      persistentVolume:
        # -- Persistent volume for config folder. Stores local config (parsers, scenarios etc.)
        config:
          enabled: true
          accessModes:
            - ReadWriteMany
          storageClassName: standard-rwx
          size: 100Mi
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
    lapi:
      env:
        # by default disable the agent for local API pods
        - name: DISABLE_AGENT
          value: "true"
        - name: ENROLL_KEY
          valueFrom:
            secretKeyRef:
              name: crowdsec-secret
              key: enroll_key
        - name: ENROLL_INSTANCE_NAME
          value: "pepinillo@cluster-0"
      dashboard:
        enabled: false
        ingress:
          enabled: false
          labels:
            version: v1
            k8s-app: "{{ .Release.Name }}"
            type: lapi-dashboard
          ingressClassName: internal
          host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
          tls:
            - hosts:
              - *host
      resources:
        requests:
          cpu: 150m
          memory: 100M
        limits:
          memory: 100M
      # -- Enable persistent volumes
      persistentVolume:
        # -- Persistent volume for data folder. Stores e.g. registered bouncer api keys
        data:
          enabled: true
          accessModes:
            - ReadWriteOnce
          storageClassName: standard-rwx
          size: 1Gi
        # -- Persistent volume for config folder. Stores e.g. online api credentials
        config:
          enabled: true
          accessModes:
            - ReadWriteOnce
          storageClassName: standard-rwx
          size: 100Mi
      extraVolumeMounts:
        notifications:
          type: secret
          name: crowdsec-secret
          globalMounts:
            - path: /etc/crowdsec_data/notifications/http.yaml
              subPath: http.yaml
              readOnly: true
      metrics:
        enabled: false
        serviceMonitor:
          enabled: false
      strategy:
        type: Recreate
