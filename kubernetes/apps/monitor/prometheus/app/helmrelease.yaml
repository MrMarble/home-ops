---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app prometheus
spec:
  interval: 30m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 58.5.3
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    crds:
      enabled: true
    cleanPrometheusOperatorObjectNames: true
    grafana:
      enabled: false
      forceDeployDatasources: true
      forceDeployDashboards: true

    kubeApiServer:
      serviceMonitor:
        selector:
          k8s-app: kube-apiserver
    kubeScheduler:
      service:
        selector:
          k8s-app: kube-scheduler
    kubeControllerManager: &kubeControllerManager
      service:
        selector:
          k8s-app: kube-controller-manager
    kubeEtcd:
      <<: *kubeControllerManager # etcd runs on control plane nodes
    kubeProxy:
      enabled: false
    prometheus:
      ingress:
        enabled: true
        ingressClassName: internal
        pathType: Prefix
        hosts:
          - &host prometheus.${SECRET_DOMAIN}
        tls:
          - hosts:
              - *host
      prometheusSpec:
        scrapeInterval: 1m # Must match interval in Grafana Helm chart
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        ruleSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        enableAdminAPI: true
        walCompression: true
        remoteWrite:
          - url: replaced
            basicAuth:
              username: replaced
              password: replaced
    prometheus-node-exporter:
      fullnameOverride: node-exporter
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels: ["__meta_kubernetes_pod_node_name"]
              targetLabel: kubernetes_node
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
      metricLabelsAllowlist:
        - pods=[*]
        - deployments=[*]
        - persistentvolumeclaims=[*]
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels: ["__meta_kubernetes_pod_node_name"]
              targetLabel: kubernetes_node
  valuesFrom:
    - kind: Secret
      name: prometheus-secret
      targetPath: prometheus.prometheusSpec.remoteWrite[0].basicAuth.password
      valuesKey: GRAFANA_CLOUD__PASSWORD
    - kind: Secret
      name: prometheus-secret
      targetPath: prometheus.prometheusSpec.remoteWrite[0].basicAuth.username
      valuesKey: GRAFANA_CLOUD__USERNAME
    - kind: Secret
      name: prometheus-secret
      targetPath: prometheus.prometheusSpec.remoteWrite[0].url
      valuesKey: GRAFANA_CLOUD__ENDPOINT
