---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: qbtools
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: qbittorrent
      namespace: default
  values:
    controllers:
      main:
        enabled: true
        type: cronjob
        cronjob: &cronJobSpec
          schedule: "@hourly"
          timeZone: &timeZone Europe/Madrid
          concurrencyPolicy: Forbid
          successfulJobsHistory: 1
          failedJobsHistory: 1
        containers:
          main:
            image: &image
              repository: ghcr.io/buroa/qbtools
              tag: v0.15.1@sha256:dc8957554902738837d1d0a6b4c4af5e27e1454341b0d9df5992be51cc1ecd65
            env: &env
              TZ: *timeZone
            args:
              [
                "tagging",
                "--added-on",
                "--expired",
                "--sites",
                "--unregistered",
                "--not-working",
                "--server",
                "qbittorrent.default.svc.cluster.local",
                "--port",
                "80",
                "--config",
                "/config/config.yaml",
              ]
            resources: &resources
              requests:
                cpu: 25m
                memory: 128M
              limits:
                memory: 256M
        pod:
          restartPolicy: OnFailure
          securityContext: &securityContext
            runAsUser: 568
            runAsGroup: 568
            runAsNonRoot: true
      orphaned:
        type: cronjob
        cronjob:
          <<: *cronJobSpec
          schedule: "@daily"
        containers:
          main:
            image: *image
            env: *env
            args:
              [
                "orphaned",
                "--exclude-pattern",
                "*_unpackerred*",
                "--exclude-pattern",
                "*/manual/*",
                "--dry-run",
                "--server",
                "qbittorrent.default.svc.cluster.local",
                "--port",
                "80",
              ]
            resources: *resources
        pod:
          restartPolicy: OnFailure
          securityContext: *securityContext
      reannounce:
        containers:
          main:
            image: *image
            env: *env
            args:
              [
                "reannounce",
                "--process-seeding",
                "--server",
                "qbittorrent.default.svc.cluster.local",
                "--port",
                "80",
              ]
            resources: *resources
        pod:
          securityContext: *securityContext
    service:
      main:
        enabled: false
    persistence:
      config-file:
        type: configMap
        name: qbtools-configmap
        advancedMounts:
          main:
            main:
              - path: /config/config.yaml
                subPath: config.yaml
                readOnly: true
      media:
        type: nfs
        server: 192.168.1.25
        path: /mnt/Data/Media
        advancedMounts:
          orphaned:
            main:
              - path: /media
