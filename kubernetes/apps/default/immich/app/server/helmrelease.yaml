---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app immich-server
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: redis
      namespace: database
    - name: cloudnative-pg
      namespace: database
  values:
    controllers:
      immich-server:
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-server
              # renovate: datasource=github-releases depName=immich-app/immich
              tag: v1.117.0
            env:
              IMMICH_PORT: &port 3001
            envFrom:
              - secretRef:
                  name: immich-secret
              - configMapRef:
                  name: immich-config
            probes:
              liveness: &probes
                enabled: false
                custom: true
                spec:
                  httpGet:
                    path: /api/server/ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 100m
                memory: 250Mi
              limits:
                memory: 1Gi
        pod:
          securityContext:
            supplementalGroups:
              - 568

    service:
      app:
        controller: immich-server
        ports:
          http:
            port: *port

    ingress:
      app:
        enabled: true
        className: internal
        annotations:
          nginx.ingress.kubernetes.io/proxy-body-size: "0"
          nginx.ingress.kubernetes.io/server-snippets: |
            location / {
              proxy_set_header Upgrade $http_upgrade;
              proxy_http_version 1.1;
              proxy_set_header X-Forwarded-Host $http_host;
              proxy_set_header X-Forwarded-Proto $scheme;
              proxy_set_header X-Forwarded-For $remote_addr;
              proxy_set_header Host $host;
              proxy_set_header Connection "upgrade";
              proxy_cache_bypass $http_upgrade;
            }
        hosts:
          - host: &host photos.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts: [*host]

    persistence:
      library:
        enabled: true
        existingClaim: immich-nfs
        globalMounts:
          - path: /usr/src/app/upload
      geocoding-dump:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /usr/src/app/.reverse-geocoding-dump
      transformers-cache:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /usr/src/app/.transformers_cache
