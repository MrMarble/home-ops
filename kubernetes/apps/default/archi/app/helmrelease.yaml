---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app archi
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      archi:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          plugins:
            image:
              repository: ghcr.io/linuxcontainers/alpine
              tag: latest
            command: ['sh', '-c']
            args:
              - |
                for url in \
                  https://github.com/Citrinate/FreePackages/releases/latest/download/FreePackages.zip; do \
                  filename=$(basename "$url")
                  wget -O /tmp/$filename "$url" && \
                  unzip -o /tmp/$filename -d /app/plugins && \
                  rm /tmp/$filename
                done
        containers:
          app:
            image:
              repository: ghcr.io/justarchinet/archisteamfarm
              tag: 6.2.0.0
            env:
              TZ: Europe/Madrid
              ASF_ARGS: "--process-required --no-restart"
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 15m
              limits:
                memory: 500Mi
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            runAsNonRoot: true
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch

    service:
      app:
        controller: archi
        ports:
          http:
            primary: true
            port: 1242

    ingress:
      app:
        className: internal
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts: [*host]

    persistence:
      data:
        enabled: true
        type: nfs
        server: "192.168.1.25"
        path: "/mnt/Data/ASF"
        globalMounts:
          - path: /app/config
            readOnly: false
      plugins:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /app/plugins
            readOnly: false
      tmp:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /tmp
