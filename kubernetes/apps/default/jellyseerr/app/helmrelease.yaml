---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app jellyseerr
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: volsync
      namespace: storage
    - name: radarr
    - name: sonarr
    - name: jellyfin
  values:
    controllers:
      main:
        containers:
          main:
            image:
              repository: ghcr.io/fallenbagel/jellyseerr:develop
              tag: develop@sha256:ed716933d1ad4de0705383fe841760ff34bb1ab7927445bbc70109cef7fda8ff
            env:
              TZ: Europe/Madrid
              LOG_LEVEL: info
              PORT: &port 80
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/v1/status
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 15m
                memory: 324M
              limits:
                memory: 324M

        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            runAsNonRoot: true
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: *app

    service:
      main:
        ports:
          http:
            port: *port

    ingress:
      main:
        enabled: true
        className: "external"
        annotations:
          external-dns.alpha.kubernetes.io/target: "ingress.${SECRET_DOMAIN}"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: "Jellyseerr"
          gethomepage.dev/group: "Media"
          gethomepage.dev/icon: "jellyseerr"
          gethomepage.dev/widget.type: "jellyseerr"
          gethomepage.dev/widget.url: "http://jellyseerr.default.svc.cluster.local"
          gethomepage.dev/widget.key: ${SECRET_JELLYSEERR_APIKEY}
        hosts:
          - host: &host "jellyseerr.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: jellyseerr
        globalMounts:
          - path: /app/config
      tmp:
        type: emptyDir
