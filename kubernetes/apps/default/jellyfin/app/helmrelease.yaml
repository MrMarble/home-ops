---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app jellyfin
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      enableServiceLinks: false
      nodeSelector:
        intel.feature.node.kubernetes.io/gpu: "true"
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: docker.io/jellyfin/jellyfin
              tag: 10.8.13-1
            env:
              DOTNET_SYSTEM_IO_DISABLEFILELOCKING: "true"
              JELLYFIN_FFmpeg__probesize: 50000000
              JELLYFIN_FFmpeg__analyzeduration: 50000000
              JELLYFIN_PublishedServerUrl: &loadBalancerIP 192.168.10.55
              TZ: Europe/Madrid
            resources:
              requests:
                gpu.intel.com/i915: 1
                cpu: 100m
                memory: 1000Mi
              limits:
                gpu.intel.com/i915: 1
                memory: 6000Mi

        pod:
          nodeSelector:
            intel.feature.node.kubernetes.io/gpu: "true"
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            runAsNonRoot: true
            fsGroupChangePolicy: "OnRootMismatch"
            supplementalGroups:
              - 44
              - 109
              - 100

    service:
      main:
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: *loadBalancerIP
        ports:
          http:
            port: 8096

    ingress:
      main:
        enabled: true
        className: "external"
        annotations:
          external-dns.alpha.kubernetes.io/target: "ingress.${SECRET_DOMAIN}"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter '</body>' '<script plugin="Jellyscrub" version="1.1.1.0" src="/Trickplay/ClientScript"></script></body>';
            sub_filter_once on;
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: "Jellyfin"
          gethomepage.dev/group: "Media"
          gethomepage.dev/icon: "jellyfin"
          gethomepage.dev/widget.type: "jellyfin"
          gethomepage.dev/widget.url: "http://jellyfin.default.svc.cluster.local:8096"
          gethomepage.dev/widget.key: ${SECRET_JELLYFIN_APIKEY}
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      config:
        enabled: true
        existingClaim: jellyfin
        globalMounts:
          - path: /config
      media:
        enabled: true
        type: nfs
        server: 192.168.1.25
        path: /mnt/Data/Media
        globalMounts:
          - path: /media
      transcode:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /transcode
      cache:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /cache
