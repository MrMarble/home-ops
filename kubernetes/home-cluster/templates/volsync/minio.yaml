---
apiVersion: v1
kind: Secret
metadata:
  name: "${APP}-volsync"
stringData:
  RESTIC_REPOSITORY: "${RESTIC_REPOSITORY}/${APP}"
  RESTIC_PASSWORD: ${RESTIC_PASSWORD}
  AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
  AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
---
apiVersion: volsync.backube/v1alpha1
kind: ReplicationSource
metadata:
  name: "${APP}"
spec:
  sourcePVC: "${APP}"
  trigger:
    schedule: "0 * * * *"
  restic:
    copyMethod: "${VOLSYNC_COPYMETHOD:-Snapshot}"
    pruneIntervalDays: 7
    repository: "${APP}-volsync"
    volumeSnapshotClassName: "${VOLSYNC_SNAPSHOTCLASS:-zfs-block}"
    cacheCapacity: "${VOLSYNC_CACHE_CAPACITY:-8Gi}"
    cacheStorageClassName: "${VOLSYNC_CACHE_SNAPSHOTCLASS:-local-hostpath}"
    cacheAccessModes: ["${VOLSYNC_CACHE_ACCESSMODES:-ReadWriteOnce}"]
    storageClassName: "${VOLSYNC_STORAGECLASS:-zfs-block}"
    accessModes: ["${VOLSYNC_ACCESSMODES:-ReadWriteOnce}"]
    moverSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
    retain:
      hourly: 24
      daily: 7
      weekly: 5
---
apiVersion: volsync.backube/v1alpha1
kind: ReplicationDestination
metadata:
  name: "${APP}-dst"
spec:
  trigger:
    manual: restore-once
  restic:
    repository: "${APP}-volsync"
    copyMethod: Snapshot # must be Snapshot
    volumeSnapshotClassName: "${VOLSYNC_SNAPSHOTCLASS:-piraeus-storage}"
    cacheStorageClassName: "${VOLSYNC_CACHE_SNAPSHOTCLASS:-local-hostpath}"
    cacheAccessModes: ["${VOLSYNC_CACHE_ACCESSMODES:-ReadWriteOnce}"]
    cacheCapacity: "${VOLSYNC_CACHE_CAPACITY:-8Gi}"
    storageClassName: "${VOLSYNC_STORAGECLASS:-piraeus-storage}"
    accessModes: ["${VOLSYNC_ACCESSMODES:-ReadWriteOnce}"]
    capacity: "${VOLSYNC_CAPACITY}"
