---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app smarter-device-manager
  namespace: kube-system
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controller:
      type: daemonset
    image:
      repository: registry.gitlab.com/arm-research/smarter/smarter-device-manager
      tag: latest@sha256:4c0c8fadffe4d567cdc8df22029e14aa65a2f7e8497e4d4df10be50d2ddbb1f5
    global:
      nameOverride: *app
    # See https://gitlab.com/arm-research/smarter/smarter-device-manager for configuration examples
    config: |
      - devicematch: ^ttyUSB0$
        nummaxdevices: 1
    # When using hostNetwork make sure you set dnsPolicy to `ClusterFirstWithHostNet`
    hostNetwork: true
    # Defaults to "ClusterFirst" if hostNetwork is false and "ClusterFirstWithHostNet" if hostNetwork is true.
    dnsPolicy: ClusterFirstWithHostNet
    termination:
      # Configure the path at which the file to which the main container's termination message will be written.
      # Overrides the default of `/dev/termination-log` to allow read-only `persistence.devfs` at `/dev`.
      # https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#lifecycle-1
      messagePath: /var/log/termination-log
      # Indicate how the main container's termination message should be populated.
      # Valid options are `File` and `FallbackToLogsOnError`.
      # smarter-device-manager does not support a termination-log, so use the container's log.
      # https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#lifecycle-1
      messagePolicy: FallbackToLogsOnError
    # Custom priority class for different treatment by the scheduler
    # Setting this is not necessary, but it is recommended.
    # https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
    priorityClassName: system-node-critical
    persistence:
      devfs:
        enabled: true
        type: hostPath
        hostPath: /dev
        readOnly: true
      sysfs:
        enabled: true
        type: hostPath
        hostPath: /sys
        readOnly: true
      kubeletsockets:
        enabled: true
        type: hostPath
        hostPath: "/var/lib/kubelet/device-plugins"
    # Configure the securityContext for this pod
    # https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
    # https://gitlab.com/arm-research/smarter/smarter-device-manager/-/blob/master/smarter-device-management-pod-k3s.yaml#L7-10
    securityContext:
      capabilities:
        drop:
          - ALL
      allowPrivilegeEscalation: false
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000
    service:
      main:
        enabled: false
