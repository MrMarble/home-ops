---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: nextcloud
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: cloudnative-pg
      namespace: database
  values:
    image:
      repository: linuxserver/nextcloud
      tag: 27.1.1
    controller:
      type: statefulset
      annotations:
        secret.reloader.stakater.com/reload: &secret nextcloud-secret
        configmap.reloader.stakater.com/reload: &config nextcloud-config
    env:
      PGID: 568
      PUID: 568
    ingress:
      main:
        enabled: true
        ingressClassName: "external"
        annotations:
          external-dns.alpha.kubernetes.io/target: "ingress.${SECRET_DOMAIN}" # Create a CNAME registry
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/proxy-body-size: 4G
          nginx.ingress.kubernetes.io/configuration-snippet: |
            location ^~ /.well-known {
                # The rules in this block are an adaptation of the rules
                # in `.htaccess` that concern `/.well-known`.

                location = /.well-known/carddav { return 301 /remote.php/dav/; }
                location = /.well-known/caldav  { return 301 /remote.php/dav/; }

                location /.well-known/acme-challenge    { try_files $uri $uri/ =404; }
                location /.well-known/pki-validation    { try_files $uri $uri/ =404; }

                # Let Nextcloud's API for `/.well-known` URIs handle all other
                # requests by passing them to the front-end controller.
                return 301 /index.php$request_uri;
            }
        hosts:
          - host: &host "files.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    service:
      main:
        ports:
          http:
            port: 443
    initContainers:
      01-init-db:
        image: ghcr.io/onedr0p/postgres-init:14.9
        imagePullPolicy: IfNotPresent
        envFrom: &envFrom
          - secretRef:
              name: *secret
      02-copy-config:
        image: busybox
        imagePullPolicy: IfNotPresent
        command:
          [
            "/bin/sh",
            "-c",
            "mkdir -p /data/config/www/nextcloud/config && cp /data/custom-config/* /data/config/www/nextcloud/config",
          ]
        volumeMounts:
          - name: custom-config
            mountPath: /data/custom-config
          - name: config
            mountPath: /data/config
    podSecurityContext:
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 8Gi
        storageClass: zfs-block
    persistence:
      data:
        enabled: true
        type: nfs
        server: "192.168.1.25"
        path: "/mnt/Data/cluster/nextcloud"
        mountPath: /data
        mountOptions:
          - nfsvers=4.2
          - nconnect=8
          - hard
          - noatime
          - rsize=131072
          - wsize=131072
      custom-config:
        enabled: true
        type: configMap
        name: *config

    resources:
      limits:
        memory: 512M
      requests:
        cpu: 10m
        memory: 334M
