---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: qbittorrent
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: freenas-iscsi
      namespace: democratic-csi
  values:
    controller:
      type: statefulset
      annotations:
        configmap.reloader.stakater.com/reload: qbittorrent-scripts
    image:
      repository: ghcr.io/onedr0p/qbittorrent
      tag: 4.6.2@sha256:fedb62126c82ae0c7192e9052633411294a27e9c233613c03b0a8d168d160040
    env:
      TZ: Europe/Madrid
      QBITTORRENT__PORT: &port 80
      QBITTORRENT__BT_PORT: &bittorrentPort 50413
      QBT_Application__MemoryWorkingSetLimit: 12000
      QBT_Preferences__WebUI__AlternativeUIEnabled: false
      QBT_Preferences__WebUI__AuthSubnetWhitelistEnabled: true
      QBT_Preferences__WebUI__AuthSubnetWhitelist: 10.244.0.0/16
      QBT_Preferences__WebUI__LocalHostAuth: false
    service:
      main:
        ports:
          http:
            port: *port
      bittorrent:
        enabled: true
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: 192.168.10.202
        ports:
          bittorrent:
            enabled: true
            port: *bittorrentPort
            protocol: TCP
            targetPort: *bittorrentPort
        externalTrafficPolicy: Local
    ingress:
      main:
        enabled: true
        ingressClassName: internal
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: qBittorrent
          gethomepage.dev/group: Widgets
          gethomepage.dev/icon: qbittorrent.png
          gethomepage.dev/widget.type: qbittorrent
          gethomepage.dev/widget.url: "http://qbittorrent.default.svc.cluster.local"
        hosts:
          - host: &host qb.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch
      supplementalGroups: [10000]
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 1Gi
        storageClass: zfs-block
    # Note: If downloading very large torrents it might be worth using NFS for your download directory.
    # Beware if you are downloading torrents directly to a ZFS dataset that dataset will accrue fragmentation.
    persistence:
      media:
        enabled: true
        existingClaim: media
        mountPath: /media
      incomplete:
        enabled: true
        type: emptyDir
      cross-seed-config:
        enabled: true
        type: configMap
        name: cross-seed-config
        mountPath: /config/config.js
        subPath: config.js
        readOnly: true
    resources:
      requests:
        cpu: 250m
        memory: 250Mi
      limits:
        memory: 8Gi

    sidecars:
      cross-seed:
        image: ghcr.io/cross-seed/cross-seed:5.9.1
        imagePullPolicy: IfNotPresent
        args: ["daemon"]
        volumeMounts:
          - { name: config, mountPath: /config }
          - {
              name: cross-seed-config,
              mountPath: /config/config.js,
              subPath: config.js,
              readOnly: true,
            }
          - { name: media, mountPath: /media }
